{"version":3,"sources":["src/html-imports.js"],"names":["scope","constructor","Loader","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","fixUrlsInTemplates","element","base","t$","querySelectorAll","i","length","content","template","n$","n","localName","path","resolveUrlsInStyle","l","attrs","a","at","v","attributes","value","search","resolveUrlsInCssText","replaceAttrUrl","getLoadingDonePromise","then","Promise","resolve","__loaded","addEventListener","event","whenReady","callback","doc","document","whenDocumentReady","watchImportsLoad","readyState","requiredReadyState","checkReady","removeEventListener","READY_EVENT","markTargetLoaded","target","checkDone","parsedCount","importCount","allImports","imports","loadedImports","newImports","errorImports","loadedImport","e","push","errorLoadingImport","IMPORT_SELECTOR","Array","prototype","slice","call","filter","matches","imp","useNative","import","createElement","Object","defineProperty","get","currentScript","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","style","linkUrl","textContent","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","href","URL","test","xhr","async","ok","request","status","load","next","nextContext","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","response","responseText","send","loadDocument","responseType","addNodes","nodes","require","addNode","node","elt","src","dedupe","fetch","tail","match","pieces","split","body","header","indexOf","atob","decodeURIComponent","setTimeout","receive","bind","err","resource","$p","p","importer","documents","loadNode","importLoader","loadSubtree","parent","loaded","__resource","__error","undefined","setAttribute","display","innerHTML","s$","o","getAttribute","assetpath","importsSelectors","__importLink","bootDocument","__doc","loadedAll","_flatten","script","clone","parentNode","replaceChild","_fireEvents","observe","head","__firstImport","appendChild","all","from","map","eventType","dispatchEvent","CustomEvent","__importObserver","MutationObserver","mxns","forEach","addedNodes","nodeType","Node","ELEMENT_NODE","childList","subtree","isIE","navigator","userAgent","handleImport","detail","ready","readyTime","getTime","Date","evt","createEvent","initCustomEvent","bootstrap","attachEvent","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('link' in document.createElement('link'));\n  const flags = {\n    bust: false,\n    log: false\n  };\n\n  /**\n    Support `currentScript` on all browsers as `document._currentScript.`\n\n    NOTE: We cannot polyfill `document.currentScript` because it's not possible\n    both to override and maintain the ability to capture the native value.\n    Therefore we choose to expose `_currentScript` both when native imports\n    and the polyfill are in use.\n  */\n  Object.defineProperty(document, '_currentScript', {\n    get: function() {\n      return scope.currentScript || document.currentScript ||\n        // NOTE: only works when called in synchronously executing code.\n        // readyState should check if `loading` but IE10 is\n        // interactive when scripts run so we cheat.\n        (document.readyState !== 'complete' ?\n          document.scripts[document.scripts.length - 1] : null);\n    },\n    configurable: true\n  });\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const path = {\n\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = (new URL(urlPath, linkUrl)).href;\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return new URL(text, linkUrl).href;\n      }\n    }\n\n  };\n\n  /********************* xhr processor *********************/\n  const xhr = {\n    async: true,\n\n    ok: function(request) {\n      return (request.status >= 200 && request.status < 300) ||\n        (request.status === 304) ||\n        (request.status === 0);\n    },\n\n    load: function(url, next, nextContext) {\n      const request = new XMLHttpRequest();\n      if (flags.bust) {\n        url += '?' + Math.random();\n      }\n      request.open('GET', url, xhr.async);\n      request.addEventListener('readystatechange', function(e) {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = null;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader // Location is a relative path\n                :\n                locationHeader; // Full path\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          next.call(nextContext, !xhr.ok(request) && request,\n            request.response || request.responseText, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    },\n\n    loadDocument: function(url, next, nextContext) {\n      xhr.load(url, next, nextContext).responseType = 'document';\n    }\n\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    addNodes(nodes) {\n      // number of transactions to complete\n      this.inflight += nodes.length;\n      // commence transactions\n      for (let i = 0, l = nodes.length, n;\n        (i < l) && (n = nodes[i]); i++) {\n        this.require(n);\n      }\n      // anything to do?\n      this.checkDone();\n    }\n\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    require(elt) {\n      const url = elt.src || elt.href;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    fetch(url, elt) {\n      flags.log && console.log('fetch', url, elt);\n      if (!url) {\n        setTimeout(() => this.receive(url, elt, {\n          error: 'href must be specified'\n        }, null), 0);\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        setTimeout(() => this.receive(url, elt, null, body), 0);\n      } else {\n        xhr.load(url, this.receive.bind(this, url, elt));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {Object=} err\n     * @param {Object=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n  const importsSelectors = [\n    IMPORT_SELECTOR,\n    'link[rel=stylesheet]:not([type])',\n    'style:not([type])',\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(',');\n\n  // importer\n  // highlander object to manage loading of imports\n  // for any document, importer:\n  // - loads any linked import documents (with deduping)\n  // - whenever an import is loaded, prompts the parser to try to parse\n  // - observes imported documents for new elements (these are handled via the\n  // dynamic importer)\n  const importer = {\n\n    documents: {},\n\n    loadNode: function(node) {\n      importLoader.addNode(node);\n    },\n\n    // load all loadable elements within the parent element\n    loadSubtree: function(parent) {\n      const nodes = parent.querySelectorAll(IMPORT_SELECTOR);\n      // add these nodes to loader's queue\n      importLoader.addNodes(nodes);\n    },\n\n    loaded: function(url, elt, resource, err, redirectedUrl) {\n      flags.log && console.log('loaded', url, elt);\n      // store generic resource\n      // TODO(sorvell): fails for nodes inside <template>.content\n      // see https://code.google.com/p/chromium/issues/detail?id=249381.\n      elt.__resource = resource;\n      elt.__error = err;\n      if (isImportLink(elt)) {\n        let doc = importer.documents[url];\n        // if we've never seen a document at this url\n        if (doc === undefined) {\n          // generate an HTMLDocument from data\n          doc = err ? null : makeDocument(resource, redirectedUrl || url);\n          if (doc) {\n            doc.__importLink = elt;\n            // note, we cannot use MO to detect parsed nodes because\n            // SD polyfill does not report these as mutations.\n            importer.bootDocument(doc);\n          }\n          // cache document\n          importer.documents[url] = doc;\n        }\n        // don't store import record until we're actually loaded\n        // store document resource\n        elt.__doc = doc;\n      }\n    },\n\n    bootDocument: function(doc) {\n      importer.loadSubtree(doc);\n    },\n\n    loadedAll: function() {\n      importer._flatten(document);\n      runScripts();\n      importer._fireEvents(document);\n      importer.observe(document.head);\n    },\n\n    _flatten: function(element) {\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = importer.documents[n.href];\n        if (n.import && !n.import.__firstImport) {\n          n.import.__firstImport = n;\n          importer._flatten(n.import);\n          n.appendChild(n.import);\n          if (document.contains(n.parentNode)) {\n            // TODO(sorvell): need to coordinate with observer in document.head.\n            //importer.observe(n.import);\n          }\n        }\n      }\n    },\n\n    _fireEvents: function(element) {\n      // Wait for pending resources to finish loading before we can fire load/error.\n      // TODO(valdrin) should it check for @import in textContent?\n      const pending = element.querySelectorAll(\n        `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type]),\n       ${IMPORT_SELECTOR} script[src]:not([type])`);\n      Promise.all(Array.from(pending).map(getLoadingDonePromise)).then(() => {\n        const n$ = element.querySelectorAll(IMPORT_SELECTOR);\n        // Inverse order to have events firing bottom-up.\n        for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n          // Don't fire twice same event.\n          if (!n.__loaded) {\n            const eventType = n.import ? 'load' : 'error';\n            flags.log && console.warn('fire', eventType, n.href);\n            n.__loaded = true;\n            n.dispatchEvent(new CustomEvent(eventType));\n          }\n        }\n      });\n    },\n\n    observe: function(element) {\n      if (element.__importObserver) {\n        return;\n      }\n      element.__importObserver = new MutationObserver(function(mxns) {\n        mxns.forEach(function(m) {\n          if (m.addedNodes) {\n            for (let i = 0; i < m.addedNodes.length; i++) {\n              const p = m.addedNodes[i];\n              // TODO(sorvell): x-platform matches\n              if (p.nodeType === Node.ELEMENT_NODE &&\n                p.matches(IMPORT_SELECTOR)) {\n                importer.loadNode(p);\n              }\n            }\n          }\n        });\n      });\n      element.__importObserver.observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n  };\n\n  // loader singleton to handle loading imports\n  const importLoader = new Loader(importer.loaded.bind(importer),\n    importer.loadedAll.bind(importer));\n\n  function isImportLink(elt) {\n    return elt.matches(IMPORT_SELECTOR);\n  }\n\n  /********************* vulcanize style inline processing  *********************/\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\n\n  function fixUrlAttributes(element, base) {\n    for (let i = 0, l = attrs.length, a, at, v;\n      (i < l) && (a = attrs[i]); i++) {\n      at = element.attributes[a];\n      v = at && at.value;\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n        at.value = (a === 'style') ?\n          path.resolveUrlsInCssText(v, base) :\n          path.replaceAttrUrl(v, base);\n      }\n    }\n  }\n\n  function fixUrlsInTemplate(template, base) {\n    const content = template.content;\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.localName == 'style') {\n        path.resolveUrlsInStyle(n, base);\n      } else {\n        fixUrlAttributes(n, base);\n      }\n    }\n    fixUrlsInTemplates(content, base);\n  }\n\n  function fixUrlsInTemplates(element, base) {\n    const t$ = element.querySelectorAll('template');\n    for (let i = 0; i < t$.length; i++) {\n      fixUrlsInTemplate(t$[i], base);\n    }\n  }\n\n  function fixUrls(element, base) {\n    const n$ = element.querySelectorAll(importsSelectors);\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.href) {\n        n.href = new URL(n.getAttribute('href'), base);\n      }\n      if (n.src) {\n        n.src = new URL(n.getAttribute('src'), base);\n      }\n      if (n.localName == 'style') {\n        path.resolveUrlsInStyle(n, base);\n      }\n    }\n    fixUrlsInTemplates(element, base);\n  }\n\n  function markScripts(element, url) {\n    const s$ = element.querySelectorAll('script');\n    for (let i = 0; i < s$.length; i++) {\n      const o = s$[i];\n      if (o.textContent) {\n        o.textContent = o.textContent + `\\n//# sourceURL=${url}`;\n      }\n      if (o.src) {\n        o.setAttribute('src', path.replaceAttrUrl(o.getAttribute('src'), url));\n      }\n    }\n  }\n\n  // done for security reasons. TODO(valdrin) document\n  function runScripts() {\n    const s$ = document.querySelectorAll('import-content script');\n    for (let i = 0; i < s$.length; i++) {\n      const script = s$[i];\n      const clone = document.createElement('script');\n      scope.currentScript = clone;\n      clone.textContent = script.textContent;\n      script.src && clone.setAttribute('src', script.getAttribute('src'));\n      script.parentNode.replaceChild(clone, script);\n    }\n    scope.currentScript = null;\n  }\n\n  function getLoadingDonePromise(element) {\n    return new Promise(resolve => {\n      if (element.__loaded) {\n        resolve();\n      } else {\n        element.addEventListener('load', resolve);\n        element.addEventListener('error', resolve);\n      }\n    }).then((event) => {\n      element.__loaded = true;\n      return event;\n    });\n  }\n\n  function fixDomModules(element, url) {\n    const s$ = element.querySelectorAll('dom-module');\n    for (let i = 0; i < s$.length; i++) {\n      const o = s$[i];\n      const assetpath = o.getAttribute('assetpath') || '';\n      o.setAttribute('assetpath', path.replaceAttrUrl(assetpath, url));\n    }\n  }\n\n\n\n  function makeDocument(resource, url) {\n    // TODO(valdrin): better to use a disconnected document here so that\n    // elements don't upgrade until inserted into main document,\n    // however, this is blocked on https://bugs.webkit.org/show_bug.cgi?id=165617\n    // let doc = document.implementation.createHTMLDocument();\n    const content = document.createElement('import-content');\n    content.setAttribute('import-href', url);\n    content.style.display = 'none';\n    content.innerHTML = resource;\n    markScripts(content, url);\n    // TODO(sorvell): this is specific to users (Polymer) of the dom-module element.\n    fixDomModules(content, url);\n    fixUrls(content, url);\n    return content;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n\n  const isIE = /Trident/.test(navigator.userAgent);\n\n  // call a callback when all HTMLImports in the document at call time\n  // (or at least document ready) have loaded.\n  // 1. ensure the document is in a ready state (has dom), then\n  // 2. watch for loading of imports and call callback when done\n  function whenReady(callback, doc) {\n    doc = doc || document;\n    // if document is loading, wait and try again\n    whenDocumentReady(function() {\n      watchImportsLoad(callback, doc);\n    }, doc);\n  }\n\n  // call the callback when the document is in a ready state (has dom)\n  const requiredReadyState = isIE ? 'complete' : 'interactive';\n  const READY_EVENT = 'readystatechange';\n\n  function isDocumentReady(doc) {\n    return (doc.readyState === 'complete' ||\n      doc.readyState === requiredReadyState);\n  }\n\n  // call <callback> when we ensure the document is in a ready state\n  function whenDocumentReady(callback, doc) {\n    if (!isDocumentReady(doc)) {\n      const checkReady = function() {\n        if (doc.readyState === 'complete' ||\n          doc.readyState === requiredReadyState) {\n          doc.removeEventListener(READY_EVENT, checkReady);\n          whenDocumentReady(callback, doc);\n        }\n      };\n      doc.addEventListener(READY_EVENT, checkReady);\n    } else if (callback) {\n      callback();\n    }\n  }\n\n  function markTargetLoaded(event) {\n    event.target.__loaded = true;\n  }\n\n  // call <callback> when we ensure all imports have loaded\n  function watchImportsLoad(callback, doc) {\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\n    // only non-nested imports\n    imports = Array.prototype.slice.call(imports).filter(function(n) {\n      return !n.matches('import-content ' + IMPORT_SELECTOR);\n    });\n    let parsedCount = 0,\n      importCount = imports.length,\n      newImports = [],\n      errorImports = [];\n\n    function checkDone() {\n      if (parsedCount == importCount && callback) {\n        callback( /**@type {HTMLImportInfo} */ ({\n          allImports: imports,\n          loadedImports: newImports,\n          errorImports: errorImports\n        }));\n      }\n    }\n\n    function loadedImport(e) {\n      markTargetLoaded(e);\n      newImports.push(this);\n      parsedCount++;\n      checkDone();\n    }\n\n    function errorLoadingImport(e) {\n      errorImports.push(this);\n      parsedCount++;\n      checkDone();\n    }\n    if (importCount) {\n      for (let i = 0, imp; i < importCount && (imp = imports[i]); i++) {\n        if (isImportLoaded(imp)) {\n          if (imp.import) {\n            newImports.push(imp);\n          } else {\n            errorImports.push(imp);\n          }\n          parsedCount++;\n          checkDone();\n        } else {\n          imp.addEventListener('load', loadedImport);\n          imp.addEventListener('error', errorLoadingImport);\n        }\n      }\n    } else {\n      checkDone();\n    }\n  }\n\n  function isImportLoaded(link) {\n    return useNative ? link.__loaded ||\n      (link.import && link.import.readyState !== 'loading') :\n      link.__loaded;\n  }\n\n  // make `whenReady` work with native HTMLImports\n  if (useNative) {\n    new MutationObserver(function(mxns) {\n      for (let i = 0, l = mxns.length, m;\n        (i < l) && (m = mxns[i]); i++) {\n        if (m.addedNodes) {\n          handleImports(m.addedNodes);\n        }\n      }\n    }).observe(document.head, {\n      childList: true\n    });\n\n    function handleImports(nodes) {\n      for (let i = 0, l = nodes.length, n;\n        (i < l) && (n = nodes[i]); i++) {\n        if (isImportLink(n)) {\n          handleImport(n);\n        }\n      }\n    }\n\n    function handleImport(element) {\n      const loaded = element.import;\n      if (loaded) {\n        markTargetLoaded({\n          target: element\n        });\n      } else {\n        element.addEventListener('load', markTargetLoaded);\n        element.addEventListener('error', markTargetLoaded);\n      }\n    }\n\n    // make sure to catch any imports that are in the process of loading\n    // when this script is run.\n    (function() {\n      if (document.readyState === 'loading') {\n        const imports = document.querySelectorAll(IMPORT_SELECTOR);\n        for (let i = 0, l = imports.length, imp;\n          (i < l) && (imp = imports[i]); i++) {\n          handleImport(imp);\n        }\n      }\n    })();\n\n  }\n\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\n  // have loaded. This event is required to simulate the script blocking\n  // behavior of native imports. A main document script that needs to be sure\n  // imports have loaded should wait for this event.\n  whenReady(function(detail) {\n    scope.ready = true;\n    scope.readyTime = new Date().getTime();\n    const evt = /** @type {CustomEvent} */ (document.createEvent('CustomEvent'));\n    evt.initCustomEvent('HTMLImportsLoaded', true, true, detail);\n    document.dispatchEvent(evt);\n  });\n\n  if (!useNative) {\n    function bootstrap() {\n      importer.bootDocument(document);\n    }\n\n    if (document.readyState === 'complete' ||\n      (document.readyState === 'interactive' && !window.attachEvent)) {\n      bootstrap();\n    } else {\n      document.addEventListener('DOMContentLoaded', bootstrap);\n    }\n  }\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}