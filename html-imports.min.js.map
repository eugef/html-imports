{"version":3,"sources":["src/html-imports.js"],"names":["scope","constructor","Importer","documents","_loaded","bind","_loadedAll","_importLoader","Loader","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","matches","call","IMPORT_SELECTOR","fixUrlAttributes","element","base","attrs","forEach","a","at","attributes","v","value","search","Path","resolveUrlsInCssText","replaceAttrUrl","fixUrlsInTemplates","t$","querySelectorAll","i","length","content","template","n$","n","localName","resolveUrlsInStyle","getLoadingDonePromise","Promise","resolve","isElementLoaded","__loaded","addEventListener","__errored","useNative","import","readyState","whenReady","callback","doc","document","whenDocumentReady","watchImportsLoad","requiredReadyState","checkReady","removeEventListener","READY_EVENT","imports","Array","prototype","slice","filter","all","map","then","newImports","errorImports","imp","push","allImports","loadedImports","createElement","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","style","linkUrl","textContent","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","href","URL","test","Xhr","async","load","request","XMLHttpRequest","open","redirectedUrl","undefined","locationHeader","getResponseHeader","substr","location","origin","e","console","error","message","_ok","response","responseText","send","status","addNodes","nodes","l","require","checkDone","addNode","elt","src","dedupe","fetch","tail","match","pieces","split","body","header","indexOf","atob","decodeURIComponent","setTimeout","receive","resource","err","$p","p","bootDocument","_loadSubtree","loadNode","parent","__resource","__error","setAttribute","display","innerHTML","s$","o","getAttribute","assetpath","importsSelectors","__importLink","__doc","_flatten","parentNode","replaceChild","_fireEvents","_observe","__firstImport","appendChild","from","eventType","dispatchEvent","CustomEvent","head","__importObserver","MutationObserver","_onMutation","observe","childList","subtree","mutations","j","addedNodes","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","isIE","navigator","userAgent","handleMutations","detail","evt","createEvent","initCustomEvent","bootstrap","importer","attachEvent","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n(function(scope) {\r\n\r\n  /********************* base setup *********************/\r\n  const IMPORT_SELECTOR = 'link[rel=import]';\r\n  const useNative = Boolean('import' in document.createElement('link'));\r\n  const flags = {\r\n    bust: false,\r\n    log: false\r\n  };\r\n\r\n  /**\r\n    Support `currentScript` on all browsers as `document._currentScript.`\r\n    NOTE: We cannot polyfill `document.currentScript` because it's not possible\r\n    both to override and maintain the ability to capture the native value.\r\n    Therefore we choose to expose `_currentScript` both when native imports\r\n    and the polyfill are in use.\r\n  */\r\n  let currentScript = null;\r\n  Object.defineProperty(document, '_currentScript', {\r\n    get: function() {\r\n      return currentScript || document.currentScript ||\r\n        // NOTE: only works when called in synchronously executing code.\r\n        // readyState should check if `loading` but IE10 is\r\n        // interactive when scripts run so we cheat.\r\n        (document.readyState !== 'complete' ?\r\n          document.scripts[document.scripts.length - 1] : null);\r\n    },\r\n    configurable: true\r\n  });\r\n\r\n  /********************* path fixup *********************/\r\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\r\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\r\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\r\n\r\n  // path fixup: style elements in imports must be made relative to the main\r\n  // document. We fixup url's in url() and @import.\r\n  const Path = {\r\n    resolveUrlsInStyle: function(style, linkUrl) {\r\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\r\n    },\r\n\r\n    resolveUrlsInCssText: function(cssText, linkUrl) {\r\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\r\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\r\n      return r;\r\n    },\r\n\r\n    replaceUrls: function(text, linkUrl, regexp) {\r\n      return text.replace(regexp, function(m, pre, url, post) {\r\n        let urlPath = url.replace(/[\"']/g, '');\r\n        if (linkUrl) {\r\n          urlPath = (new URL(urlPath, linkUrl)).href;\r\n        }\r\n        return pre + '\\'' + urlPath + '\\'' + post;\r\n      });\r\n    },\r\n\r\n    replaceAttrUrl: function(text, linkUrl) {\r\n      if (text && ABS_URL_TEST.test(text)) {\r\n        return text;\r\n      } else {\r\n        return new URL(text, linkUrl).href;\r\n      }\r\n    }\r\n  };\r\n\r\n  /********************* Xhr processor *********************/\r\n  const Xhr = {\r\n\r\n    async: true,\r\n\r\n    /**\r\n     * @param {!string} url\r\n     * @param {!function(boolean, ?, string=)} callback\r\n     * @return {XMLHttpRequest}\r\n     */\r\n    load: function(url, callback) {\r\n      const request = new XMLHttpRequest();\r\n      if (flags.bust) {\r\n        url += '?' + Math.random();\r\n      }\r\n      request.open('GET', url, Xhr.async);\r\n      request.addEventListener('readystatechange', (e) => {\r\n        if (request.readyState === 4) {\r\n          // Servers redirecting an import can add a Location header to help us\r\n          // polyfill correctly.\r\n          let redirectedUrl = undefined;\r\n          try {\r\n            const locationHeader = request.getResponseHeader('Location');\r\n            if (locationHeader) {\r\n              // Relative or full path.\r\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\r\n                location.origin + locationHeader : locationHeader;\r\n            }\r\n          } catch (e) {\r\n            console.error(e.message);\r\n          }\r\n          const resource = (request.response || request.responseText);\r\n          callback(!Xhr._ok(request), resource, redirectedUrl);\r\n        }\r\n      });\r\n      request.send();\r\n      return request;\r\n    },\r\n\r\n    _ok: function(request) {\r\n      return (request.status >= 200 && request.status < 300) ||\r\n        (request.status === 304) ||\r\n        (request.status === 0);\r\n    }\r\n  };\r\n\r\n  /********************* loader *********************/\r\n  // This loader supports a dynamic list of urls\r\n  // and an oncomplete callback that is called when the loader is done.\r\n  // NOTE: The polyfill currently does *not* need this dynamism or the\r\n  // onComplete concept. Because of this, the loader could be simplified\r\n  // quite a bit.\r\n  class Loader {\r\n    constructor(onLoad, onComplete) {\r\n      this.cache = {};\r\n      this.onload = onLoad;\r\n      this.oncomplete = onComplete;\r\n      this.inflight = 0;\r\n      this.pending = {};\r\n    }\r\n\r\n    addNodes(nodes) {\r\n      // number of transactions to complete\r\n      this.inflight += nodes.length;\r\n      // commence transactions\r\n      for (let i = 0, l = nodes.length, n;\r\n        (i < l) && (n = nodes[i]); i++) {\r\n        this.require(n);\r\n      }\r\n      // anything to do?\r\n      this.checkDone();\r\n    }\r\n\r\n    addNode(node) {\r\n      // number of transactions to complete\r\n      this.inflight++;\r\n      // commence transactions\r\n      this.require(node);\r\n      // anything to do?\r\n      this.checkDone();\r\n    }\r\n\r\n    require(elt) {\r\n      const url = elt.src || elt.href;\r\n      // deduplication\r\n      if (!this.dedupe(url, elt)) {\r\n        // fetch this resource\r\n        this.fetch(url, elt);\r\n      }\r\n    }\r\n\r\n    dedupe(url, elt) {\r\n      if (this.pending[url]) {\r\n        // add to list of nodes waiting for inUrl\r\n        this.pending[url].push(elt);\r\n        // don't need fetch\r\n        return true;\r\n      }\r\n      let resource;\r\n      if (this.cache[url]) {\r\n        this.onload(url, elt, this.cache[url]);\r\n        // finished this transaction\r\n        this.tail();\r\n        // don't need fetch\r\n        return true;\r\n      }\r\n      // first node waiting for inUrl\r\n      this.pending[url] = [elt];\r\n      // need fetch (not a dupe)\r\n      return false;\r\n    }\r\n\r\n    fetch(url, elt) {\r\n      flags.log && console.log('fetch', url, elt);\r\n      if (!url) {\r\n        setTimeout(() => this.receive(url, elt, true, {\r\n          error: 'href must be specified'\r\n        }), 0);\r\n      } else if (url.match(/^data:/)) {\r\n        // Handle Data URI Scheme\r\n        const pieces = url.split(',');\r\n        const header = pieces[0];\r\n        let body = pieces[1];\r\n        if (header.indexOf(';base64') > -1) {\r\n          body = atob(body);\r\n        } else {\r\n          body = decodeURIComponent(body);\r\n        }\r\n        setTimeout(() => this.receive(url, elt, false, body), 0);\r\n      } else {\r\n        Xhr.load(url, (error, resource, redirectedUrl) =>\r\n          this.receive(url, elt, error, resource, redirectedUrl));\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!string} url\r\n     * @param {!Element} elt\r\n     * @param {boolean} err\r\n     * @param {Object=} resource\r\n     * @param {string=} redirectedUrl\r\n     */\r\n    receive(url, elt, err, resource, redirectedUrl) {\r\n      this.cache[url] = resource;\r\n      const $p = this.pending[url];\r\n      for (let i = 0, l = $p.length, p;\r\n        (i < l) && (p = $p[i]); i++) {\r\n        // If url was redirected, use the redirected location so paths are\r\n        // calculated relative to that.\r\n        this.onload(url, p, resource, err, redirectedUrl);\r\n        this.tail();\r\n      }\r\n      this.pending[url] = null;\r\n    }\r\n\r\n    tail() {\r\n      --this.inflight;\r\n      this.checkDone();\r\n    }\r\n\r\n    checkDone() {\r\n      if (!this.inflight) {\r\n        this.oncomplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  /********************* importer *********************/\r\n  const importsSelectors = [\r\n    IMPORT_SELECTOR,\r\n    'link[rel=stylesheet]:not([type])',\r\n    'style:not([type])',\r\n    'script:not([type])',\r\n    'script[type=\"application/javascript\"]',\r\n    'script[type=\"text/javascript\"]'\r\n  ].join(',');\r\n\r\n  // importer\r\n  // highlander object to manage loading of imports\r\n  // for any document, importer:\r\n  // - loads any linked import documents (with deduping)\r\n  // - whenever an import is loaded, prompts the parser to try to parse\r\n  // - observes imported documents for new elements (these are handled via the\r\n  // dynamic importer)\r\n  class Importer {\r\n    constructor() {\r\n      this.documents = {};\r\n      this._loaded = this._loaded.bind(this);\r\n      this._loadedAll = this._loadedAll.bind(this);\r\n      this._importLoader = new Loader(this._loaded, this._loadedAll);\r\n    }\r\n\r\n    bootDocument(doc) {\r\n      this._loadSubtree(doc);\r\n    }\r\n\r\n    loadNode(node) {\r\n      this._importLoader.addNode(node);\r\n    }\r\n\r\n    // load all loadable elements within the parent element\r\n    _loadSubtree(parent) {\r\n      const nodes = parent.querySelectorAll(IMPORT_SELECTOR);\r\n      // add these nodes to loader's queue\r\n      this._importLoader.addNodes(nodes);\r\n    }\r\n\r\n    _loaded(url, elt, resource, err, redirectedUrl) {\r\n      flags.log && console.log('loaded', url, elt);\r\n      // store generic resource\r\n      // TODO(sorvell): fails for nodes inside <template>.content\r\n      // see https://code.google.com/p/chromium/issues/detail?id=249381.\r\n      elt.__resource = resource;\r\n      elt.__error = err;\r\n      if (isImportLink(elt)) {\r\n        let doc = this.documents[url];\r\n        // if we've never seen a document at this url\r\n        if (doc === undefined) {\r\n          // generate an HTMLDocument from data\r\n          doc = err ? null : makeDocument(resource, redirectedUrl || url);\r\n          if (doc) {\r\n            doc.__importLink = elt;\r\n            // note, we cannot use MO to detect parsed nodes because\r\n            // SD polyfill does not report these as mutations.\r\n            this._loadSubtree(doc);\r\n          }\r\n          // cache document\r\n          this.documents[url] = doc;\r\n        }\r\n        // don't store import record until we're actually loaded\r\n        // store document resource\r\n        elt.__doc = doc;\r\n      }\r\n    }\r\n\r\n    _loadedAll() {\r\n      this._flatten(document);\r\n      //TODO bring it into this class?\r\n      runScripts();\r\n      this._fireEvents(document);\r\n      this._observe(document.head);\r\n    }\r\n\r\n    _flatten(element) {\r\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\r\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n        n.import = this.documents[n.href];\r\n        if (n.import && !n.import.__firstImport) {\r\n          n.import.__firstImport = n;\r\n          this._flatten(n.import);\r\n          n.appendChild(n.import);\r\n          if (document.contains(n.parentNode)) {\r\n            // TODO(sorvell): need to coordinate with observer in document.head.\r\n            //this.observe(n.import);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    _fireEvents(element) {\r\n      // Wait for pending resources to finish loading before we can fire load/error.\r\n      // TODO(valdrin) should it check for @import in textContent?\r\n      const pending = element.querySelectorAll(\r\n        `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type]),\r\n       ${IMPORT_SELECTOR} script[src]:not([type])`);\r\n      Promise.all(Array.from(pending).map(getLoadingDonePromise)).then(() => {\r\n        const n$ = element.querySelectorAll(IMPORT_SELECTOR);\r\n        // Inverse order to have events firing bottom-up.\r\n        for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\r\n          // Don't fire twice same event.\r\n          if (!n.__loaded) {\r\n            const eventType = n.import ? 'load' : 'error';\r\n            flags.log && console.warn('fire', eventType, n.href);\r\n            n.__loaded = true;\r\n            n.dispatchEvent(new CustomEvent(eventType));\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    _observe(element) {\r\n      if (element.__importObserver) {\r\n        return;\r\n      }\r\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\r\n      element.__importObserver.observe(element, {\r\n        childList: true,\r\n        subtree: true\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @param {Array<MutationRecord>} mutations\r\n     */\r\n    _onMutation(mutations) {\r\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\r\n        if (m.addedNodes) {\r\n          for (let i = 0, l = m.addedNodes.length; i < l; i++) {\r\n            if (isImportLink(m.addedNodes[i])) {\r\n              this.loadNode(m.addedNodes[i]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @type {Function}\r\n   */\r\n  const matches = Element.prototype.matches ||\r\n    Element.prototype.matchesSelector ||\r\n    Element.prototype.mozMatchesSelector ||\r\n    Element.prototype.msMatchesSelector ||\r\n    Element.prototype.oMatchesSelector ||\r\n    Element.prototype.webkitMatchesSelector;\r\n\r\n  /**\r\n   * @param {!Node} node\r\n   * @return {boolean}\r\n   */\r\n  function isImportLink(node) {\r\n    return node.nodeType === Node.ELEMENT_NODE && matches.call(node, IMPORT_SELECTOR);\r\n  }\r\n\r\n  /********************* vulcanize style inline processing  *********************/\r\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\r\n\r\n  function fixUrlAttributes(element, base) {\r\n    attrs.forEach((a) => {\r\n      const at = element.attributes[a];\r\n      const v = at && at.value;\r\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\r\n        at.value = (a === 'style') ?\r\n          Path.resolveUrlsInCssText(v, base) :\r\n          Path.replaceAttrUrl(v, base);\r\n      }\r\n    });\r\n  }\r\n\r\n  function fixUrlsInTemplate(template, base) {\r\n    const content = template.content;\r\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\r\n    for (let i = 0; i < n$.length; i++) {\r\n      const n = n$[i];\r\n      if (n.localName == 'style') {\r\n        Path.resolveUrlsInStyle(n, base);\r\n      } else {\r\n        fixUrlAttributes(n, base);\r\n      }\r\n    }\r\n    fixUrlsInTemplates(content, base);\r\n  }\r\n\r\n  function fixUrlsInTemplates(element, base) {\r\n    const t$ = element.querySelectorAll('template');\r\n    for (let i = 0; i < t$.length; i++) {\r\n      fixUrlsInTemplate(t$[i], base);\r\n    }\r\n  }\r\n\r\n  function fixUrls(element, base) {\r\n    const n$ = element.querySelectorAll(importsSelectors);\r\n    for (let i = 0; i < n$.length; i++) {\r\n      const n = n$[i];\r\n      if (n.href) {\r\n        n.href = new URL(n.getAttribute('href'), base);\r\n      }\r\n      if (n.src) {\r\n        n.src = new URL(n.getAttribute('src'), base);\r\n      }\r\n      if (n.localName == 'style') {\r\n        Path.resolveUrlsInStyle(n, base);\r\n      }\r\n    }\r\n    fixUrlsInTemplates(element, base);\r\n  }\r\n\r\n  function markScripts(element, url) {\r\n    const s$ = element.querySelectorAll('script');\r\n    for (let i = 0, l = s$.length, o; i < l && (o = s$[i]); i++) {\r\n      if (o.textContent) {\r\n        o.textContent = o.textContent + `\\n//# sourceURL=${url}`;\r\n      }\r\n      if (o.src) {\r\n        o.setAttribute('src', Path.replaceAttrUrl(o.getAttribute('src'), url));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replaces all the imported scripts with a clone in order to execute them.\r\n   * Updates the `currentScript`.\r\n   */\r\n  function runScripts() {\r\n    const s$ = document.querySelectorAll('import-content script');\r\n    for (let i = 0, l = s$.length, o; i < l && (o = s$[i]); i++) {\r\n      currentScript = document.createElement('script');\r\n      currentScript.textContent = o.textContent;\r\n      if (o.src) {\r\n        currentScript.setAttribute('src', o.getAttribute('src'));\r\n      }\r\n      o.parentNode.replaceChild(currentScript, o);\r\n    }\r\n    currentScript = null;\r\n  }\r\n\r\n  /**\r\n   * Waits for an element to finish loading. If already done loading, it will\r\n   * mark the elemnt accordingly.\r\n   * @param {!Element} element\r\n   * @return {Promise}\r\n   */\r\n  function getLoadingDonePromise(element) {\r\n    return new Promise(resolve => {\r\n      if (isElementLoaded(element)) {\r\n        // Mark it no matter what.\r\n        element.__loaded = true;\r\n        resolve();\r\n      } else {\r\n        //TODO(valdrin) should it update currentScript if it is a <script> ?\r\n        element.addEventListener('load', () => {\r\n          element.__loaded = true;\r\n          element.__errored = false;\r\n          resolve();\r\n        });\r\n        element.addEventListener('error', () => {\r\n          element.__loaded = true;\r\n          element.__errored = true;\r\n          resolve();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {!Element} element\r\n   * @return {boolean}\r\n   */\r\n  function isElementLoaded(element) {\r\n    if (useNative && isImportLink(element)) {\r\n      return element.__loaded ||\r\n        (element.import && element.import.readyState !== 'loading');\r\n    }\r\n    return element.__loaded;\r\n  }\r\n\r\n  function fixDomModules(element, url) {\r\n    const s$ = element.querySelectorAll('dom-module');\r\n    for (let i = 0; i < s$.length; i++) {\r\n      const o = s$[i];\r\n      const assetpath = o.getAttribute('assetpath') || '';\r\n      o.setAttribute('assetpath', Path.replaceAttrUrl(assetpath, url));\r\n    }\r\n  }\r\n\r\n  function makeDocument(resource, url) {\r\n    // TODO(valdrin): better to use a disconnected document here so that\r\n    // elements don't upgrade until inserted into main document,\r\n    // however, this is blocked on https://bugs.webkit.org/show_bug.cgi?id=165617\r\n    // let doc = document.implementation.createHTMLDocument();\r\n    const content = document.createElement('import-content');\r\n    content.setAttribute('import-href', url);\r\n    content.style.display = 'none';\r\n    content.innerHTML = resource;\r\n    markScripts(content, url);\r\n    // TODO(sorvell): this is specific to users (Polymer) of the dom-module element.\r\n    fixDomModules(content, url);\r\n    fixUrls(content, url);\r\n    return content;\r\n  }\r\n\r\n  /**\r\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\r\n    method. This api is necessary because unlike the native implementation,\r\n    script elements do not force imports to resolve. Instead, users should wrap\r\n    code in either an `HTMLImportsLoaded` handler or after load time in an\r\n    `HTMLImports.whenReady(callback)` call.\r\n\r\n    NOTE: This module also supports these apis under the native implementation.\r\n    Therefore, if this file is loaded, the same code can be used under both\r\n    the polyfill and native implementation.\r\n   */\r\n\r\n  const isIE = /Trident/.test(navigator.userAgent);\r\n  const requiredReadyState = isIE ? 'complete' : 'interactive';\r\n  const READY_EVENT = 'readystatechange';\r\n\r\n  // call a callback when all HTMLImports in the document at call time\r\n  // (or at least document ready) have loaded.\r\n  // 1. ensure the document is in a ready state (has dom), then\r\n  // 2. watch for loading of imports and call callback when done\r\n  function whenReady(callback, doc) {\r\n    doc = doc || document;\r\n    // if document is loading, wait and try again\r\n    whenDocumentReady(function() {\r\n      watchImportsLoad(callback, doc);\r\n    }, doc);\r\n  }\r\n\r\n  function isDocumentReady(doc) {\r\n    return (doc.readyState === 'complete' ||\r\n      doc.readyState === requiredReadyState);\r\n  }\r\n\r\n  // call <callback> when we ensure the document is in a ready state\r\n  function whenDocumentReady(callback, doc) {\r\n    if (!isDocumentReady(doc)) {\r\n      const checkReady = function() {\r\n        if (doc.readyState === 'complete' ||\r\n          doc.readyState === requiredReadyState) {\r\n          doc.removeEventListener(READY_EVENT, checkReady);\r\n          whenDocumentReady(callback, doc);\r\n        }\r\n      };\r\n      doc.addEventListener(READY_EVENT, checkReady);\r\n    } else if (callback) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  function markTargetLoaded(event) {\r\n    event.target.__loaded = true;\r\n  }\r\n\r\n  // call <callback> when we ensure all imports have loaded\r\n  function watchImportsLoad(callback, doc) {\r\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\r\n    // only non-nested imports\r\n    imports = Array.prototype.slice.call(imports).filter(function(n) {\r\n      return !matches.call(n, 'import-content ' + IMPORT_SELECTOR);\r\n    });\r\n    Promise.all(imports.map(getLoadingDonePromise)).then(() => {\n      const newImports = [];\n      const errorImports = [];\n      imports.forEach((imp) => {\n        (imp.__errored ? errorImports : newImports).push(imp);\n      });\n      callback( /** @type {!HTMLImportInfo} */ ({\r\n        allImports: imports,\r\n        loadedImports: newImports,\r\n        errorImports: errorImports\r\n      }));\r\n    });\r\n  }\r\n\r\n  // make `whenReady` work with native HTMLImports\r\n  if (useNative) {\r\n\r\n    /**\r\n     * @param {Array<MutationRecord>} mutations\r\n     */\r\n    function handleMutations(mutations) {\r\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\r\n        if (m.addedNodes) {\r\n          for (let i = 0, l = m.addedNodes.length; i < l; i++) {\r\n            if (isImportLink(m.addedNodes[i])) {\r\n              getLoadingDonePromise(/** @type {!Element} */ (m.addedNodes[i]));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    new MutationObserver(handleMutations).observe(document.head, {\r\n      childList: true\r\n    });\r\n\r\n    // make sure to catch any imports that are in the process of loading\r\n    // when this script is run.\r\n    (function() {\r\n      if (document.readyState === 'loading') {\r\n        const imports = document.querySelectorAll(IMPORT_SELECTOR);\r\n        for (let i = 0, l = imports.length; i < l; i++) {\r\n          getLoadingDonePromise(imports[i]);\r\n        }\r\n      }\r\n    })();\r\n\r\n  }\r\n\r\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\r\n  // have loaded. This event is required to simulate the script blocking\r\n  // behavior of native imports. A main document script that needs to be sure\r\n  // imports have loaded should wait for this event.\r\n  whenReady(function(detail) {\r\n    const evt = /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\r\n    evt.initCustomEvent('HTMLImportsLoaded', true, true, detail);\r\n    document.dispatchEvent(evt);\r\n  });\r\n\r\n  if (!useNative) {\r\n    let importer;\r\n\r\n    function bootstrap() {\r\n      importer = importer || new Importer();\r\n      importer.bootDocument(document);\r\n    }\r\n\r\n    if (document.readyState === 'complete' ||\r\n      (document.readyState === 'interactive' && !window.attachEvent)) {\r\n      bootstrap();\r\n    } else {\r\n      document.addEventListener('DOMContentLoaded', bootstrap);\r\n    }\r\n  }\r\n\r\n  // exports\r\n  scope.useNative = useNative;\r\n  scope.whenReady = whenReady;\r\n\r\n})(window.HTMLImports = (window.HTMLImports || {}));\r\n"]}