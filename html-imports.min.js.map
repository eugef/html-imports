{"version":3,"sources":["src/html-imports.js"],"names":["scope","constructor","Loader","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","elt","nodeType","Node","ELEMENT_NODE","matches","IMPORT_SELECTOR","fixUrlsInTemplates","element","base","t$","querySelectorAll","i","length","content","template","n$","n","localName","path","resolveUrlsInStyle","l","attrs","a","at","v","attributes","value","search","resolveUrlsInCssText","replaceAttrUrl","getLoadingDonePromise","then","Promise","resolve","__loaded","addEventListener","event","whenReady","callback","doc","document","whenDocumentReady","watchImportsLoad","readyState","requiredReadyState","checkReady","removeEventListener","READY_EVENT","markTargetLoaded","target","checkDone","parsedCount","importCount","allImports","imports","loadedImports","newImports","errorImports","loadedImport","e","push","errorLoadingImport","Array","prototype","slice","call","filter","imp","useNative","import","createElement","Object","defineProperty","get","currentScript","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","style","linkUrl","textContent","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","href","URL","test","xhr","async","ok","request","status","load","next","nextContext","XMLHttpRequest","open","redirectedUrl","locationHeader","getResponseHeader","substr","location","origin","console","error","message","response","responseText","send","loadDocument","responseType","addNodes","nodes","require","addNode","node","src","dedupe","fetch","tail","match","pieces","split","body","header","indexOf","atob","decodeURIComponent","setTimeout","receive","bind","err","resource","$p","p","importer","documents","loadNode","importLoader","loadSubtree","parent","loaded","__resource","__error","undefined","setAttribute","display","innerHTML","s$","o","getAttribute","assetpath","importsSelectors","__importLink","bootDocument","__doc","loadedAll","_flatten","script","clone","parentNode","replaceChild","_fireEvents","observe","head","__firstImport","appendChild","all","from","map","eventType","dispatchEvent","CustomEvent","__importObserver","MutationObserver","mxns","forEach","addedNodes","childList","subtree","isIE","navigator","userAgent","handleImport","detail","ready","readyTime","getTime","Date","evt","createEvent","initCustomEvent","bootstrap","attachEvent","window","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n(function(scope) {\r\n\r\n  /********************* base setup *********************/\r\n  const IMPORT_SELECTOR = 'link[rel=import]';\r\n  const useNative = Boolean('import' in document.createElement('link'));\r\n  const flags = {\r\n    bust: false,\r\n    log: false\r\n  };\r\n\r\n  /**\r\n    Support `currentScript` on all browsers as `document._currentScript.`\r\n\r\n    NOTE: We cannot polyfill `document.currentScript` because it's not possible\r\n    both to override and maintain the ability to capture the native value.\r\n    Therefore we choose to expose `_currentScript` both when native imports\r\n    and the polyfill are in use.\r\n  */\r\n  Object.defineProperty(document, '_currentScript', {\r\n    get: function() {\r\n      return scope.currentScript || document.currentScript ||\r\n        // NOTE: only works when called in synchronously executing code.\r\n        // readyState should check if `loading` but IE10 is\r\n        // interactive when scripts run so we cheat.\r\n        (document.readyState !== 'complete' ?\r\n          document.scripts[document.scripts.length - 1] : null);\r\n    },\r\n    configurable: true\r\n  });\r\n\r\n  /********************* path fixup *********************/\r\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\r\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\r\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\r\n\r\n  // path fixup: style elements in imports must be made relative to the main\r\n  // document. We fixup url's in url() and @import.\r\n  const path = {\r\n\r\n    resolveUrlsInStyle: function(style, linkUrl) {\r\n      style.textContent = path.resolveUrlsInCssText(style.textContent, linkUrl);\r\n    },\r\n\r\n    resolveUrlsInCssText: function(cssText, linkUrl) {\r\n      let r = path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\r\n      r = path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\r\n      return r;\r\n    },\r\n\r\n    replaceUrls: function(text, linkUrl, regexp) {\r\n      return text.replace(regexp, function(m, pre, url, post) {\r\n        let urlPath = url.replace(/[\"']/g, '');\r\n        if (linkUrl) {\r\n          urlPath = (new URL(urlPath, linkUrl)).href;\r\n        }\r\n        return pre + '\\'' + urlPath + '\\'' + post;\r\n      });\r\n    },\r\n\r\n    replaceAttrUrl: function(text, linkUrl) {\r\n      if (text && ABS_URL_TEST.test(text)) {\r\n        return text;\r\n      } else {\r\n        return new URL(text, linkUrl).href;\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  /********************* xhr processor *********************/\r\n  const xhr = {\r\n    async: true,\r\n\r\n    ok: function(request) {\r\n      return (request.status >= 200 && request.status < 300) ||\r\n        (request.status === 304) ||\r\n        (request.status === 0);\r\n    },\r\n\r\n    load: function(url, next, nextContext) {\r\n      const request = new XMLHttpRequest();\r\n      if (flags.bust) {\r\n        url += '?' + Math.random();\r\n      }\r\n      request.open('GET', url, xhr.async);\r\n      request.addEventListener('readystatechange', function(e) {\r\n        if (request.readyState === 4) {\r\n          // Servers redirecting an import can add a Location header to help us\r\n          // polyfill correctly.\r\n          let redirectedUrl = null;\r\n          try {\r\n            const locationHeader = request.getResponseHeader('Location');\r\n            if (locationHeader) {\r\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\r\n                location.origin + locationHeader // Location is a relative path\r\n                :\r\n                locationHeader; // Full path\r\n            }\r\n          } catch (e) {\r\n            console.error(e.message);\r\n          }\r\n          next.call(nextContext, !xhr.ok(request) && request,\r\n            request.response || request.responseText, redirectedUrl);\r\n        }\r\n      });\r\n      request.send();\r\n      return request;\r\n    },\r\n\r\n    loadDocument: function(url, next, nextContext) {\r\n      xhr.load(url, next, nextContext).responseType = 'document';\r\n    }\r\n\r\n  };\r\n\r\n  /********************* loader *********************/\r\n  // This loader supports a dynamic list of urls\r\n  // and an oncomplete callback that is called when the loader is done.\r\n  // NOTE: The polyfill currently does *not* need this dynamism or the\r\n  // onComplete concept. Because of this, the loader could be simplified\r\n  // quite a bit.\r\n  class Loader {\r\n    constructor(onLoad, onComplete) {\r\n      this.cache = {};\r\n      this.onload = onLoad;\r\n      this.oncomplete = onComplete;\r\n      this.inflight = 0;\r\n      this.pending = {};\r\n    }\r\n\r\n    addNodes(nodes) {\r\n      // number of transactions to complete\r\n      this.inflight += nodes.length;\r\n      // commence transactions\r\n      for (let i = 0, l = nodes.length, n;\r\n        (i < l) && (n = nodes[i]); i++) {\r\n        this.require(n);\r\n      }\r\n      // anything to do?\r\n      this.checkDone();\r\n    }\r\n\r\n    addNode(node) {\r\n      // number of transactions to complete\r\n      this.inflight++;\r\n      // commence transactions\r\n      this.require(node);\r\n      // anything to do?\r\n      this.checkDone();\r\n    }\r\n\r\n    require(elt) {\r\n      const url = elt.src || elt.href;\r\n      // deduplication\r\n      if (!this.dedupe(url, elt)) {\r\n        // fetch this resource\r\n        this.fetch(url, elt);\r\n      }\r\n    }\r\n\r\n    dedupe(url, elt) {\r\n      if (this.pending[url]) {\r\n        // add to list of nodes waiting for inUrl\r\n        this.pending[url].push(elt);\r\n        // don't need fetch\r\n        return true;\r\n      }\r\n      let resource;\r\n      if (this.cache[url]) {\r\n        this.onload(url, elt, this.cache[url]);\r\n        // finished this transaction\r\n        this.tail();\r\n        // don't need fetch\r\n        return true;\r\n      }\r\n      // first node waiting for inUrl\r\n      this.pending[url] = [elt];\r\n      // need fetch (not a dupe)\r\n      return false;\r\n    }\r\n\r\n    fetch(url, elt) {\r\n      flags.log && console.log('fetch', url, elt);\r\n      if (!url) {\r\n        setTimeout(() => this.receive(url, elt, {\r\n          error: 'href must be specified'\r\n        }, null), 0);\r\n      } else if (url.match(/^data:/)) {\r\n        // Handle Data URI Scheme\r\n        const pieces = url.split(',');\r\n        const header = pieces[0];\r\n        let body = pieces[1];\r\n        if (header.indexOf(';base64') > -1) {\r\n          body = atob(body);\r\n        } else {\r\n          body = decodeURIComponent(body);\r\n        }\r\n        setTimeout(() => this.receive(url, elt, null, body), 0);\r\n      } else {\r\n        xhr.load(url, this.receive.bind(this, url, elt));\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!string} url\r\n     * @param {!Element} elt\r\n     * @param {Object=} err\r\n     * @param {Object=} resource\r\n     * @param {string=} redirectedUrl\r\n     */\r\n    receive(url, elt, err, resource, redirectedUrl) {\r\n      this.cache[url] = resource;\r\n      const $p = this.pending[url];\r\n      for (let i = 0, l = $p.length, p;\r\n        (i < l) && (p = $p[i]); i++) {\r\n        // If url was redirected, use the redirected location so paths are\r\n        // calculated relative to that.\r\n        this.onload(url, p, resource, err, redirectedUrl);\r\n        this.tail();\r\n      }\r\n      this.pending[url] = null;\r\n    }\r\n\r\n    tail() {\r\n      --this.inflight;\r\n      this.checkDone();\r\n    }\r\n\r\n    checkDone() {\r\n      if (!this.inflight) {\r\n        this.oncomplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  /********************* importer *********************/\r\n  const importsSelectors = [\r\n    IMPORT_SELECTOR,\r\n    'link[rel=stylesheet]:not([type])',\r\n    'style:not([type])',\r\n    'script:not([type])',\r\n    'script[type=\"application/javascript\"]',\r\n    'script[type=\"text/javascript\"]'\r\n  ].join(',');\r\n\r\n  // importer\r\n  // highlander object to manage loading of imports\r\n  // for any document, importer:\r\n  // - loads any linked import documents (with deduping)\r\n  // - whenever an import is loaded, prompts the parser to try to parse\r\n  // - observes imported documents for new elements (these are handled via the\r\n  // dynamic importer)\r\n  const importer = {\r\n\r\n    documents: {},\r\n\r\n    loadNode: function(node) {\r\n      importLoader.addNode(node);\r\n    },\r\n\r\n    // load all loadable elements within the parent element\r\n    loadSubtree: function(parent) {\r\n      const nodes = parent.querySelectorAll(IMPORT_SELECTOR);\r\n      // add these nodes to loader's queue\r\n      importLoader.addNodes(nodes);\r\n    },\r\n\r\n    loaded: function(url, elt, resource, err, redirectedUrl) {\r\n      flags.log && console.log('loaded', url, elt);\r\n      // store generic resource\r\n      // TODO(sorvell): fails for nodes inside <template>.content\r\n      // see https://code.google.com/p/chromium/issues/detail?id=249381.\r\n      elt.__resource = resource;\r\n      elt.__error = err;\r\n      if (isImportLink(elt)) {\r\n        let doc = importer.documents[url];\r\n        // if we've never seen a document at this url\r\n        if (doc === undefined) {\r\n          // generate an HTMLDocument from data\r\n          doc = err ? null : makeDocument(resource, redirectedUrl || url);\r\n          if (doc) {\r\n            doc.__importLink = elt;\r\n            // note, we cannot use MO to detect parsed nodes because\r\n            // SD polyfill does not report these as mutations.\r\n            importer.bootDocument(doc);\r\n          }\r\n          // cache document\r\n          importer.documents[url] = doc;\r\n        }\r\n        // don't store import record until we're actually loaded\r\n        // store document resource\r\n        elt.__doc = doc;\r\n      }\r\n    },\r\n\r\n    bootDocument: function(doc) {\r\n      importer.loadSubtree(doc);\r\n    },\r\n\r\n    loadedAll: function() {\r\n      importer._flatten(document);\r\n      runScripts();\r\n      importer._fireEvents(document);\r\n      importer.observe(document.head);\r\n    },\r\n\r\n    _flatten: function(element) {\r\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\r\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n        n.import = importer.documents[n.href];\r\n        if (n.import && !n.import.__firstImport) {\r\n          n.import.__firstImport = n;\r\n          importer._flatten(n.import);\r\n          n.appendChild(n.import);\r\n          if (document.contains(n.parentNode)) {\r\n            // TODO(sorvell): need to coordinate with observer in document.head.\r\n            //importer.observe(n.import);\r\n          }\r\n        }\r\n      }\r\n    },\r\n\r\n    _fireEvents: function(element) {\r\n      // Wait for pending resources to finish loading before we can fire load/error.\r\n      // TODO(valdrin) should it check for @import in textContent?\r\n      const pending = element.querySelectorAll(\r\n        `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type]),\r\n       ${IMPORT_SELECTOR} script[src]:not([type])`);\r\n      Promise.all(Array.from(pending).map(getLoadingDonePromise)).then(() => {\r\n        const n$ = element.querySelectorAll(IMPORT_SELECTOR);\r\n        // Inverse order to have events firing bottom-up.\r\n        for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\r\n          // Don't fire twice same event.\r\n          if (!n.__loaded) {\r\n            const eventType = n.import ? 'load' : 'error';\r\n            flags.log && console.warn('fire', eventType, n.href);\r\n            n.__loaded = true;\r\n            n.dispatchEvent(new CustomEvent(eventType));\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    observe: function(element) {\r\n      if (element.__importObserver) {\r\n        return;\r\n      }\r\n      element.__importObserver = new MutationObserver(function(mxns) {\r\n        mxns.forEach(function(m) {\r\n          if (m.addedNodes) {\r\n            for (let i = 0; i < m.addedNodes.length; i++) {\r\n              const p = m.addedNodes[i];\r\n              // TODO(sorvell): x-platform matches\r\n              if (p.nodeType === Node.ELEMENT_NODE &&\r\n                p.matches(IMPORT_SELECTOR)) {\r\n                importer.loadNode(p);\r\n              }\r\n            }\r\n          }\r\n        });\r\n      });\r\n      element.__importObserver.observe(element, {\r\n        childList: true,\r\n        subtree: true\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  // loader singleton to handle loading imports\r\n  const importLoader = new Loader(importer.loaded.bind(importer),\r\n    importer.loadedAll.bind(importer));\r\n\r\n  function isImportLink(elt) {\r\n    return elt.nodeType === Node.ELEMENT_NODE && elt.matches(IMPORT_SELECTOR);\r\n  }\r\n\r\n  /********************* vulcanize style inline processing  *********************/\r\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\r\n\r\n  function fixUrlAttributes(element, base) {\r\n    for (let i = 0, l = attrs.length, a, at, v;\r\n      (i < l) && (a = attrs[i]); i++) {\r\n      at = element.attributes[a];\r\n      v = at && at.value;\r\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\r\n        at.value = (a === 'style') ?\r\n          path.resolveUrlsInCssText(v, base) :\r\n          path.replaceAttrUrl(v, base);\r\n      }\r\n    }\r\n  }\r\n\r\n  function fixUrlsInTemplate(template, base) {\r\n    const content = template.content;\r\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\r\n    for (let i = 0; i < n$.length; i++) {\r\n      const n = n$[i];\r\n      if (n.localName == 'style') {\r\n        path.resolveUrlsInStyle(n, base);\r\n      } else {\r\n        fixUrlAttributes(n, base);\r\n      }\r\n    }\r\n    fixUrlsInTemplates(content, base);\r\n  }\r\n\r\n  function fixUrlsInTemplates(element, base) {\r\n    const t$ = element.querySelectorAll('template');\r\n    for (let i = 0; i < t$.length; i++) {\r\n      fixUrlsInTemplate(t$[i], base);\r\n    }\r\n  }\r\n\r\n  function fixUrls(element, base) {\r\n    const n$ = element.querySelectorAll(importsSelectors);\r\n    for (let i = 0; i < n$.length; i++) {\r\n      const n = n$[i];\r\n      if (n.href) {\r\n        n.href = new URL(n.getAttribute('href'), base);\r\n      }\r\n      if (n.src) {\r\n        n.src = new URL(n.getAttribute('src'), base);\r\n      }\r\n      if (n.localName == 'style') {\r\n        path.resolveUrlsInStyle(n, base);\r\n      }\r\n    }\r\n    fixUrlsInTemplates(element, base);\r\n  }\r\n\r\n  function markScripts(element, url) {\r\n    const s$ = element.querySelectorAll('script');\r\n    for (let i = 0; i < s$.length; i++) {\r\n      const o = s$[i];\r\n      if (o.textContent) {\r\n        o.textContent = o.textContent + `\\n//# sourceURL=${url}`;\r\n      }\r\n      if (o.src) {\r\n        o.setAttribute('src', path.replaceAttrUrl(o.getAttribute('src'), url));\r\n      }\r\n    }\r\n  }\r\n\r\n  // done for security reasons. TODO(valdrin) document\r\n  function runScripts() {\r\n    const s$ = document.querySelectorAll('import-content script');\r\n    for (let i = 0; i < s$.length; i++) {\r\n      const script = s$[i];\r\n      const clone = document.createElement('script');\r\n      scope.currentScript = clone;\r\n      clone.textContent = script.textContent;\r\n      script.src && clone.setAttribute('src', script.getAttribute('src'));\r\n      script.parentNode.replaceChild(clone, script);\r\n    }\r\n    scope.currentScript = null;\r\n  }\r\n\r\n  function getLoadingDonePromise(element) {\r\n    return new Promise(resolve => {\r\n      if (element.__loaded) {\r\n        resolve();\r\n      } else {\r\n        element.addEventListener('load', resolve);\r\n        element.addEventListener('error', resolve);\r\n      }\r\n    }).then((event) => {\r\n      element.__loaded = true;\r\n      return event;\r\n    });\r\n  }\r\n\r\n  function fixDomModules(element, url) {\r\n    const s$ = element.querySelectorAll('dom-module');\r\n    for (let i = 0; i < s$.length; i++) {\r\n      const o = s$[i];\r\n      const assetpath = o.getAttribute('assetpath') || '';\r\n      o.setAttribute('assetpath', path.replaceAttrUrl(assetpath, url));\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function makeDocument(resource, url) {\r\n    // TODO(valdrin): better to use a disconnected document here so that\r\n    // elements don't upgrade until inserted into main document,\r\n    // however, this is blocked on https://bugs.webkit.org/show_bug.cgi?id=165617\r\n    // let doc = document.implementation.createHTMLDocument();\r\n    const content = document.createElement('import-content');\r\n    content.setAttribute('import-href', url);\r\n    content.style.display = 'none';\r\n    content.innerHTML = resource;\r\n    markScripts(content, url);\r\n    // TODO(sorvell): this is specific to users (Polymer) of the dom-module element.\r\n    fixDomModules(content, url);\r\n    fixUrls(content, url);\r\n    return content;\r\n  }\r\n\r\n  /**\r\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\r\n    method. This api is necessary because unlike the native implementation,\r\n    script elements do not force imports to resolve. Instead, users should wrap\r\n    code in either an `HTMLImportsLoaded` handler or after load time in an\r\n    `HTMLImports.whenReady(callback)` call.\r\n\r\n    NOTE: This module also supports these apis under the native implementation.\r\n    Therefore, if this file is loaded, the same code can be used under both\r\n    the polyfill and native implementation.\r\n   */\r\n\r\n  const isIE = /Trident/.test(navigator.userAgent);\r\n\r\n  // call a callback when all HTMLImports in the document at call time\r\n  // (or at least document ready) have loaded.\r\n  // 1. ensure the document is in a ready state (has dom), then\r\n  // 2. watch for loading of imports and call callback when done\r\n  function whenReady(callback, doc) {\r\n    doc = doc || document;\r\n    // if document is loading, wait and try again\r\n    whenDocumentReady(function() {\r\n      watchImportsLoad(callback, doc);\r\n    }, doc);\r\n  }\r\n\r\n  // call the callback when the document is in a ready state (has dom)\r\n  const requiredReadyState = isIE ? 'complete' : 'interactive';\r\n  const READY_EVENT = 'readystatechange';\r\n\r\n  function isDocumentReady(doc) {\r\n    return (doc.readyState === 'complete' ||\r\n      doc.readyState === requiredReadyState);\r\n  }\r\n\r\n  // call <callback> when we ensure the document is in a ready state\r\n  function whenDocumentReady(callback, doc) {\r\n    if (!isDocumentReady(doc)) {\r\n      const checkReady = function() {\r\n        if (doc.readyState === 'complete' ||\r\n          doc.readyState === requiredReadyState) {\r\n          doc.removeEventListener(READY_EVENT, checkReady);\r\n          whenDocumentReady(callback, doc);\r\n        }\r\n      };\r\n      doc.addEventListener(READY_EVENT, checkReady);\r\n    } else if (callback) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  function markTargetLoaded(event) {\r\n    event.target.__loaded = true;\r\n  }\r\n\r\n  // call <callback> when we ensure all imports have loaded\r\n  function watchImportsLoad(callback, doc) {\r\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\r\n    // only non-nested imports\r\n    imports = Array.prototype.slice.call(imports).filter(function(n) {\r\n      return !n.matches('import-content ' + IMPORT_SELECTOR);\r\n    });\r\n    let parsedCount = 0,\r\n      importCount = imports.length,\r\n      newImports = [],\r\n      errorImports = [];\r\n\r\n    function checkDone() {\r\n      if (parsedCount == importCount && callback) {\r\n        callback( /**@type {HTMLImportInfo} */ ({\r\n          allImports: imports,\r\n          loadedImports: newImports,\r\n          errorImports: errorImports\r\n        }));\r\n      }\r\n    }\r\n\r\n    function loadedImport(e) {\r\n      markTargetLoaded(e);\r\n      newImports.push(this);\r\n      parsedCount++;\r\n      checkDone();\r\n    }\r\n\r\n    function errorLoadingImport(e) {\r\n      errorImports.push(this);\r\n      parsedCount++;\r\n      checkDone();\r\n    }\r\n    if (importCount) {\r\n      for (let i = 0, imp; i < importCount && (imp = imports[i]); i++) {\r\n        if (isImportLoaded(imp)) {\r\n          if (imp.import) {\r\n            newImports.push(imp);\r\n          } else {\r\n            errorImports.push(imp);\r\n          }\r\n          parsedCount++;\r\n          checkDone();\r\n        } else {\r\n          imp.addEventListener('load', loadedImport);\r\n          imp.addEventListener('error', errorLoadingImport);\r\n        }\r\n      }\r\n    } else {\r\n      checkDone();\r\n    }\r\n  }\r\n\r\n  function isImportLoaded(link) {\r\n    return useNative ? link.__loaded ||\r\n      (link.import && link.import.readyState !== 'loading') :\r\n      link.__loaded;\r\n  }\r\n\r\n  // make `whenReady` work with native HTMLImports\r\n  if (useNative) {\r\n    new MutationObserver(function(mxns) {\r\n      for (let i = 0, l = mxns.length, m;\r\n        (i < l) && (m = mxns[i]); i++) {\r\n        if (m.addedNodes) {\r\n          handleImports(m.addedNodes);\r\n        }\r\n      }\r\n    }).observe(document.head, {\r\n      childList: true\r\n    });\r\n\r\n    function handleImports(nodes) {\r\n      for (let i = 0, l = nodes.length, n;\r\n        (i < l) && (n = nodes[i]); i++) {\r\n        if (isImportLink(n)) {\r\n          handleImport(n);\r\n        }\r\n      }\r\n    }\r\n\r\n    function handleImport(element) {\r\n      const loaded = element.import;\r\n      if (loaded) {\r\n        markTargetLoaded({\r\n          target: element\r\n        });\r\n      } else {\r\n        element.addEventListener('load', markTargetLoaded);\r\n        element.addEventListener('error', markTargetLoaded);\r\n      }\r\n    }\r\n\r\n    // make sure to catch any imports that are in the process of loading\r\n    // when this script is run.\r\n    (function() {\r\n      if (document.readyState === 'loading') {\r\n        const imports = document.querySelectorAll(IMPORT_SELECTOR);\r\n        for (let i = 0, l = imports.length, imp;\r\n          (i < l) && (imp = imports[i]); i++) {\r\n          handleImport(imp);\r\n        }\r\n      }\r\n    })();\r\n\r\n  }\r\n\r\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\r\n  // have loaded. This event is required to simulate the script blocking\r\n  // behavior of native imports. A main document script that needs to be sure\r\n  // imports have loaded should wait for this event.\r\n  whenReady(function(detail) {\r\n    scope.ready = true;\r\n    scope.readyTime = new Date().getTime();\r\n    const evt = /** @type {CustomEvent} */ (document.createEvent('CustomEvent'));\r\n    evt.initCustomEvent('HTMLImportsLoaded', true, true, detail);\r\n    document.dispatchEvent(evt);\r\n  });\r\n\r\n  if (!useNative) {\r\n    function bootstrap() {\r\n      importer.bootDocument(document);\r\n    }\r\n\r\n    if (document.readyState === 'complete' ||\r\n      (document.readyState === 'interactive' && !window.attachEvent)) {\r\n      bootstrap();\r\n    } else {\r\n      document.addEventListener('DOMContentLoaded', bootstrap);\r\n    }\r\n  }\r\n\r\n  // exports\r\n  scope.useNative = useNative;\r\n  scope.whenReady = whenReady;\r\n\r\n})(window.HTMLImports = (window.HTMLImports || {}));\r\n"]}