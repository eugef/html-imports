{"version":3,"sources":["src/html-imports.js"],"names":["scope","constructor","Importer","documents","_loaded","bind","_loadedAll","_importLoader","Loader","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","IMPORT_SELECTOR","fixUrlAttributes","element","base","attrs","forEach","a","at","attributes","v","value","search","Path","resolveUrlsInCssText","replaceAttrUrl","fixUrlsInTemplates","t$","querySelectorAll","i","length","content","template","n$","n","localName","resolveUrlsInStyle","runScripts","s$","document","l","o","c","createElement","textContent","src","setAttribute","getAttribute","parentNode","replaceChild","currentScript","whenElementLoaded","then","script","Promise","resolve","isElementLoaded","addEventListener","__loaded","__errored","useNative","import","readyState","flags","log","console","isIE","fakeLoad","indexOf","sheet","csr","cssRules","type","CSSRule","IMPORT_RULE","styleSheet","whenReady","callback","doc","whenDocumentReady","watchImportsLoad","requiredReadyState","checkReady","removeEventListener","READY_EVENT","imports","Array","prototype","slice","filter","all","map","newImports","errorImports","imp","push","allImports","loadedImports","bust","Object","defineProperty","get","scripts","configurable","baseURI","querySelector","href","window","location","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","createEvent","initCustomEvent","Event","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","style","linkUrl","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","URL","test","Xhr","async","load","request","XMLHttpRequest","Math","random","open","redirectedUrl","locationHeader","getResponseHeader","substr","origin","e","error","message","_ok","response","responseText","send","status","addNodes","nodes","require","checkDone","addNode","elt","dedupe","fetch","tail","match","pieces","split","body","header","atob","decodeURIComponent","setTimeout","receive","resource","err","$p","p","bootDocument","_loadSubtree","loadNode","parent","__resource","__error","display","innerHTML","assetpath","importsSelectors","__importLink","__doc","_flatten","_fireEvents","_observe","__firstImport","appendChild","pendingImportsSelectors","eventType","warn","dispatchEvent","head","__importObserver","MutationObserver","_onMutation","observe","childList","subtree","mutations","j","addedNodes","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","navigator","userAgent","handleMutations","bootstrap","importer","attachEvent","HTMLImports"],"mappings":"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","file":"html-imports.min.js","sourcesContent":["/**\r\n * @license\r\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n(function(scope) {\r\n\r\n  /********************* base setup *********************/\r\n  const IMPORT_SELECTOR = 'link[rel=import]';\r\n  const useNative = Boolean('import' in document.createElement('link'));\r\n  const flags = {\r\n    bust: false,\r\n    log: false\r\n  };\r\n\r\n  /**\r\n    Support `currentScript` on all browsers as `document._currentScript.`\r\n    NOTE: We cannot polyfill `document.currentScript` because it's not possible\r\n    both to override and maintain the ability to capture the native value.\r\n    Therefore we choose to expose `_currentScript` both when native imports\r\n    and the polyfill are in use.\r\n  */\r\n  let currentScript = null;\r\n  Object.defineProperty(document, '_currentScript', {\r\n    get: function() {\r\n      return currentScript || document.currentScript ||\r\n        // NOTE: only works when called in synchronously executing code.\r\n        // readyState should check if `loading` but IE10 is\r\n        // interactive when scripts run so we cheat.\r\n        (document.readyState !== 'complete' ?\r\n          document.scripts[document.scripts.length - 1] : null);\r\n    },\r\n    configurable: true\r\n  });\r\n\r\n  // Polyfill document.baseURI for browsers without it.\r\n  if (!document.baseURI) {\r\n    Object.defineProperty(document, 'baseURI', {\r\n      get: function() {\r\n        const base = /** @type {HTMLBaseElement} */ (document.querySelector('base'));\r\n        return base ? base.href : window.location.href;\r\n      },\r\n      configurable: true\r\n    });\r\n  }\r\n\r\n  // CustomEvent polyfill.\r\n  (function() {\r\n\r\n    if (typeof window.CustomEvent === 'function') return false;\r\n\r\n    function CustomEvent(event, params) {\r\n      params = params || {\r\n        bubbles: false,\r\n        cancelable: false,\r\n        detail: undefined\r\n      };\r\n      const evt = /** @type {CustomEvent} */ (document.createEvent('CustomEvent'));\r\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n      return evt;\r\n    }\r\n\r\n    CustomEvent.prototype = window.Event.prototype;\r\n\r\n    window.CustomEvent = /** @type {CustomEvent} */ (CustomEvent);\r\n  })();\r\n\r\n  /********************* path fixup *********************/\r\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\r\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\r\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\r\n\r\n  // path fixup: style elements in imports must be made relative to the main\r\n  // document. We fixup url's in url() and @import.\r\n  const Path = {\r\n    resolveUrlsInStyle: function(style, linkUrl) {\r\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\r\n    },\r\n\r\n    resolveUrlsInCssText: function(cssText, linkUrl) {\r\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\r\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\r\n      return r;\r\n    },\r\n\r\n    replaceUrls: function(text, linkUrl, regexp) {\r\n      return text.replace(regexp, function(m, pre, url, post) {\r\n        let urlPath = url.replace(/[\"']/g, '');\r\n        if (linkUrl) {\r\n          urlPath = (new URL(urlPath, linkUrl)).href;\r\n        }\r\n        return pre + '\\'' + urlPath + '\\'' + post;\r\n      });\r\n    },\r\n\r\n    replaceAttrUrl: function(text, linkUrl) {\r\n      if (text && ABS_URL_TEST.test(text)) {\r\n        return text;\r\n      } else {\r\n        return new URL(text, linkUrl).href;\r\n      }\r\n    }\r\n  };\r\n\r\n  /********************* Xhr processor *********************/\r\n  const Xhr = {\r\n\r\n    async: true,\r\n\r\n    /**\r\n     * @param {!string} url\r\n     * @param {!function(boolean, ?, string=)} callback\r\n     * @return {XMLHttpRequest}\r\n     */\r\n    load: function(url, callback) {\r\n      const request = new XMLHttpRequest();\r\n      if (flags.bust) {\r\n        url += '?' + Math.random();\r\n      }\r\n      request.open('GET', url, Xhr.async);\r\n      request.addEventListener('readystatechange', (e) => {\r\n        if (request.readyState === 4) {\r\n          // Servers redirecting an import can add a Location header to help us\r\n          // polyfill correctly.\r\n          let redirectedUrl = undefined;\r\n          try {\r\n            const locationHeader = request.getResponseHeader('Location');\r\n            if (locationHeader) {\r\n              // Relative or full path.\r\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\r\n                location.origin + locationHeader : locationHeader;\r\n            }\r\n          } catch (e) {\r\n            console.error(e.message);\r\n          }\r\n          const resource = (request.response || request.responseText);\r\n          callback(!Xhr._ok(request), resource, redirectedUrl);\r\n        }\r\n      });\r\n      request.send();\r\n      return request;\r\n    },\r\n\r\n    _ok: function(request) {\r\n      return (request.status >= 200 && request.status < 300) ||\r\n        (request.status === 304) ||\r\n        (request.status === 0);\r\n    }\r\n  };\r\n\r\n  /********************* loader *********************/\r\n  // This loader supports a dynamic list of urls\r\n  // and an oncomplete callback that is called when the loader is done.\r\n  // NOTE: The polyfill currently does *not* need this dynamism or the\r\n  // onComplete concept. Because of this, the loader could be simplified\r\n  // quite a bit.\r\n  class Loader {\r\n    constructor(onLoad, onComplete) {\r\n      this.cache = {};\r\n      this.onload = onLoad;\r\n      this.oncomplete = onComplete;\r\n      this.inflight = 0;\r\n      this.pending = {};\r\n    }\r\n\r\n    addNodes(nodes) {\r\n      // number of transactions to complete\r\n      this.inflight += nodes.length;\r\n      // commence transactions\r\n      for (let i = 0, l = nodes.length, n;\r\n        (i < l) && (n = nodes[i]); i++) {\r\n        this.require(n);\r\n      }\r\n      // anything to do?\r\n      this.checkDone();\r\n    }\r\n\r\n    addNode(node) {\r\n      // number of transactions to complete\r\n      this.inflight++;\r\n      // commence transactions\r\n      this.require(node);\r\n      // anything to do?\r\n      this.checkDone();\r\n    }\r\n\r\n    require(elt) {\r\n      const url = elt.src || elt.href;\r\n      // deduplication\r\n      if (!this.dedupe(url, elt)) {\r\n        // fetch this resource\r\n        this.fetch(url, elt);\r\n      }\r\n    }\r\n\r\n    dedupe(url, elt) {\r\n      if (this.pending[url]) {\r\n        // add to list of nodes waiting for inUrl\r\n        this.pending[url].push(elt);\r\n        // don't need fetch\r\n        return true;\r\n      }\r\n      let resource;\r\n      if (this.cache[url]) {\r\n        this.onload(url, elt, this.cache[url]);\r\n        // finished this transaction\r\n        this.tail();\r\n        // don't need fetch\r\n        return true;\r\n      }\r\n      // first node waiting for inUrl\r\n      this.pending[url] = [elt];\r\n      // need fetch (not a dupe)\r\n      return false;\r\n    }\r\n\r\n    fetch(url, elt) {\r\n      flags.log && console.log('fetch', url, elt);\r\n      if (!url) {\r\n        setTimeout(() => this.receive(url, elt, true, {\r\n          error: 'href must be specified'\r\n        }), 0);\r\n      } else if (url.match(/^data:/)) {\r\n        // Handle Data URI Scheme\r\n        const pieces = url.split(',');\r\n        const header = pieces[0];\r\n        let body = pieces[1];\r\n        if (header.indexOf(';base64') > -1) {\r\n          body = atob(body);\r\n        } else {\r\n          body = decodeURIComponent(body);\r\n        }\r\n        setTimeout(() => this.receive(url, elt, false, body), 0);\r\n      } else {\r\n        Xhr.load(url, (error, resource, redirectedUrl) =>\r\n          this.receive(url, elt, error, resource, redirectedUrl));\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!string} url\r\n     * @param {!Element} elt\r\n     * @param {boolean} err\r\n     * @param {Object=} resource\r\n     * @param {string=} redirectedUrl\r\n     */\r\n    receive(url, elt, err, resource, redirectedUrl) {\r\n      this.cache[url] = resource;\r\n      const $p = this.pending[url];\r\n      for (let i = 0, l = $p.length, p;\r\n        (i < l) && (p = $p[i]); i++) {\r\n        // If url was redirected, use the redirected location so paths are\r\n        // calculated relative to that.\r\n        this.onload(url, p, resource, err, redirectedUrl);\r\n        this.tail();\r\n      }\r\n      this.pending[url] = null;\r\n    }\r\n\r\n    tail() {\r\n      --this.inflight;\r\n      this.checkDone();\r\n    }\r\n\r\n    checkDone() {\r\n      if (!this.inflight) {\r\n        this.oncomplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  /********************* importer *********************/\r\n  const importsSelectors = [\r\n    IMPORT_SELECTOR,\r\n    'link[rel=stylesheet]:not([type])',\r\n    'style:not([type])',\r\n    'script:not([type])',\r\n    'script[type=\"application/javascript\"]',\r\n    'script[type=\"text/javascript\"]'\r\n  ].join(',');\r\n\r\n  const pendingImportsSelectors = `${IMPORT_SELECTOR} style:not([type]),\r\n    ${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type]),\r\n    ${IMPORT_SELECTOR} script[src]:not([type]),\r\n    ${IMPORT_SELECTOR} script[src][type=\"application/javascript\"],\r\n    ${IMPORT_SELECTOR} script[src][type=\"text/javascript\"]`;\r\n\r\n  // importer\r\n  // highlander object to manage loading of imports\r\n  // for any document, importer:\r\n  // - loads any linked import documents (with deduping)\r\n  // - whenever an import is loaded, prompts the parser to try to parse\r\n  // - observes imported documents for new elements (these are handled via the\r\n  // dynamic importer)\r\n  class Importer {\r\n    constructor() {\r\n      this.documents = {};\r\n      this._loaded = this._loaded.bind(this);\r\n      this._loadedAll = this._loadedAll.bind(this);\r\n      this._importLoader = new Loader(this._loaded, this._loadedAll);\r\n    }\r\n\r\n    bootDocument(doc) {\r\n      this._loadSubtree(doc);\r\n    }\r\n\r\n    loadNode(node) {\r\n      this._importLoader.addNode(node);\r\n    }\r\n\r\n    // load all loadable elements within the parent element\r\n    _loadSubtree(parent) {\r\n      const nodes = parent.querySelectorAll(IMPORT_SELECTOR);\r\n      // add these nodes to loader's queue\r\n      this._importLoader.addNodes(nodes);\r\n    }\r\n\r\n    _loaded(url, elt, resource, err, redirectedUrl) {\r\n      flags.log && console.log('loaded', url, elt);\r\n      // store generic resource\r\n      // TODO(sorvell): fails for nodes inside <template>.content\r\n      // see https://code.google.com/p/chromium/issues/detail?id=249381.\r\n      elt.__resource = resource;\r\n      elt.__error = err;\r\n      if (isImportLink(elt)) {\r\n        let doc = this.documents[url];\r\n        // if we've never seen a document at this url\r\n        if (doc === undefined) {\r\n          // generate an HTMLDocument from data\r\n          doc = err ? null : makeDocument(resource, redirectedUrl || url);\r\n          if (doc) {\r\n            doc.__importLink = elt;\r\n            // note, we cannot use MO to detect parsed nodes because\r\n            // SD polyfill does not report these as mutations.\r\n            this._loadSubtree(doc);\r\n          }\r\n          // cache document\r\n          this.documents[url] = doc;\r\n        }\r\n        // don't store import record until we're actually loaded\r\n        // store document resource\r\n        elt.__doc = doc;\r\n      }\r\n    }\r\n\r\n    _loadedAll() {\r\n      this._flatten(document);\r\n      //TODO bring it into this class?\r\n      runScripts();\r\n      this._fireEvents();\r\n      this._observe(document.head);\r\n    }\r\n\r\n    _flatten(element) {\r\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\r\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\r\n        n.import = this.documents[n.href];\r\n        if (n.import && !n.import.__firstImport) {\r\n          n.import.__firstImport = n;\r\n          this._flatten(n.import);\r\n          n.appendChild(n.import);\r\n          if (document.contains(n.parentNode)) {\r\n            // TODO(sorvell): need to coordinate with observer in document.head.\r\n            //this.observe(n.import);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    _fireEvents() {\r\n      // Wait for pending resources to finish loading, then fire load/error.\r\n      const pending = document.querySelectorAll(pendingImportsSelectors);\r\n      Promise.all(Array.prototype.slice.call(pending).map(whenElementLoaded)).then(() => {\r\n        const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\r\n          (document.querySelectorAll(IMPORT_SELECTOR));\r\n        // Inverse order to have events firing bottom-up.\r\n        for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\r\n          // Don't fire twice same event.\r\n          if (!n.__loaded) {\r\n            const eventType = n.import ? 'load' : 'error';\r\n            flags.log && console.warn('fire', eventType, n.href);\r\n            n.__loaded = true;\r\n            n.dispatchEvent(new CustomEvent(eventType));\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    _observe(element) {\r\n      if (element.__importObserver) {\r\n        return;\r\n      }\r\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\r\n      element.__importObserver.observe(element, {\r\n        childList: true,\r\n        subtree: true\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @param {Array<MutationRecord>} mutations\r\n     */\r\n    _onMutation(mutations) {\r\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\r\n        if (m.addedNodes) {\r\n          for (let i = 0, l = m.addedNodes.length; i < l; i++) {\r\n            if (m.addedNodes[i] && isImportLink(m.addedNodes[i])) {\r\n              this.loadNode(m.addedNodes[i]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * @type {Function}\r\n   */\r\n  const MATCHES = Element.prototype.matches ||\r\n    Element.prototype.matchesSelector ||\r\n    Element.prototype.mozMatchesSelector ||\r\n    Element.prototype.msMatchesSelector ||\r\n    Element.prototype.oMatchesSelector ||\r\n    Element.prototype.webkitMatchesSelector;\r\n\r\n  /**\r\n   * @param {!Node} node\r\n   * @return {boolean}\r\n   */\r\n  function isImportLink(node) {\r\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\r\n  }\r\n\r\n  /********************* vulcanize style inline processing  *********************/\r\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\r\n\r\n  function fixUrlAttributes(element, base) {\r\n    attrs.forEach((a) => {\r\n      const at = element.attributes[a];\r\n      const v = at && at.value;\r\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\r\n        at.value = (a === 'style') ?\r\n          Path.resolveUrlsInCssText(v, base) :\r\n          Path.replaceAttrUrl(v, base);\r\n      }\r\n    });\r\n  }\r\n\r\n  function fixUrlsInTemplate(template, base) {\r\n    const content = template.content;\r\n    if (!content) { // Template not supported.\r\n      return;\r\n    }\r\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\r\n    for (let i = 0; i < n$.length; i++) {\r\n      const n = n$[i];\r\n      if (n.localName == 'style') {\r\n        Path.resolveUrlsInStyle(n, base);\r\n      } else {\r\n        fixUrlAttributes(n, base);\r\n      }\r\n    }\r\n    fixUrlsInTemplates(content, base);\r\n  }\r\n\r\n  function fixUrlsInTemplates(element, base) {\r\n    const t$ = element.querySelectorAll('template');\r\n    for (let i = 0; i < t$.length; i++) {\r\n      fixUrlsInTemplate(t$[i], base);\r\n    }\r\n  }\r\n\r\n  function fixUrls(element, base) {\r\n    const n$ = element.querySelectorAll(importsSelectors);\r\n    for (let i = 0; i < n$.length; i++) {\r\n      const n = n$[i];\r\n      if (n.href) {\r\n        n.href = new URL(n.getAttribute('href'), base);\r\n      }\r\n      if (n.src) {\r\n        n.src = new URL(n.getAttribute('src'), base);\r\n      }\r\n      if (n.localName == 'style') {\r\n        Path.resolveUrlsInStyle(n, base);\r\n      }\r\n    }\r\n    fixUrlsInTemplates(element, base);\r\n  }\r\n\r\n  function markScripts(element, url) {\r\n    const s$ = element.querySelectorAll('script');\r\n    for (let i = 0, l = s$.length, o; i < l && (o = s$[i]); i++) {\r\n      if (o.textContent) {\r\n        o.textContent = o.textContent + `\\n//# sourceURL=${url}`;\r\n      }\r\n      if (o.src) {\r\n        o.setAttribute('src', Path.replaceAttrUrl(o.getAttribute('src'), url));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replaces all the imported scripts with a clone in order to execute them.\r\n   * Updates the `currentScript`.\r\n   */\r\n\r\n  function runScripts() {\r\n    const s$ = document.querySelectorAll('import-content script');\r\n    for (let i = 0, l = s$.length, o; i < l && (o = s$[i]); i++) {\r\n      const c = document.createElement('script');\r\n      c.textContent = o.textContent;\r\n      if (o.src) {\r\n        c.setAttribute('src', o.getAttribute('src'));\r\n      }\r\n      o.parentNode.replaceChild(c, o);\r\n      currentScript = c;\r\n      whenElementLoaded(c).then(function(script) {\r\n        if (script === currentScript) {\r\n          currentScript = null;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Waits for an element to finish loading. If already done loading, it will\r\n   * mark the elemnt accordingly.\r\n   * @param {!Element} element\r\n   * @return {Promise}\r\n   */\r\n  function whenElementLoaded(element) {\r\n    return new Promise(resolve => {\r\n      if (isElementLoaded(element)) {\r\n        resolve(element);\r\n      } else {\r\n        //TODO(valdrin) should it update currentScript if it is a <script> ?\r\n        //TODO(valdrin) should check if isIE and it is a loaded style.\r\n        element.addEventListener('load', () => {\r\n          element.__loaded = true;\r\n          element.__errored = false;\r\n          resolve(element);\r\n        });\r\n        element.addEventListener('error', () => {\r\n          element.__loaded = true;\r\n          element.__errored = true;\r\n          resolve(element);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {!Element} element\r\n   * @return {boolean}\r\n   */\r\n  function isElementLoaded(element) {\r\n    if (!element.__loaded) {\r\n      if (useNative && isImportLink(element) && element.import &&\r\n        element.import.readyState !== 'loading') {\r\n        flags.log && console.log('delayed flagging of import loaded', element);\r\n        element.__loaded = true;\r\n      } else if (isIE && element.localName === 'style') {\r\n        // NOTE: IE does not fire \"load\" event for styles that have already\r\n        // loaded. This is in violation of the spec, so we try our hardest to\r\n        // work around it.\r\n        let fakeLoad = false;\r\n        // If there's not @import in the textContent, assume it has loaded\r\n        if (element.textContent.indexOf('@import') == -1) {\r\n          fakeLoad = true;\r\n          // if we have a sheet, we have been parsed\r\n        } else if (element.sheet) {\r\n          fakeLoad = true;\r\n          const csr = element.sheet.cssRules;\r\n          // search the rules for @import's\r\n          for (let i = 0, l = csr ? csr.length : 0; i < l && fakeLoad; i++) {\r\n            if (csr[i].type === CSSRule.IMPORT_RULE) {\r\n              // if every @import has resolved, fake the load\r\n              fakeLoad = Boolean(csr[i].styleSheet);\r\n            }\r\n          }\r\n        }\r\n        if (fakeLoad) {\r\n          flags.log && console.log('delayed flagging of style w/ imports loaded', element);\r\n          element.__loaded = true;\r\n        }\r\n      }\r\n    }\r\n    return element.__loaded;\r\n  }\r\n\r\n  function fixDomModules(element, url) {\r\n    const s$ = element.querySelectorAll('dom-module');\r\n    for (let i = 0; i < s$.length; i++) {\r\n      const o = s$[i];\r\n      const assetpath = o.getAttribute('assetpath') || '';\r\n      o.setAttribute('assetpath', Path.replaceAttrUrl(assetpath, url));\r\n    }\r\n  }\r\n\r\n  function makeDocument(resource, url) {\r\n    // TODO(valdrin): better to use a disconnected document here so that\r\n    // elements don't upgrade until inserted into main document,\r\n    // however, this is blocked on https://bugs.webkit.org/show_bug.cgi?id=165617\r\n    // let doc = document.implementation.createHTMLDocument();\r\n    const content = document.createElement('import-content');\r\n    content.setAttribute('import-href', url);\r\n    content.style.display = 'none';\r\n    content.innerHTML = resource;\r\n    markScripts(content, url);\r\n    // TODO(sorvell): this is specific to users (Polymer) of the dom-module element.\r\n    fixDomModules(content, url);\r\n    fixUrls(content, url);\r\n    return content;\r\n  }\r\n\r\n  /**\r\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\r\n    method. This api is necessary because unlike the native implementation,\r\n    script elements do not force imports to resolve. Instead, users should wrap\r\n    code in either an `HTMLImportsLoaded` handler or after load time in an\r\n    `HTMLImports.whenReady(callback)` call.\r\n\r\n    NOTE: This module also supports these apis under the native implementation.\r\n    Therefore, if this file is loaded, the same code can be used under both\r\n    the polyfill and native implementation.\r\n   */\r\n\r\n  const isIE = /Trident/.test(navigator.userAgent);\r\n  const requiredReadyState = isIE ? 'complete' : 'interactive';\r\n  const READY_EVENT = 'readystatechange';\r\n\r\n  // call a callback when all HTMLImports in the document at call time\r\n  // (or at least document ready) have loaded.\r\n  // 1. ensure the document is in a ready state (has dom), then\r\n  // 2. watch for loading of imports and call callback when done\r\n  function whenReady(callback, doc) {\r\n    doc = doc || document;\r\n    // if document is loading, wait and try again\r\n    whenDocumentReady(function() {\r\n      watchImportsLoad(callback, doc);\r\n    }, doc);\r\n  }\r\n\r\n  function isDocumentReady(doc) {\r\n    return (doc.readyState === 'complete' ||\r\n      doc.readyState === requiredReadyState);\r\n  }\r\n\r\n  // call <callback> when we ensure the document is in a ready state\r\n  function whenDocumentReady(callback, doc) {\r\n    if (!isDocumentReady(doc)) {\r\n      const checkReady = function() {\r\n        if (doc.readyState === 'complete' ||\r\n          doc.readyState === requiredReadyState) {\r\n          doc.removeEventListener(READY_EVENT, checkReady);\r\n          whenDocumentReady(callback, doc);\r\n        }\r\n      };\r\n      doc.addEventListener(READY_EVENT, checkReady);\r\n    } else if (callback) {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  function markTargetLoaded(event) {\r\n    event.target.__loaded = true;\r\n  }\r\n\r\n  // call <callback> when we ensure all imports have loaded\r\n  function watchImportsLoad(callback, doc) {\r\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\r\n    // only non-nested imports\r\n    imports = Array.prototype.slice.call(imports).filter(function(n) {\r\n      return !MATCHES.call(n, 'import-content ' + IMPORT_SELECTOR);\r\n    });\r\n    Promise.all(imports.map(whenElementLoaded)).then(() => {\r\n      const newImports = [];\r\n      const errorImports = [];\r\n      imports.forEach((imp) => {\r\n        (imp.__errored ? errorImports : newImports).push(imp);\r\n      });\r\n      callback( /** @type {!HTMLImportInfo} */ ({\r\n        allImports: imports,\r\n        loadedImports: newImports,\r\n        errorImports: errorImports\r\n      }));\r\n    });\r\n  }\r\n\r\n  // make `whenReady` work with native HTMLImports\r\n  if (useNative) {\r\n    /**\r\n     * @param {Array<MutationRecord>} mutations\r\n     */\r\n    function handleMutations(mutations) {\r\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\r\n        if (m.addedNodes) {\r\n          for (let i = 0, l = m.addedNodes.length; i < l; i++) {\r\n            if (isImportLink(m.addedNodes[i])) {\r\n              whenElementLoaded( /** @type {!Element} */ (m.addedNodes[i]));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    new MutationObserver(handleMutations).observe(document.head, {\r\n      childList: true\r\n    });\r\n\r\n    // make sure to catch any imports that are in the process of loading\r\n    // when this script is run.\r\n    (function() {\r\n      if (document.readyState === 'loading') {\r\n        const imports = document.querySelectorAll(IMPORT_SELECTOR);\r\n        for (let i = 0, l = imports.length; i < l; i++) {\r\n          whenElementLoaded(imports[i]);\r\n        }\r\n      }\r\n    })();\r\n\r\n  } else {\r\n    let importer;\r\n\r\n    function bootstrap() {\r\n      importer = importer || new Importer();\r\n      importer.bootDocument(document);\r\n    }\r\n\r\n    if (document.readyState === 'complete' ||\r\n      (document.readyState === 'interactive' && !window.attachEvent)) {\r\n      bootstrap();\r\n    } else {\r\n      document.addEventListener('DOMContentLoaded', bootstrap);\r\n    }\r\n  }\r\n\r\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\r\n  // have loaded. This event is required to simulate the script blocking\r\n  // behavior of native imports. A main document script that needs to be sure\r\n  // imports have loaded should wait for this event.\r\n  whenReady(function(detail) {\r\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\r\n      cancelable: true,\r\n      bubbles: true,\r\n      detail: detail\r\n    }));\r\n  });\r\n\r\n  // exports\r\n  scope.useNative = useNative;\r\n  scope.whenReady = whenReady;\r\n\r\n})(window.HTMLImports = (window.HTMLImports || {}));\r\n"]}