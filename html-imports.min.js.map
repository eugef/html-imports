{"version":3,"sources":["src/html-imports.js"],"names":["scope","constructor","Importer","documents","_loaded","bind","_loadedAll","_importLoader","Loader","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","IMPORT_SELECTOR","fixUrlAttributes","element","base","attrs","forEach","a","at","attributes","v","value","search","Path","resolveUrlsInCssText","replaceAttrUrl","fixUrlsInTemplates","t$","querySelectorAll","i","length","content","template","n$","n","localName","resolveUrlsInStyle","whenElementLoaded","Promise","resolve","isElementLoaded","addEventListener","__loaded","__errored","useNative","import","readyState","flags","log","console","isIE","fakeLoad","textContent","indexOf","sheet","csr","cssRules","l","type","CSSRule","IMPORT_RULE","styleSheet","whenReady","callback","doc","document","whenDocumentReady","watchImportsLoad","requiredReadyState","checkReady","removeEventListener","READY_EVENT","imports","Array","prototype","slice","filter","all","map","then","newImports","errorImports","imp","push","allImports","loadedImports","createElement","bust","currentScript","Object","defineProperty","get","scripts","configurable","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","style","linkUrl","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","href","URL","test","Xhr","async","load","request","XMLHttpRequest","Math","random","open","redirectedUrl","undefined","locationHeader","getResponseHeader","substr","location","origin","e","error","message","_ok","response","responseText","send","status","addNodes","nodes","require","checkDone","addNode","elt","src","dedupe","fetch","tail","match","pieces","split","body","header","atob","decodeURIComponent","setTimeout","receive","resource","err","$p","p","bootDocument","_loadSubtree","loadNode","parent","__resource","__error","setAttribute","display","innerHTML","s$","o","getAttribute","assetpath","importsSelectors","__importLink","__doc","_flatten","parentNode","replaceChild","_fireEvents","_observe","__firstImport","appendChild","from","pendingImportsSelectors","eventType","warn","dispatchEvent","CustomEvent","head","__importObserver","MutationObserver","_onMutation","observe","childList","subtree","mutations","j","addedNodes","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","navigator","userAgent","handleMutations","bootstrap","importer","attachEvent","window","detail","evt","createEvent","initCustomEvent","HTMLImports"],"mappings":"A;;;;;;;;;aASC,SAAQ,CAACA,CAAD,CAAQ,CAkQbC,QADIC,EACO,EAAG,CACZ,IAAAC,EAAA,CAAiB,EACjB,KAAAC,EAAA,CAAe,IAAAA,EAAAC,KAAA,CAAkB,IAAlB,CACf,KAAAC,EAAA,CAAkB,IAAAA,EAAAD,KAAA,CAAqB,IAArB,CAClB,KAAAE,EAAA,CAAqB,IAAIC,CAAJ,CAAW,IAAAJ,EAAX,CAAyB,IAAAE,EAAzB,CAJT,CA1IdL,QADIO,EACO,CAACC,CAAD,CAASC,CAAT,CAAqB,CAC9B,IAAAC,EAAA,CAAa,EACb,KAAAC,EAAA,CAAcH,CACd,KAAAI,EAAA,CAAkBH,CAClB,KAAAI,EAAA,CAAgB,CAChB,KAAAC,EAAA,CAAe,EALe,CAiRlCC,QAASA,EAAY,CAACC,CAAD,CAAO,CAC1B,MAAOA,EAAAC,SAAP,GAAyBC,IAAAC,aAAzB,EAA8CC,CAAAC,KAAA,CAAaL,CAAb,CAvYxBM,kBAuYwB,CADpB,CAO5BC,QAASA,EAAgB,CAACC,CAAD,CAAUC,CAAV,CAAgB,CACvCC,CAAAC,QAAA,CAAc,QAAA,CAACC,CAAD,CAAO,CACnB,IAAMC,EAAKL,CAAAM,WAAA,CAAmBF,CAAnB,CAAX,CACMG,EAAIF,CAAJE,EAAUF,CAAAG,MACZD,EAAJ,EAAkC,CAAlC,CAAUA,CAAAE,OAAA,CAAS,WAAT,CAAV,GACEJ,CAAAG,MADF,CACoB,OAAP,GAACJ,CAAD,CACTM,CAAAC,EAAA,CAA0BJ,CAA1B,CAA6BN,CAA7B,CADS,CAETS,CAAAE,EAAA,CAAoBL,CAApB,CAAuBN,CAAvB,CAHJ,CAHmB,CAArB,CADuC,CA0BzCY,QAASA,EAAkB,CAACb,CAAD,CAAUC,CAAV,CAAgB,CACnCa,CAAAA,CAAKd,CAAAe,iBAAA,CAAyB,UAAzB,CACX,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,CAAAG,OAApB,CAA+BD,CAAA,EAA/B,CAAoC,CAbpC,IAc2Bf,IAAAA;AAAAA,CAAAA,CAhBrBiB,EAgBcJ,CAAAK,CAAGH,CAAHG,CAhBJD,QAgBWjB,CAfrBmB,EAAKF,CAAAH,iBAAA,CAAyB,oDAAzB,CAegBd,CAdlBe,EAAI,CAAb,CAAgBA,CAAhB,CAAoBI,CAAAH,OAApB,CAA+BD,CAAA,EAA/B,CAAoC,CAClC,IAAMK,EAAID,CAAA,CAAGJ,CAAH,CACS,QAAnB,EAAIK,CAAAC,UAAJ,CACEZ,CAAAa,EAAA,CAAwBF,CAAxB,CAA2BpB,CAA3B,CADF,CAGEF,CAAA,CAAiBsB,CAAjB,CAAoBpB,CAApB,CALgC,CAQpCY,CAAA,CAAmBK,CAAnB,CAA4BjB,CAA5B,CAKoC,CAFK,CA2D3CuB,QAASA,EAAiB,CAACxB,CAAD,CAAU,CAClC,MAAO,KAAIyB,OAAJ,CAAY,QAAA,CAAAC,CAAA,CAAW,CACxBC,CAAA,CAAgB3B,CAAhB,CAAJ,CACE0B,CAAA,CAAQ1B,CAAR,CADF,EAKEA,CAAA4B,iBAAA,CAAyB,MAAzB,CAAiC,QAAA,EAAM,CACrC5B,CAAA6B,EAAA,CAAmB,CAAA,CACnB7B,EAAA8B,EAAA,CAAoB,CAAA,CACpBJ,EAAA,CAAQ1B,CAAR,CAHqC,CAAvC,CAKA,CAAAA,CAAA4B,iBAAA,CAAyB,OAAzB,CAAkC,QAAA,EAAM,CACtC5B,CAAA6B,EAAA,CAAmB,CAAA,CACnB7B,EAAA8B,EAAA,CAAoB,CAAA,CACpBJ,EAAA,CAAQ1B,CAAR,CAHsC,CAAxC,CAVF,CAD4B,CAAvB,CAD2B,CAyBpC2B,QAASA,EAAe,CAAC3B,CAAD,CAAU,CAChC,GAAK6B,CAAA7B,CAAA6B,EAAL,CACE,GAAIE,CAAJ,EAAiBxC,CAAA,CAAaS,CAAb,CAAjB,EAA0CA,CAAAgC,OAA1C,EACgC,SADhC,GACEhC,CAAAgC,OAAAC,WADF,CAEEC,CAAAC,IACA,EADaC,OAAAD,IAAA,CAAY,qCAAZ,CACb,CAAAnC,CAAA6B,EAAA,CAAmB,CAAA,CAHrB,KAIO,IAAIQ,CAAJ,EAAkC,OAAlC;AAAYrC,CAAAsB,UAAZ,CAA2C,CAIhD,IAAIgB,EAAW,CAAA,CAEf,IAA+C,EAA/C,EAAItC,CAAAuC,YAAAC,QAAA,CAA4B,SAA5B,CAAJ,CACEF,CAAA,CAAW,CAAA,CADb,KAGO,IAAItC,CAAAyC,MAAJ,CAIL,IAHA,IAAAH,EAAW,CAAA,CAAX,CACMI,EAAM1C,CAAAyC,MAAAE,SADZ,CAGS3B,EAAI,CAHb,CAGgB4B,EAAIF,CAAA,CAAMA,CAAAzB,OAAN,CAAmB,CAAvC,CAA0CD,CAA1C,CAA8C4B,CAA9C,EAAmDN,CAAnD,CAA6DtB,CAAA,EAA7D,CACM0B,CAAA,CAAI1B,CAAJ,CAAA6B,KAAJ,GAAoBC,OAAAC,YAApB,GAEET,CAFF,CAEa,CAAQU,CAAAN,CAAA,CAAI1B,CAAJ,CAAAgC,WAFrB,CAMAV,EAAJ,GACEJ,CAAAC,IACA,EADaC,OAAAD,IAAA,CAAY,+CAAZ,CACb,CAAAnC,CAAA6B,EAAA,CAAmB,CAAA,CAFrB,CApBgD,CA0BpD,MAAO7B,EAAA6B,EAhCyB,CAgFlCoB,QAASA,EAAS,CAACC,CAAD,CAAWC,CAAX,CAAgB,CAChCA,CAAA,CAAMA,CAAN,EAAaC,QAEbC,EAAA,CAAkB,QAAQ,EAAG,CAC3BC,CAAA,CAAiBJ,CAAjB,CAA2BC,CAA3B,CAD2B,CAA7B,CAEGA,CAFH,CAHgC,CAclCE,QAASA,EAAiB,CAACH,CAAD,CAAWC,CAAX,CAAgB,CACxC,GAN2B,UAM3B,GAAqBA,CANblB,WAMR,EAAqBkB,CALnBlB,WAKF,GALqBsB,CAKrB,CASWL,CAAJ,EACLA,CAAA,EAVF,KAA2B,CACzB,IAAMM,EAAaA,QAAQ,EAAG,CAC5B,GAAuB,UAAvB,GAAIL,CAAAlB,WAAJ,EACEkB,CAAAlB,WADF,GACqBsB,CADrB,CAEEJ,CAAAM,oBAAA,CAzBYC,kBAyBZ;AAAqCF,CAArC,CACA,CAAAH,CAAA,CAAkBH,CAAlB,CAA4BC,CAA5B,CAJ0B,CAO9BA,EAAAvB,iBAAA,CA7BgB8B,kBA6BhB,CAAkCF,CAAlC,CARyB,CADa,CAoB1CF,QAASA,EAAgB,CAACJ,CAAD,CAAWC,CAAX,CAAgB,CACvC,IAAIQ,EAAUR,CAAApC,iBAAA,CA9mBQjB,kBA8mBR,CAAd,CAEA6D,EAAUC,KAAAC,UAAAC,MAAAjE,KAAA,CAA2B8D,CAA3B,CAAAI,OAAA,CAA2C,QAAQ,CAAC1C,CAAD,CAAI,CAC/D,MAAO,CAACzB,CAAAC,KAAA,CAAawB,CAAb,CAAgB,iCAAhB,CADuD,CAAvD,CAGVI,QAAAuC,IAAA,CAAYL,CAAAM,IAAA,CAAYzC,CAAZ,CAAZ,CAAA0C,KAAA,CAAiD,QAAA,EAAM,CACrD,IAAMC,EAAa,EAAnB,CACMC,EAAe,EACrBT,EAAAxD,QAAA,CAAgB,QAAA,CAACkE,CAAD,CAAS,CACvBC,CAACD,CAAAvC,EAAA,CAAgBsC,CAAhB,CAA+BD,CAAhCG,MAAA,CAAiDD,CAAjD,CADuB,CAAzB,CAGAnB,EAAA,CAA0C,CACxCqB,WAAYZ,CAD4B,CAExCa,cAAeL,CAFyB,CAGxCC,aAAcA,CAH0B,CAA1C,CANqD,CAAvD,CANuC,CA5mBzC,IAAMrC,EAAoB,QAApBA,EAAgCqB,SAAAqB,cAAA,CAAuB,MAAvB,CAAtC,CACMvC,EAAQ,CACZwC,EAAM,CAAA,CADM,CAEZvC,IAAK,CAAA,CAFO,CADd,CAaIwC,EAAgB,IACpBC,OAAAC,eAAA,CAAsBzB,QAAtB,CAAgC,gBAAhC,CAAkD,CAChD0B,IAAKA,QAAQ,EAAG,CACd,MAAOH,EAAP;AAAwBvB,QAAAuB,cAAxB,GAI2B,UAAxB,GAAAvB,QAAAnB,WAAA,CACCmB,QAAA2B,QAAA,CAAiB3B,QAAA2B,QAAA9D,OAAjB,CAA2C,CAA3C,CADD,CACiD,IALpD,CADc,CADgC,CAShD+D,aAAc,CAAA,CATkC,CAAlD,CAaA,KAAMC,EAAe,yBAArB,CACMC,EAAiB,qBADvB,CAEMC,EAAoB,oCAF1B,CAMMzE,EAAO,CACXa,EAAoBA,QAAQ,CAAC6D,CAAD,CAAQC,CAAR,CAAiB,CAC3CD,CAAA7C,YAAA,CAAoB7B,CAAAC,EAAA,CAA0ByE,CAAA7C,YAA1B,CAA6C8C,CAA7C,CADuB,CADlC,CAKX1E,EAAsBA,QAAQ,CAAC2E,CAAD,CAAUD,CAAV,CAAmB,CAC3CE,CAAAA,CAAI7E,CAAA8E,EAAA,CAAiBF,CAAjB,CAA0BD,CAA1B,CAAmCH,CAAnC,CAER,OADAK,EACA,CADI7E,CAAA8E,EAAA,CAAiBD,CAAjB,CAAoBF,CAApB,CAA6BF,CAA7B,CAF2C,CALtC,CAWXK,EAAaA,QAAQ,CAACC,CAAD,CAAOJ,CAAP,CAAgBK,CAAhB,CAAwB,CAC3C,MAAOD,EAAAE,QAAA,CAAaD,CAAb,CAAqB,QAAQ,CAACE,CAAD,CAAIC,CAAJ,CAASC,CAAT,CAAcC,CAAd,CAAoB,CAClDC,CAAAA,CAAUF,CAAAH,QAAA,CAAY,OAAZ,CAAqB,EAArB,CACVN,EAAJ,GACEW,CADF,CACYC,CAAC,IAAIC,GAAJ,CAAQF,CAAR,CAAiBX,CAAjB,CAADY,MADZ,CAGA,OAAOJ,EAAP,CAAa,GAAb,CAAoBG,CAApB,CAA8B,GAA9B,CAAqCD,CALiB,CAAjD,CADoC,CAXlC,CAqBXnF,EAAgBA,QAAQ,CAAC6E,CAAD,CAAOJ,CAAP,CAAgB,CACtC,MAAII,EAAJ,EAAYR,CAAAkB,KAAA,CAAkBV,CAAlB,CAAZ,CACSA,CADT,CAGSQ,CAAA,IAAIC,GAAJ,CAAQT,CAAR;AAAcJ,CAAd,CAAAY,MAJ6B,CArB7B,CANb,CAqCMG,EAAM,CAEVC,MAAO,CAAA,CAFG,CASVC,KAAMA,QAAQ,CAACR,CAAD,CAAM5C,CAAN,CAAgB,CAC5B,IAAMqD,EAAU,IAAIC,cAChBtE,EAAAwC,EAAJ,GACEoB,CADF,EACS,GADT,CACeW,IAAAC,OAAA,EADf,CAGAH,EAAAI,KAAA,CAAa,KAAb,CAAoBb,CAApB,CAAyBM,CAAAC,MAAzB,CACAE,EAAA3E,iBAAA,CAAyB,kBAAzB,CAA6C,QAAA,EAAO,CAClD,GAA2B,CAA3B,GAAI2E,CAAAtE,WAAJ,CAA8B,CAG5B,IAAI2E,EAAgBC,IAAAA,EACpB,IAAI,CACF,IAAMC,EAAiBP,CAAAQ,kBAAA,CAA0B,UAA1B,CACnBD,EAAJ,GAEEF,CAFF,CAEmD,GAAjC,GAACE,CAAAE,OAAA,CAAsB,CAAtB,CAAyB,CAAzB,CAAD,CACdC,QAAAC,OADc,CACIJ,CADJ,CACqBA,CAHvC,CAFE,CAOF,MAAOK,CAAP,CAAU,CACV/E,OAAAgF,MAAA,CAAcD,CAAAE,QAAd,CADU,CAIZnE,CAAA,CAAS,CAACkD,CAAAkB,EAAA,CAAQf,CAAR,CAAV,CADkBA,CAAAgB,SAClB,EADsChB,CAAAiB,aACtC,CAAsCZ,CAAtC,CAf4B,CADoB,CAApD,CAmBAL,EAAAkB,KAAA,EACA,OAAOlB,EA1BqB,CATpB,CAsCVe,EAAKA,QAAQ,CAACf,CAAD,CAAU,CACrB,MAA0B,IAA1B,EAAQA,CAAAmB,OAAR,EAAkD,GAAlD,CAAiCnB,CAAAmB,OAAjC,EACsB,GADtB,GACGnB,CAAAmB,OADH,EAEsB,CAFtB,GAEGnB,CAAAmB,OAHkB,CAtCb,CA4DV,EAAA,UAAA,EAAA,CAAAC,QAAQ,CAACC,CAAD,CAAQ,CAEd,IAAAvI,EAAA;AAAiBuI,CAAA3G,OAEjB,KAJc,IAILD,EAAI,CAJC,CAIE4B,EAAIgF,CAAA3G,OAJN,CAIoBI,CAAlC,CACGL,CADH,CACO4B,CADP,GACcvB,CADd,CACkBuG,CAAA,CAAM5G,CAAN,CADlB,EAC6BA,CAAA,EAD7B,CAEE,IAAA6G,EAAA,CAAaxG,CAAb,CAGF,KAAAyG,EAAA,EATc,CAYhB,EAAA,UAAA,EAAA,CAAAC,QAAO,CAACvI,CAAD,CAAO,CAEZ,IAAAH,EAAA,EAEA,KAAAwI,EAAA,CAAarI,CAAb,CAEA,KAAAsI,EAAA,EANY,CASd,EAAA,UAAA,EAAA,CAAAD,QAAO,CAACG,CAAD,CAAM,CACX,IAAMlC,EAAMkC,CAAAC,IAANnC,EAAiBkC,CAAA/B,KAElB,KAAAiC,EAAA,CAAYpC,CAAZ,CAAiBkC,CAAjB,CAAL,EAEE,IAAAG,EAAA,CAAWrC,CAAX,CAAgBkC,CAAhB,CALS,CASb,EAAA,UAAA,EAAA,CAAAE,QAAM,CAACpC,CAAD,CAAMkC,CAAN,CAAW,CACf,GAAI,IAAA1I,EAAA,CAAawG,CAAb,CAAJ,CAIE,MAFA,KAAAxG,EAAA,CAAawG,CAAb,CAAAxB,KAAA,CAAuB0D,CAAvB,CAEO,CAAA,CAAA,CAGT,IAAI,IAAA9I,EAAA,CAAW4G,CAAX,CAAJ,CAKE,MAJA,KAAA3G,EAAA,CAAY2G,CAAZ,CAAiBkC,CAAjB,CAAsB,IAAA9I,EAAA,CAAW4G,CAAX,CAAtB,CAIO,CAFP,IAAAsC,EAAA,EAEO,CAAA,CAAA,CAGT,KAAA9I,EAAA,CAAawG,CAAb,CAAA,CAAoB,CAACkC,CAAD,CAEpB,OAAO,CAAA,CAlBQ,CAqBjB,EAAA,UAAA,EAAA,CAAAG,QAAK,CAACrC,CAAD,CAAMkC,CAAN,CAAW,CAAA,IAAA,EAAA,IACd9F,EAAAC,IAAA,EAAaC,OAAAD,IAAA,CAAY,OAAZ,CAAqB2D,CAArB,CAA0BkC,CAA1B,CACb,IAAKlC,CAAL,CAIO,GAAIA,CAAAuC,MAAA,CAAU,QAAV,CAAJ,CAAyB,CAExBC,CAAAA,CAASxC,CAAAyC,MAAA,CAAU,GAAV,CAEf,KAAIC,EAAOF,CAAA,CAAO,CAAP,CAAX,CAEEE,EAD+B,EAAjC,CAFeF,CAAAG,CAAO,CAAPA,CAEXjG,QAAA,CAAe,SAAf,CAAJ,CACSkG,IAAA,CAAKF,CAAL,CADT;AAGSG,kBAAA,CAAmBH,CAAnB,CAETI,WAAA,CAAW,QAAA,EAAM,CAAA,MAAA,EAAAC,EAAA,CAAa/C,CAAb,CAAuB,CAAA,CAAvB,CAA8B0C,CAA9B,CAAA,CAAjB,CAAsD,CAAtD,CAV8B,CAAzB,IAYLpC,EAAAE,KAAA,CAASR,CAAT,CAAc,QAAA,CAACsB,CAAD,CAAQ0B,CAAR,CAAkBlC,CAAlB,CACZ,CAAA,MAAA,EAAAiC,EAAA,CAAa/C,CAAb,CAAuBsB,CAAvB,CAA8B0B,CAA9B,CAAwClC,CAAxC,CAAA,CADF,CAhBF,KACEgC,WAAA,CAAW,QAAA,EAAM,CAAA,MAAA,EAAAC,EAAA,CAAa/C,CAAb,CAAuB,CAAA,CAAvB,CAA6B,CAC5CsB,MAAO,wBADqC,CAA7B,CAAA,CAAjB,CAEI,CAFJ,CAHY,CA8BhB,EAAA,UAAA,EAAA,CAAAyB,QAAO,CAAC/C,CAAD,CAAWiD,CAAX,CAAgBD,CAAhB,CAA0BlC,CAA1B,CAAyC,CAC9C,IAAA1H,EAAA,CAAW4G,CAAX,CAAA,CAAkBgD,CAElB,KADA,IAAME,EAAK,IAAA1J,EAAA,CAAawG,CAAb,CAAX,CACS9E,EAAI,CADb,CACgB4B,EAAIoG,CAAA/H,OADpB,CAC+BgI,CAA/B,CACGjI,CADH,CACO4B,CADP,GACcqG,CADd,CACkBD,CAAA,CAAGhI,CAAH,CADlB,EAC0BA,CAAA,EAD1B,CAIE,IAAA7B,EAAA,CAAY2G,CAAZ,CAAiBmD,CAAjB,CAAoBH,CAApB,CAA8BC,CAA9B,CAAmCnC,CAAnC,CACA,CAAA,IAAAwB,EAAA,EAEF,KAAA9I,EAAA,CAAawG,CAAb,CAAA,CAAoB,IAV0B,CAahD,EAAA,UAAA,EAAA,CAAAsC,QAAI,EAAG,CACL,EAAE,IAAA/I,EACF,KAAAyI,EAAA,EAFK,CAKP,EAAA,UAAA,EAAA,CAAAA,QAAS,EAAG,CACL,IAAAzI,EAAL,EACE,IAAAD,EAAA,EAFQ,CAsCZ,EAAA,UAAA,EAAA,CAAA8J,QAAY,EAAM,CAChB,IAAAC,EAAA,CA+ZsB/F,QA/ZtB,CADgB,CAIlB,EAAA,UAAA,EAAA,CAAAgG,QAAQ,CAAC5J,CAAD,CAAO,CACb,IAAAV,EAAAiJ,EAAA,CAA2BvI,CAA3B,CADa,CAKf;CAAA,UAAA,EAAA,CAAA2J,QAAY,CAACE,CAAD,CAAS,CAGnB,IAAAvK,EAAA6I,EAAA,CAFc0B,CAAAtI,iBAAA6G,CAhRM9H,kBAgRN8H,CAEd,CAHmB,CAMrB,EAAA,UAAA,EAAA,CAAAjJ,QAAO,CAACmH,CAAD,CAAMkC,CAAN,CAAWc,CAAX,CAAqBC,CAArB,CAA0BnC,CAA1B,CAAyC,CAC9C1E,CAAAC,IAAA,EAAaC,OAAAD,IAAA,CAAY,QAAZ,CAAsB2D,CAAtB,CAA2BkC,CAA3B,CAIbA,EAAAsB,EAAA,CAAiBR,CACjBd,EAAAuB,EAAA,CAAcR,CACd,IAAIxJ,CAAA,CAAayI,CAAb,CAAJ,CAAuB,CACrB,IAAI7E,EAAM,IAAAzE,EAAA,CAAeoH,CAAf,CAEV,IAAYe,IAAAA,EAAZ,GAAI1D,CAAJ,CAAuB,CAEf,GAAA4F,CAAA,CAAM,CAAA,CAAA,IAAN,KAAA,CAAa,CAAA,CAAA,CAAA,EAAA,CA2QnB7H,EAAAA,CAAUkC,QAAAqB,cAAA,CAAuB,gBAAvB,CAChBvD,EAAAsI,aAAA,CAAqB,aAArB,CAAoC1D,CAApC,CACA5E,EAAAkE,MAAAqE,QAAA,CAAwB,MACxBvI,EAAAwI,UAAA,CA9QyBZ,CA+JnBa,EAAAA,CAgHMzI,CAhHDH,iBAAA,CAAyB,QAAzB,CACX,KAASC,IAAAA,EAAI,CAAJA,CAAO4B,EAAI+G,CAAA1I,OAAXD,CAAsB4I,CAA/B,CAAkC5I,CAAlC,CAAsC4B,CAAtC,GAA4CgH,CAA5C,CAAgDD,CAAA,CAAG3I,CAAH,CAAhD,EAAwDA,CAAA,EAAxD,CACM4I,CAAArH,YAGJ,GAFEqH,CAAArH,YAEF,CAFkBqH,CAAArH,YAElB,EAFkC,kBAElC,CA2GmBuD,CA3GnB,GAAI8D,CAAA3B,IAAJ,EACE2B,CAAAJ,aAAA,CAAe,KAAf;AAAsB9I,CAAAE,EAAA,CAAoBgJ,CAAAC,aAAA,CAAe,KAAf,CAApB,CA0GL/D,CA1GK,CAAtB,CAyFE6D,EAAAA,CAmBQzI,CAnBHH,iBAAA,CAAyB,YAAzB,CACX,KAASC,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB2I,CAAA1I,OAApB,CAA+BD,CAAA,EAA/B,CACQ4I,CAEN,CAFUD,CAAA,CAAG3I,CAAH,CAEV,CADM8I,CACN,CADkBF,CAAAC,aAAA,CAAe,WAAf,CAClB,EADiD,EACjD,CAAAD,CAAAJ,aAAA,CAAe,WAAf,CAA4B9I,CAAAE,EAAA,CAAoBkJ,CAApB,CAePhE,CAfO,CAA5B,CApHI1E,EAAAA,CAoIEF,CApIGH,iBAAA,CAjMXgJ,6JAiMW,CACX,KAAS/I,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBI,CAAAH,OAApB,CAA+BD,CAAA,EAA/B,CACQK,CAON,CAPUD,CAAA,CAAGJ,CAAH,CAOV,CANIK,CAAA4E,KAMJ,GALE5E,CAAA4E,KAKF,CALW,IAAIC,GAAJ,CAAQ7E,CAAAwI,aAAA,CAAe,MAAf,CAAR,CAgII/D,CAhIJ,CAKX,EAHIzE,CAAA4G,IAGJ,GAFE5G,CAAA4G,IAEF,CAFU,IAAI/B,GAAJ,CAAQ7E,CAAAwI,aAAA,CAAe,KAAf,CAAR,CA6HK/D,CA7HL,CAEV,EAAmB,OAAnB,EAAIzE,CAAAC,UAAJ,EACEZ,CAAAa,EAAA,CAAwBF,CAAxB;AA0HayE,CA1Hb,CAGJjF,EAAA,CAuHQK,CAvHR,CAuHiB4E,CAvHjB,CAwHA,EAAA,CAAO5E,CAnRK,CACN,GADAiC,CACA,CADM,CACN,CACEA,CAAA6G,EAGA,CAHmBhC,CAGnB,CAAA,IAAAmB,EAAA,CAAkBhG,CAAlB,CAGF,KAAAzE,EAAA,CAAeoH,CAAf,CAAA,CAAsB3C,CAVD,CAcvB6E,CAAAiC,EAAA,CAAY9G,CAjBS,CAPuB,CA4BhD,EAAA,UAAA,EAAA,CAAAtE,QAAU,EAAG,CACX,IAAAqL,EAAA,CAAc9G,QAAd,CA+JF,KADA,IAAMuG,EAAKvG,QAAArC,iBAAA,CAA0B,uBAA1B,CAAX,CACSC,EAAI,CADb,CACgB4B,EAAI+G,CAAA1I,OADpB,CAC+B2I,CAA/B,CAAkC5I,CAAlC,CAAsC4B,CAAtC,GAA4CgH,CAA5C,CAAgDD,CAAA,CAAG3I,CAAH,CAAhD,EAAwDA,CAAA,EAAxD,CACE2D,CAKA,CALgBvB,QAAAqB,cAAA,CAAuB,QAAvB,CAKhB,CAJAE,CAAApC,YAIA,CAJ4BqH,CAAArH,YAI5B,CAHIqH,CAAA3B,IAGJ,EAFEtD,CAAA6E,aAAA,CAA2B,KAA3B,CAAkCI,CAAAC,aAAA,CAAe,KAAf,CAAlC,CAEF,CAAAD,CAAAO,WAAAC,aAAA,CAA0BzF,CAA1B,CAAyCiF,CAAzC,CAEFjF,EAAA,CAAgB,IApKd,KAAA0F,EAAA,EACA,KAAAC,EAAA,EALW,CAQb,EAAA,UAAA,EAAA,CAAAJ,QAAQ,CAAClK,CAAD,CAAU,CACVoB,CAAAA,CAAKpB,CAAAe,iBAAA,CA1TSjB,kBA0TT,CACX,KAFgB,IAEPkB,EAAI,CAFG,CAEA4B,EAAIxB,CAAAH,OAFJ,CAEeI,CAA/B,CAAkCL,CAAlC,CAAsC4B,CAAtC,GAA4CvB,CAA5C,CAAgDD,CAAA,CAAGJ,CAAH,CAAhD,EAAwDA,CAAA,EAAxD,CACEK,CAAAW,OACA,CADW,IAAAtD,EAAA,CAAe2C,CAAA4E,KAAf,CACX,CAAI5E,CAAAW,OAAJ;AAAiBuI,CAAAlJ,CAAAW,OAAAuI,EAAjB,GACElJ,CAAAW,OAAAuI,EAEA,CAFyBlJ,CAEzB,CADA,IAAA6I,EAAA,CAAc7I,CAAAW,OAAd,CACA,CAAAX,CAAAmJ,YAAA,CAAcnJ,CAAAW,OAAd,CAHF,CAJc,CAgBlB,EAAA,UAAA,EAAA,CAAAqI,QAAW,EAAG,CAGZ5I,OAAAuC,IAAA,CAAYJ,KAAA6G,KAAA,CADIrH,QAAArC,iBAAAzB,CA1FYoL,8QA0FZpL,CACJ,CAAA2E,IAAA,CAAwBzC,CAAxB,CAAZ,CAAA0C,KAAA,CAA6D,QAAA,EAAM,CAIjE,IAHA,IAAM9C,EACHgC,QAAArC,iBAAA,CA9UejB,kBA8Uf,CADH,CAGSkB,EAAII,CAAAH,OAAJD;AAAgB,CAHzB,CAG4BK,CAA5B,CAAoC,CAApC,EAA+BL,CAA/B,GAA0CK,CAA1C,CAA8CD,CAAA,CAAGJ,CAAH,CAA9C,EAAsDA,CAAA,EAAtD,CAEE,GAAKa,CAAAR,CAAAQ,EAAL,CAAiB,CACf,IAAM8I,EAAYtJ,CAAAW,OAAA,CAAW,MAAX,CAAoB,OACtCE,EAAAC,IAAA,EAAaC,OAAAwI,KAAA,CAAa,MAAb,CAAqBD,CAArB,CAAgCtJ,CAAA4E,KAAhC,CACb5E,EAAAQ,EAAA,CAAa,CAAA,CACbR,EAAAwJ,cAAA,CAAgB,IAAIC,WAAJ,CAAgBH,CAAhB,CAAhB,CAJe,CAN8C,CAAnE,CAHY,CAmBd,EAAA,UAAA,EAAA,CAAAL,QAAQ,EAAU,CAtCFS,IAAAA,EAAA3H,QAAA2H,KAuCV/K,EAAAgL,EAAJ,GAGAhL,CAAAgL,EACA,CAD2B,IAAIC,gBAAJ,CAAqB,IAAAC,EAAAtM,KAAA,CAAsB,IAAtB,CAArB,CAC3B,CAAAoB,CAAAgL,EAAAG,QAAA,CAAiCnL,CAAjC,CAA0C,CACxCoL,UAAW,CAAA,CAD6B,CAExCC,QAAS,CAAA,CAF+B,CAA1C,CAJA,CADgB,CAclB,EAAA,UAAA,EAAA,CAAAH,QAAW,CAACI,CAAD,CAAY,CACrB,IADqB,IACZC,EAAI,CADQ,CACL3F,CAAhB,CAAmB2F,CAAnB,CAAuBD,CAAArK,OAAvB,GAA4C2E,CAA5C,CAAgD0F,CAAA,CAAUC,CAAV,CAAhD,EAA+DA,CAAA,EAA/D,CACE,GAAI3F,CAAA4F,WAAJ,CACE,IADgB,IACPxK,EAAI,CADG,CACA4B,EAAIgD,CAAA4F,WAAAvK,OAApB,CAAyCD,CAAzC,CAA6C4B,CAA7C,CAAgD5B,CAAA,EAAhD,CACMzB,CAAA,CAAaqG,CAAA4F,WAAA,CAAaxK,CAAb,CAAb,CAAJ,EACE,IAAAoI,EAAA,CAAcxD,CAAA4F,WAAA,CAAaxK,CAAb,CAAd,CALa,CAiBzB,KAAMpB,EAAU6L,OAAA5H,UAAA6H,QAAV9L,EACJ6L,OAAA5H,UAAA8H,gBADI/L;AAEJ6L,OAAA5H,UAAA+H,mBAFIhM,EAGJ6L,OAAA5H,UAAAgI,kBAHIjM,EAIJ6L,OAAA5H,UAAAiI,iBAJIlM,EAKJ6L,OAAA5H,UAAAkI,sBALF,CAgBM7L,EAAQ,CAAC,QAAD,CAAW,KAAX,CAAkB,MAAlB,CAA0B,KAA1B,CAAiC,OAAjC,CAhBd,CAwMMmC,EAAO,SAAA8D,KAAA,CAAe6F,SAAAC,UAAf,CAxMb,CAyMM1I,EAAqBlB,CAAA,CAAO,UAAP,CAAoB,aA8D/C,IAAIN,CAAJ,CAgBEoJ,CAAA,IAAIF,gBAAJ,CAZAiB,QAAwB,CAACZ,CAAD,CAAY,CAClC,IADkC,IACzBC,EAAI,CADqB,CAClB3F,CAAhB,CAAmB2F,CAAnB,CAAuBD,CAAArK,OAAvB,GAA4C2E,CAA5C,CAAgD0F,CAAA,CAAUC,CAAV,CAAhD,EAA+DA,CAAA,EAA/D,CACE,GAAI3F,CAAA4F,WAAJ,CACE,IADgB,IACPxK,EAAI,CADG,CACA4B,EAAIgD,CAAA4F,WAAAvK,OAApB,CAAyCD,CAAzC,CAA6C4B,CAA7C,CAAgD5B,CAAA,EAAhD,CACMzB,CAAA,CAAaqG,CAAA4F,WAAA,CAAaxK,CAAb,CAAb,CAAJ,EACEQ,CAAA,CAA4CoE,CAAA4F,WAAA,CAAaxK,CAAb,CAA5C,CAL0B,CAYpC,CAAAmK,SAAA,CAA8C/H,QAAA2H,KAA9C,CAA6D,CAC3DK,UAAW,CAAA,CADgD,CAA7D,CAMA,CAAC,QAAQ,EAAG,CACV,GAA4B,SAA5B,GAAIhI,QAAAnB,WAAJ,CAEE,IADA,IAAM0B;AAAUP,QAAArC,iBAAA,CA1pBEjB,kBA0pBF,CAAhB,CACSkB,EAAI,CADb,CACgB4B,EAAIe,CAAA1C,OAApB,CAAoCD,CAApC,CAAwC4B,CAAxC,CAA2C5B,CAAA,EAA3C,CACEQ,CAAA,CAAkBmC,CAAA,CAAQ3C,CAAR,CAAlB,CAJM,CAAZ,EAtBF,KA+BO,CAGLmL,IAASA,EAATA,QAAkB,EAAG,CACnBC,CAAA,CAAWA,CAAX,EAAuB,IAAI3N,CAC3B2N,EAAAlD,EAAA,EAFmB,CAArBiD,CAFIC,CAOwB,WAA5B,GAAIhJ,QAAAnB,WAAJ,EAC2B,aAD3B,GACGmB,QAAAnB,WADH,EAC6CoK,CAAAC,MAAAD,YAD7C,CAEEF,CAAA,EAFF,CAIE/I,QAAAxB,iBAAA,CAA0B,kBAA1B,CAA8CuK,CAA9C,CAZG,CAoBPlJ,CAAA,CAAU,QAAQ,CAACsJ,CAAD,CAAS,CACzB,IAAMC,EAAmCpJ,QAAAqJ,YAAA,CAAqB,aAArB,CACzCD,EAAAE,gBAAA,CAAoB,mBAApB,CAAyC,CAAA,CAAzC,CAA+C,CAAA,CAA/C,CAAqDH,CAArD,CACAnJ,SAAAyH,cAAA,CAAuB2B,CAAvB,CAHyB,CAA3B,CAOAjO,EAAAwD,UAAA,CAAkBA,CAClBxD,EAAA0E,UAAA,CAAkBA,CAhsBH,CAAhB,CAAD,CAksBGqJ,MAAAK,YAlsBH,CAksByBL,MAAAK,YAlsBzB,EAksB+C,EAlsB/C","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n  const flags = {\n    bust: false,\n    log: false\n  };\n\n  /**\n    Support `currentScript` on all browsers as `document._currentScript.`\n    NOTE: We cannot polyfill `document.currentScript` because it's not possible\n    both to override and maintain the ability to capture the native value.\n    Therefore we choose to expose `_currentScript` both when native imports\n    and the polyfill are in use.\n  */\n  let currentScript = null;\n  Object.defineProperty(document, '_currentScript', {\n    get: function() {\n      return currentScript || document.currentScript ||\n        // NOTE: only works when called in synchronously executing code.\n        // readyState should check if `loading` but IE10 is\n        // interactive when scripts run so we cheat.\n        (document.readyState !== 'complete' ?\n          document.scripts[document.scripts.length - 1] : null);\n    },\n    configurable: true\n  });\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = (new URL(urlPath, linkUrl)).href;\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return new URL(text, linkUrl).href;\n      }\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      if (flags.bust) {\n        url += '?' + Math.random();\n      }\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const resource = (request.response || request.responseText);\n          callback(!Xhr._ok(request), resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    },\n\n    _ok: function(request) {\n      return (request.status >= 200 && request.status < 300) ||\n        (request.status === 304) ||\n        (request.status === 0);\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    addNodes(nodes) {\n      // number of transactions to complete\n      this.inflight += nodes.length;\n      // commence transactions\n      for (let i = 0, l = nodes.length, n;\n        (i < l) && (n = nodes[i]); i++) {\n        this.require(n);\n      }\n      // anything to do?\n      this.checkDone();\n    }\n\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    require(elt) {\n      const url = elt.src || elt.href;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    fetch(url, elt) {\n      flags.log && console.log('fetch', url, elt);\n      if (!url) {\n        setTimeout(() => this.receive(url, elt, true, {\n          error: 'href must be specified'\n        }), 0);\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        setTimeout(() => this.receive(url, elt, false, body), 0);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {Object=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n  const importsSelectors = [\n    IMPORT_SELECTOR,\n    'link[rel=stylesheet]:not([type])',\n    'style:not([type])',\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(',');\n\n  const pendingImportsSelectors = `${IMPORT_SELECTOR} style:not([type]),\n    ${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type]),\n    ${IMPORT_SELECTOR} script[src]:not([type]),\n    ${IMPORT_SELECTOR} script[src][type=\"application/javascript\"],\n    ${IMPORT_SELECTOR} script[src][type=\"text/javascript\"]`;\n\n  // importer\n  // highlander object to manage loading of imports\n  // for any document, importer:\n  // - loads any linked import documents (with deduping)\n  // - whenever an import is loaded, prompts the parser to try to parse\n  // - observes imported documents for new elements (these are handled via the\n  // dynamic importer)\n  class Importer {\n    constructor() {\n      this.documents = {};\n      this._loaded = this._loaded.bind(this);\n      this._loadedAll = this._loadedAll.bind(this);\n      this._importLoader = new Loader(this._loaded, this._loadedAll);\n    }\n\n    bootDocument(doc) {\n      this._loadSubtree(doc);\n    }\n\n    loadNode(node) {\n      this._importLoader.addNode(node);\n    }\n\n    // load all loadable elements within the parent element\n    _loadSubtree(parent) {\n      const nodes = parent.querySelectorAll(IMPORT_SELECTOR);\n      // add these nodes to loader's queue\n      this._importLoader.addNodes(nodes);\n    }\n\n    _loaded(url, elt, resource, err, redirectedUrl) {\n      flags.log && console.log('loaded', url, elt);\n      // store generic resource\n      // TODO(sorvell): fails for nodes inside <template>.content\n      // see https://code.google.com/p/chromium/issues/detail?id=249381.\n      elt.__resource = resource;\n      elt.__error = err;\n      if (isImportLink(elt)) {\n        let doc = this.documents[url];\n        // if we've never seen a document at this url\n        if (doc === undefined) {\n          // generate an HTMLDocument from data\n          doc = err ? null : makeDocument(resource, redirectedUrl || url);\n          if (doc) {\n            doc.__importLink = elt;\n            // note, we cannot use MO to detect parsed nodes because\n            // SD polyfill does not report these as mutations.\n            this._loadSubtree(doc);\n          }\n          // cache document\n          this.documents[url] = doc;\n        }\n        // don't store import record until we're actually loaded\n        // store document resource\n        elt.__doc = doc;\n      }\n    }\n\n    _loadedAll() {\n      this._flatten(document);\n      //TODO bring it into this class?\n      runScripts();\n      this._fireEvents();\n      this._observe(document.head);\n    }\n\n    _flatten(element) {\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import.__firstImport) {\n          n.import.__firstImport = n;\n          this._flatten(n.import);\n          n.appendChild(n.import);\n          if (document.contains(n.parentNode)) {\n            // TODO(sorvell): need to coordinate with observer in document.head.\n            //this.observe(n.import);\n          }\n        }\n      }\n    }\n\n    _fireEvents() {\n      // Wait for pending resources to finish loading, then fire load/error.\n      const pending = document.querySelectorAll(pendingImportsSelectors);\n      Promise.all(Array.from(pending).map(whenElementLoaded)).then(() => {\n        const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n          (document.querySelectorAll(IMPORT_SELECTOR));\n        // Inverse order to have events firing bottom-up.\n        for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n          // Don't fire twice same event.\n          if (!n.__loaded) {\n            const eventType = n.import ? 'load' : 'error';\n            flags.log && console.warn('fire', eventType, n.href);\n            n.__loaded = true;\n            n.dispatchEvent(new CustomEvent(eventType));\n          }\n        }\n      });\n    }\n\n    _observe(element) {\n      if (element.__importObserver) {\n        return;\n      }\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\n      element.__importObserver.observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        if (m.addedNodes) {\n          for (let i = 0, l = m.addedNodes.length; i < l; i++) {\n            if (isImportLink(m.addedNodes[i])) {\n              this.loadNode(m.addedNodes[i]);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /********************* vulcanize style inline processing  *********************/\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\n\n  function fixUrlAttributes(element, base) {\n    attrs.forEach((a) => {\n      const at = element.attributes[a];\n      const v = at && at.value;\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n        at.value = (a === 'style') ?\n          Path.resolveUrlsInCssText(v, base) :\n          Path.replaceAttrUrl(v, base);\n      }\n    });\n  }\n\n  function fixUrlsInTemplate(template, base) {\n    const content = template.content;\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else {\n        fixUrlAttributes(n, base);\n      }\n    }\n    fixUrlsInTemplates(content, base);\n  }\n\n  function fixUrlsInTemplates(element, base) {\n    const t$ = element.querySelectorAll('template');\n    for (let i = 0; i < t$.length; i++) {\n      fixUrlsInTemplate(t$[i], base);\n    }\n  }\n\n  function fixUrls(element, base) {\n    const n$ = element.querySelectorAll(importsSelectors);\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.href) {\n        n.href = new URL(n.getAttribute('href'), base);\n      }\n      if (n.src) {\n        n.src = new URL(n.getAttribute('src'), base);\n      }\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      }\n    }\n    fixUrlsInTemplates(element, base);\n  }\n\n  function markScripts(element, url) {\n    const s$ = element.querySelectorAll('script');\n    for (let i = 0, l = s$.length, o; i < l && (o = s$[i]); i++) {\n      if (o.textContent) {\n        o.textContent = o.textContent + `\\n//# sourceURL=${url}`;\n      }\n      if (o.src) {\n        o.setAttribute('src', Path.replaceAttrUrl(o.getAttribute('src'), url));\n      }\n    }\n  }\n\n  /**\n   * Replaces all the imported scripts with a clone in order to execute them.\n   * Updates the `currentScript`.\n   */\n  function runScripts() {\n    const s$ = document.querySelectorAll('import-content script');\n    for (let i = 0, l = s$.length, o; i < l && (o = s$[i]); i++) {\n      currentScript = document.createElement('script');\n      currentScript.textContent = o.textContent;\n      if (o.src) {\n        currentScript.setAttribute('src', o.getAttribute('src'));\n      }\n      o.parentNode.replaceChild(currentScript, o);\n    }\n    currentScript = null;\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the elemnt accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    return new Promise(resolve => {\n      if (isElementLoaded(element)) {\n        resolve(element);\n      } else {\n        //TODO(valdrin) should it update currentScript if it is a <script> ?\n        //TODO(valdrin) should check if isIE and it is a loaded style.\n        element.addEventListener('load', () => {\n          element.__loaded = true;\n          element.__errored = false;\n          resolve(element);\n        });\n        element.addEventListener('error', () => {\n          element.__loaded = true;\n          element.__errored = true;\n          resolve(element);\n        });\n      }\n    });\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    if (!element.__loaded) {\n      if (useNative && isImportLink(element) && element.import &&\n        element.import.readyState !== 'loading') {\n        flags.log && console.log('delayed flagging of import loaded..');\n        element.__loaded = true;\n      } else if (isIE && element.localName === 'style') {\n        // NOTE: IE does not fire \"load\" event for styles that have already\n        // loaded. This is in violation of the spec, so we try our hardest to\n        // work around it.\n        let fakeLoad = false;\n        // If there's not @import in the textContent, assume it has loaded\n        if (element.textContent.indexOf('@import') == -1) {\n          fakeLoad = true;\n          // if we have a sheet, we have been parsed\n        } else if (element.sheet) {\n          fakeLoad = true;\n          const csr = element.sheet.cssRules;\n          // search the rules for @import's\n          for (let i = 0, l = csr ? csr.length : 0; i < l && fakeLoad; i++) {\n            if (csr[i].type === CSSRule.IMPORT_RULE) {\n              // if every @import has resolved, fake the load\n              fakeLoad = Boolean(csr[i].styleSheet);\n            }\n          }\n        }\n        if (fakeLoad) {\n          flags.log && console.log('delayed flagging of style w/ imports loaded..');\n          element.__loaded = true;\n        }\n      }\n    }\n    return element.__loaded;\n  }\n\n  function fixDomModules(element, url) {\n    const s$ = element.querySelectorAll('dom-module');\n    for (let i = 0; i < s$.length; i++) {\n      const o = s$[i];\n      const assetpath = o.getAttribute('assetpath') || '';\n      o.setAttribute('assetpath', Path.replaceAttrUrl(assetpath, url));\n    }\n  }\n\n  function makeDocument(resource, url) {\n    // TODO(valdrin): better to use a disconnected document here so that\n    // elements don't upgrade until inserted into main document,\n    // however, this is blocked on https://bugs.webkit.org/show_bug.cgi?id=165617\n    // let doc = document.implementation.createHTMLDocument();\n    const content = document.createElement('import-content');\n    content.setAttribute('import-href', url);\n    content.style.display = 'none';\n    content.innerHTML = resource;\n    markScripts(content, url);\n    // TODO(sorvell): this is specific to users (Polymer) of the dom-module element.\n    fixDomModules(content, url);\n    fixUrls(content, url);\n    return content;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n\n  const isIE = /Trident/.test(navigator.userAgent);\n  const requiredReadyState = isIE ? 'complete' : 'interactive';\n  const READY_EVENT = 'readystatechange';\n\n  // call a callback when all HTMLImports in the document at call time\n  // (or at least document ready) have loaded.\n  // 1. ensure the document is in a ready state (has dom), then\n  // 2. watch for loading of imports and call callback when done\n  function whenReady(callback, doc) {\n    doc = doc || document;\n    // if document is loading, wait and try again\n    whenDocumentReady(function() {\n      watchImportsLoad(callback, doc);\n    }, doc);\n  }\n\n  function isDocumentReady(doc) {\n    return (doc.readyState === 'complete' ||\n      doc.readyState === requiredReadyState);\n  }\n\n  // call <callback> when we ensure the document is in a ready state\n  function whenDocumentReady(callback, doc) {\n    if (!isDocumentReady(doc)) {\n      const checkReady = function() {\n        if (doc.readyState === 'complete' ||\n          doc.readyState === requiredReadyState) {\n          doc.removeEventListener(READY_EVENT, checkReady);\n          whenDocumentReady(callback, doc);\n        }\n      };\n      doc.addEventListener(READY_EVENT, checkReady);\n    } else if (callback) {\n      callback();\n    }\n  }\n\n  function markTargetLoaded(event) {\n    event.target.__loaded = true;\n  }\n\n  // call <callback> when we ensure all imports have loaded\n  function watchImportsLoad(callback, doc) {\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\n    // only non-nested imports\n    imports = Array.prototype.slice.call(imports).filter(function(n) {\n      return !MATCHES.call(n, 'import-content ' + IMPORT_SELECTOR);\n    });\n    Promise.all(imports.map(whenElementLoaded)).then(() => {\n      const newImports = [];\n      const errorImports = [];\n      imports.forEach((imp) => {\n        (imp.__errored ? errorImports : newImports).push(imp);\n      });\n      callback( /** @type {!HTMLImportInfo} */ ({\n        allImports: imports,\n        loadedImports: newImports,\n        errorImports: errorImports\n      }));\n    });\n  }\n\n  // make `whenReady` work with native HTMLImports\n  if (useNative) {\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    function handleMutations(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        if (m.addedNodes) {\n          for (let i = 0, l = m.addedNodes.length; i < l; i++) {\n            if (isImportLink(m.addedNodes[i])) {\n              whenElementLoaded( /** @type {!Element} */ (m.addedNodes[i]));\n            }\n          }\n        }\n      }\n    }\n\n    new MutationObserver(handleMutations).observe(document.head, {\n      childList: true\n    });\n\n    // make sure to catch any imports that are in the process of loading\n    // when this script is run.\n    (function() {\n      if (document.readyState === 'loading') {\n        const imports = document.querySelectorAll(IMPORT_SELECTOR);\n        for (let i = 0, l = imports.length; i < l; i++) {\n          whenElementLoaded(imports[i]);\n        }\n      }\n    })();\n\n  } else {\n    let importer;\n\n    function bootstrap() {\n      importer = importer || new Importer();\n      importer.bootDocument(document);\n    }\n\n    if (document.readyState === 'complete' ||\n      (document.readyState === 'interactive' && !window.attachEvent)) {\n      bootstrap();\n    } else {\n      document.addEventListener('DOMContentLoaded', bootstrap);\n    }\n  }\n\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\n  // have loaded. This event is required to simulate the script blocking\n  // behavior of native imports. A main document script that needs to be sure\n  // imports have loaded should wait for this event.\n  whenReady(function(detail) {\n    const evt = /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\n    evt.initCustomEvent('HTMLImportsLoaded', true, true, detail);\n    document.dispatchEvent(evt);\n  });\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}