{"version":3,"sources":["src/html-imports.js"],"names":["scope","constructor","Importer","doc","documents","_loader","Loader","_onLoaded","bind","_onLoadedAll","_loadSubtree","observe","MutationObserver","_onMutation","head","childList","onLoad","onComplete","cache","onload","oncomplete","inflight","pending","isImportLink","node","nodeType","Node","ELEMENT_NODE","MATCHES","call","IMPORT_SELECTOR","fixUrlAttributes","element","base","attrs","forEach","a","at","attributes","v","value","search","Path","resolveUrlsInCssText","replaceAttrUrl","fixUrlsInTemplates","t$","querySelectorAll","i","length","content","template","n$","n","localName","resolveUrlsInStyle","runScripts","s$","document","promise","Promise","resolve","l","o","then","c","createElement","textContent","src","setAttribute","getAttribute","whenLoadedPromise","whenElementLoaded","currentScript","parentNode","replaceChild","script","waitForStyles","pendingStyles","stylesInImportsSelector","promises","push","all","isIE","isEdge","stylesSelector","removeChild","appendChild","fireEvents","__loaded","eventType","import","flags","log","console","warn","href","dispatchEvent","CustomEvent","bubbles","cancelable","detail","undefined","__loadPromise","isElementLoaded","__errored","addEventListener","isLoaded","useNative","readyState","indexOf","sheet","csr","cssRules","type","CSSRule","IMPORT_RULE","styleSheet","whenReady","callback","whenDocumentReady","watchImportsLoad","importInfo","requiredReadyState","READY_EVENT","checkReady","removeEventListener","imports","Array","prototype","slice","filter","imp","map","newImports","errorImports","allImports","loadedImports","bust","Object","defineProperty","get","scripts","configurable","baseURI","querySelector","window","location","ABS_URL_TEST","CSS_URL_REGEXP","CSS_IMPORT_REGEXP","style","linkUrl","cssText","r","replaceUrls","text","regexp","replace","m","pre","url","post","urlPath","URL","test","Xhr","async","load","request","XMLHttpRequest","Math","random","open","redirectedUrl","locationHeader","getResponseHeader","substr","origin","e","error","message","_ok","response","responseText","send","status","addNodes","nodes","require","checkDone","addNode","elt","dedupe","fetch","tail","match","pieces","split","body","header","atob","decodeURIComponent","receive","resource","err","$p","p","display","innerHTML","scriptsSelector","scriptType","assetpath","_flatten","__firstImport","mutations","j","addedNodes","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","navigator","userAgent","handleMutations","bootstrap","attachEvent","HTMLImports"],"mappings":"A;;;;;;;;;aASC,SAAQ,CAACA,CAAD,CAAQ,CA+QbC,QADIC,EACO,CAACC,CAAD,CAAM,CACf,IAAAC,EAAA,CAAiB,EACjB,KAAAC,EAAA,CAAe,IAAIC,CAAJ,CACb,IAAAC,EAAAC,KAAA,CAAoB,IAApB,CADa,CACc,IAAAC,EAAAD,KAAA,CAAuB,IAAvB,CADd,CAGf,KAAAE,EAAA,CAAkBP,CAAlB,CAEAQ,EAAA,IAAIC,gBAAJ,CAAqB,IAAAC,EAAAL,KAAA,CAAsB,IAAtB,CAArB,CAAAG,SAAA,CAA0DR,CAAAW,KAA1D,CAAoE,CAClEC,UAAW,CAAA,CADuD,CAApE,CAPe,CAhJjBd,QADIK,EACO,CAACU,CAAD,CAASC,CAAT,CAAqB,CAC9B,IAAAC,EAAA,CAAa,EACb,KAAAC,EAAA,CAAcH,CACd,KAAAI,EAAA,CAAkBH,CAClB,KAAAI,EAAA,CAAgB,CAChB,KAAAC,EAAA,CAAe,EALe,CAuPlCC,QAASA,EAAY,CAACC,CAAD,CAAO,CAC1B,MAAOA,EAAAC,SAAP,GAAyBC,IAAAC,aAAzB,EAA8CC,CAAAC,KAAA,CAAaL,CAAb,CApXxBM,kBAoXwB,CADpB,CAO5BC,QAASA,EAAgB,CAACC,CAAD,CAAUC,CAAV,CAAgB,CACvCC,CAAAC,QAAA,CAAc,QAAA,CAACC,CAAD,CAAO,CACnB,IAAMC,EAAKL,CAAAM,WAAA,CAAmBF,CAAnB,CAAX,CACMG,EAAIF,CAAJE,EAAUF,CAAAG,MACZD,EAAJ,EAAkC,CAAlC,CAAUA,CAAAE,OAAA,CAAS,WAAT,CAAV,GACEJ,CAAAG,MADF,CACoB,OAAP,GAACJ,CAAD,CACTM,CAAAC,EAAA,CAA0BJ,CAA1B,CAA6BN,CAA7B,CADS,CAETS,CAAAE,EAAA,CAAoBL,CAApB,CAAuBN,CAAvB,CAHJ,CAHmB,CAArB,CADuC,CA6BzCY,QAASA,EAAkB,CAACb,CAAD,CAAUC,CAAV,CAAgB,CACnCa,CAAAA,CAAKd,CAAAe,iBAAA,CAAyB,UAAzB,CACX;IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,CAAAG,OAApB,CAA+BD,CAAA,EAA/B,CAAoC,CACTf,IAAAA,EAAAA,CAAAA,CAnBrBiB,EAmBcJ,CAAAK,CAAGH,CAAHG,CAnBJD,QAChB,IAAKA,CAAL,CAAA,CAIA,IADA,IAAME,EAAKF,CAAAH,iBAAA,CAAyB,oDAAzB,CAAX,CACSC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBI,CAAAH,OAApB,CAA+BD,CAAA,EAA/B,CAAoC,CAClC,IAAMK,EAAID,CAAA,CAAGJ,CAAH,CACS,QAAnB,EAAIK,CAAAC,UAAJ,CACEZ,CAAAa,EAAA,CAAwBF,CAAxB,CAA2BpB,CAA3B,CADF,CAGEF,CAAA,CAAiBsB,CAAjB,CAAoBpB,CAApB,CALgC,CAQpCY,CAAA,CAAmBK,CAAnB,CAA4BjB,CAA5B,CAZA,CAiBoC,CAFK,CAoD3CuB,QAASA,EAAU,EAAG,CAGpB,IAFA,IAAMC,EAAKC,QAAAX,iBAAA,CAA0B,4BAA1B,CAAX,CACIY,EAAUC,OAAAC,QAAA,EADd,CAEA,EAAA,EAFA,CAESb,EAAI,CAFb,CAEgBc,EAAIL,CAAAR,OAApB,CAAkCD,CAAlC,CAAsCc,CAAtC,GAA4CC,CAAAA,EAA5C,CAAgDN,CAAA,CAAGT,CAAH,CAAhD,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAwDA,CAAA,EAAxD,CACEW,CAAA,CAAUA,CAAAK,KAAA,CAAa,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,SAAA,EAAM,CAC3B,IAAMC,EAAIP,QAAAQ,cAAA,CAAuB,QAAvB,CACVD,EAAAE,YAAA,CAAgBJ,CAAAA,EAAAI,YACZJ,EAAAA,EAAAK,IAAJ,EACEH,CAAAI,aAAA,CAAe,KAAf;AAAsBN,CAAAA,EAAAO,aAAA,CAAe,KAAf,CAAtB,CAGF,KAAMC,EAAoBC,CAAA,CAAkBP,CAAlB,CAE1BQ,EAAA,CAAgBR,CAChBF,EAAAA,EAAAW,WAAAC,aAAA,CAA0BV,CAA1B,CAA6BF,CAAAA,EAA7B,CAEA,OAAOQ,EAAAP,KAAA,CAAuB,QAAA,CAACY,CAAD,CAAY,CACpCA,CAAJ,GAAeH,CAAf,GACEA,CADF,CACkB,IADlB,CAGA,OAAOG,EAJiC,CAAnC,CAZoB,CAAN,CAAA,CAAA,CAAA,CAAb,CAoBZ,OAAOjB,EAAAK,KAAA,CAAa,QAAA,EAAM,CACxB,MAAOP,EADiB,CAAnB,CAxBa,CA6BtBoB,QAASA,EAAa,EAAG,CAGvB,IAFA,IAAMC,EAAgBpB,QAAAX,iBAAA,CApPtBgC,4FAoPsB,CAAtB,CACMC,EAAW,EADjB,CAEShC,EAAI,CAAb,CAAgBA,CAAhB,CAAoB8B,CAAA7B,OAApB,CAA0CD,CAAA,EAA1C,CACEgC,CAAAC,KAAA,CAAcT,CAAA,CAAkBM,CAAA,CAAc9B,CAAd,CAAlB,CAAd,CAEF,OAAOY,QAAAsB,IAAA,CAAYF,CAAZ,CAAAhB,KAAA,CAA2B,QAAA,EAAM,CAEtC,IAAKmB,CAAL,EAAaC,CAAb,GAAwBN,CAAA7B,OAAxB,CAEE,IADA,IAAMG,EAAKM,QAAA5C,KAAAiC,iBAAA,CAjQfsC,0DAiQe,CAAX;AACSrC,EAAI,CADb,CACgBc,EAAIV,CAAAH,OADpB,CAC+BI,CAA/B,CAAkCL,CAAlC,CAAsCc,CAAtC,GAA4CT,CAA5C,CAAgDD,CAAA,CAAGJ,CAAH,CAAhD,EAAwDA,CAAA,EAAxD,CACEK,CAAAqB,WAAAY,YAAA,CAAyBjC,CAAzB,CACA,CAAAK,QAAA5C,KAAAyE,YAAA,CAA0BlC,CAA1B,CAGJ,OAAOyB,EAT+B,CAAjC,CANgB,CAmBzBU,QAASA,EAAU,EAAG,CAIpB,IAHA,IAAMpC,EACHM,QAAAX,iBAAA,CA7fmBjB,kBA6fnB,CADH,CAGSkB,EAAII,CAAAH,OAAJD,CAAgB,CAHzB,CAG4BK,CAA5B,CAAoC,CAApC,EAA+BL,CAA/B,GAA0CK,CAA1C,CAA8CD,CAAA,CAAGJ,CAAH,CAA9C,EAAsDA,CAAA,EAAtD,CAEE,GAAKyC,CAAApC,CAAAoC,EAAL,CAAiB,CACf,IAAMC,EAAYrC,CAAAsC,OAAA,CAAW,MAAX,CAAoB,OACtCC,EAAAC,IAAA,EAAaC,OAAAC,KAAA,CAAa,MAAb,CAAqBL,CAArB,CAAgCrC,CAAA2C,KAAhC,CAEbxB,EAAA,CAAkBnB,CAAlB,CACAA,EAAA4C,cAAA,CAAgB,IAAIC,WAAJ,CAAgBR,CAAhB,CAA2B,CACzCS,QAAS,CAAA,CADgC,CAEzCC,WAAY,CAAA,CAF6B,CAGzCC,OAAQC,IAAAA,EAHiC,CAA3B,CAAhB,CALe,CANC,CA0BtB9B,QAASA,EAAiB,CAACxC,CAAD,CAAU,CAC7BA,CAAAuE,EAAL,GACMC,CAAA,CAAgBxE,CAAhB,CAAJ,EACEA,CAAAyD,EAEA,CAFmB,CAAA,CAEnB,CADAzD,CAAAyE,EACA,CADoB,CAAA,CACpB,CAAAzE,CAAAuE,EAAA,CAAwB3C,OAAAC,QAAA,CAAgB7B,CAAhB,CAH1B,EAKEA,CAAAuE,EALF,CAK0B,IAAI3C,OAAJ,CAAY,QAAA,CAAAC,CAAA,CAAW,CAC7C7B,CAAA0E,iBAAA,CAAyB,MAAzB,CAAiC,QAAA,EAAM,CACrC1E,CAAAyD,EAAA,CAAmB,CAAA,CACnBzD;CAAAyE,EAAA,CAAoB,CAAA,CACpB5C,EAAA,CAAQ7B,CAAR,CAHqC,CAAvC,CAKAA,EAAA0E,iBAAA,CAAyB,OAAzB,CAAkC,QAAA,EAAM,CACtC1E,CAAAyD,EAAA,CAAmB,CAAA,CACnBzD,EAAAyE,EAAA,CAAoB,CAAA,CACpB5C,EAAA,CAAQ7B,CAAR,CAHsC,CAAxC,CAN6C,CAAvB,CAN5B,CAoBA,OAAOA,EAAAuE,EArB2B,CA4BpCC,QAASA,EAAe,CAACxE,CAAD,CAAU,CAChC,IAAI2E,EAAW,CAAA,CACf,IAAIC,CAAJ,EAAiBrF,CAAA,CAAaS,CAAb,CAAjB,EAA0CA,CAAA2D,OAA1C,EACgC,SADhC,GACE3D,CAAA2D,OAAAkB,WADF,CAEEF,CAAA,CAAW,CAAA,CAFb,KAGO,IAAIxB,CAAJ,EAAkC,OAAlC,GAAYnD,CAAAsB,UAAZ,CAKL,GAA+C,EAA/C,EAAItB,CAAAmC,YAAA2C,QAAA,CAA4B,SAA5B,CAAJ,CACEH,CAAA,CAAW,CAAA,CADb,KAGO,IAAI3E,CAAA+E,MAAJ,CAAmB,CACxBJ,CAAA,CAAW,CAAA,CACLK,EAAAA,CAAMhF,CAAA+E,MAAAE,SAEZ,KAJwB,IAIfjE,EAAI,CAJW,CAIRc,EAAIkD,CAAA,CAAMA,CAAA/D,OAAN,CAAmB,CAAvC,CAA0CD,CAA1C,CAA8Cc,CAA9C,EAAmD6C,CAAnD,CAA6D3D,CAAA,EAA7D,CACMgE,CAAA,CAAIhE,CAAJ,CAAAkE,KAAJ,GAAoBC,OAAAC,YAApB,GAEET,CAFF,CAEa,CAAQU,CAAAL,CAAA,CAAIhE,CAAJ,CAAAqE,WAFrB,CALsB,CAAnB,CARF,IAmB0B,QAA1B,GAAIrF,CAAAsB,UAAJ,EAAuCtB,CAAAoC,IAAvC,GACLuC,CADK,CACM,CAAA,CADN,CAGP,OAAOA,EA3ByB,CAgFlCW,QAASA,EAAS,CAACC,CAAD,CAAWpH,CAAX,CAAgB,CAChCA,CAAA,CAAMA,CAAN,EAAauD,QAEb,OAAO8D,EAAA,CAAkBrH,CAAlB,CAAA6D,KAAA,CAA4ByD,CAA5B,CAAAzD,KAAA,CAAmD,QAAA,CAAC0D,CAAD,CAAgB,CACxEH,CAAA;AAAYA,CAAA,CAASG,CAAT,CACZ,OAAOA,EAFiE,CAAnE,CAHyB,CAelCF,QAASA,EAAiB,CAACrH,CAAD,CAAM,CAC9B,MAN2B,UAM3B,GAAoBA,CANZ0G,WAMR,EAAoB1G,CALlB0G,WAKF,GALqBc,CAKrB,CACS/D,OAAAC,QAAA,CAAgB1D,CAAhB,CADT,CAGO,IAAIyD,OAAJ,CAAY,QAAA,CAACC,CAAD,CAAa,CAC9B1D,CAAAuG,iBAAA,CA1BgBkB,kBA0BhB,CAAkCC,QAASA,EAAU,EAAG,CACtD,GAXuB,UAWvB,GAAoB1H,CAXhB0G,WAWJ,EAAoB1G,CAVtB0G,WAUE,GAViBc,CAUjB,CACExH,CAAA2H,oBAAA,CA5BYF,kBA4BZ,CAAqCC,CAArC,CACA,CAAAhE,CAAA,CAAQ1D,CAAR,CAHoD,CAAxD,CAD8B,CAAzB,CAJuB,CAehCsH,QAASA,EAAgB,CAACtH,CAAD,CAAM,CAC7B,IAAI4H,EAAU5H,CAAA4C,iBAAA,CAhqBQjB,kBAgqBR,CAAd,CAEAiG,EAAUC,KAAAC,UAAAC,MAAArG,KAAA,CAA2BkG,CAA3B,CAAAI,OAAA,CAA2C,QAAA,CAACC,CAAD,CAAS,CAC5D,MAAO,CAACxG,CAAAC,KAAA,CAAauG,CAAb,CAAkB,mCAAlB,CADoD,CAApD,CAGV,OAAOxE,QAAAsB,IAAA,CAAY6C,CAAAM,IAAA,CAAY7D,CAAZ,CAAZ,CAAAR,KAAA,CAAiD,QAAA,EAAM,CAC5D,IAAMsE,EAAa,EAAnB,CACMC,EAAe,EACrBR,EAAA5F,QAAA,CAAgB,QAAA,CAACiG,CAAD,CAAS,CACvBnD,CAACmD,CAAA3B,EAAA;AAAgB8B,CAAhB,CAA+BD,CAAhCrD,MAAA,CAAiDmD,CAAjD,CADuB,CAAzB,CAGA,OAAuC,CACrCI,WAAYT,CADyB,CAErCU,cAAeH,CAFsB,CAGrCC,aAAcA,CAHuB,CANqB,CAAvD,CANsB,CA9pB/B,IAAM3B,EAAoB,QAApBA,EAAgClD,SAAAQ,cAAA,CAAuB,MAAvB,CAAtC,CACM0B,EAAQ,CACZ8C,EAAM,CAAA,CADM,CAEZ7C,IAAK,CAAA,CAFO,CADd,CAOIpB,EAAgB,IACgB,EAAA,CAApC,GAAI,eAAJ,EAAuBf,SAAvB,EACEiF,MAAAC,eAAA,CAAsBlF,QAAtB,CAAgC,eAAhC,CAAiD,CAC/CmF,IAAKA,QAAQ,EAAG,CACd,MAAOpE,EAAP,GAI2B,UAAxB,GAAAf,QAAAmD,WAAA,CACCnD,QAAAoF,QAAA,CAAiBpF,QAAAoF,QAAA7F,OAAjB,CAA2C,CAA3C,CADD,CACiD,IALpD,CADc,CAD+B,CAS/C8F,aAAc,CAAA,CATiC,CAAjD,CAcGrF,SAAAsF,QAAL,EACEL,MAAAC,eAAA,CAAsBlF,QAAtB,CAAgC,SAAhC,CAA2C,CACzCmF,IAAKA,QAAQ,EAAG,CACd,IAAM5G,EAAuCyB,QAAAuF,cAAA,CAAuB,MAAvB,CAC7C,OAAOhH,EAAA,CAAOA,CAAA+D,KAAP,CAAmBkD,MAAAC,SAAAnD,KAFZ,CADyB,CAKzC+C,aAAc,CAAA,CAL2B,CAA3C,CAUF;IAAMK,EAAe,yBAArB,CACMC,EAAiB,qBADvB,CAEMC,EAAoB,oCAF1B,CAMM5G,EAAO,CACXa,EAAoBA,QAAQ,CAACgG,CAAD,CAAQC,CAAR,CAAiB,CAC3CD,CAAApF,YAAA,CAAoBzB,CAAAC,EAAA,CAA0B4G,CAAApF,YAA1B,CAA6CqF,CAA7C,CADuB,CADlC,CAKX7G,EAAsBA,QAAQ,CAAC8G,CAAD,CAAUD,CAAV,CAAmB,CAC3CE,CAAAA,CAAIhH,CAAAiH,EAAA,CAAiBF,CAAjB,CAA0BD,CAA1B,CAAmCH,CAAnC,CAER,OADAK,EACA,CADIhH,CAAAiH,EAAA,CAAiBD,CAAjB,CAAoBF,CAApB,CAA6BF,CAA7B,CAF2C,CALtC,CAWXK,EAAaA,QAAQ,CAACC,CAAD,CAAOJ,CAAP,CAAgBK,CAAhB,CAAwB,CAC3C,MAAOD,EAAAE,QAAA,CAAaD,CAAb,CAAqB,QAAQ,CAACE,CAAD,CAAIC,CAAJ,CAASC,CAAT,CAAcC,CAAd,CAAoB,CAClDC,CAAAA,CAAUF,CAAAH,QAAA,CAAY,OAAZ,CAAqB,EAArB,CACVN,EAAJ,GACEW,CADF,CACYnE,CAAC,IAAIoE,GAAJ,CAAQD,CAAR,CAAiBX,CAAjB,CAADxD,MADZ,CAGA,OAAOgE,EAAP,CAAa,GAAb,CAAoBG,CAApB,CAA8B,GAA9B,CAAqCD,CALiB,CAAjD,CADoC,CAXlC,CAqBXtH,EAAgBA,QAAQ,CAACgH,CAAD,CAAOJ,CAAP,CAAgB,CACtC,MAAII,EAAJ,EAAYR,CAAAiB,KAAA,CAAkBT,CAAlB,CAAZ,CACSA,CADT,CAGS5D,CAAA,IAAIoE,GAAJ,CAAQR,CAAR,CAAcJ,CAAd,CAAAxD,MAJ6B,CArB7B,CANb,CAqCMsE,EAAM,CAEVC,MAAO,CAAA,CAFG,CASVC,KAAMA,QAAQ,CAACP,CAAD,CAAM1C,CAAN,CAAgB,CAC5B,IAAMkD,EAAU,IAAIC,cAChB9E,EAAA8C,EAAJ,GACEuB,CADF,EACS,GADT,CACeU,IAAAC,OAAA,EADf,CAGAH,EAAAI,KAAA,CAAa,KAAb,CAAoBZ,CAApB,CAAyBK,CAAAC,MAAzB,CACAE,EAAA/D,iBAAA,CAAyB,kBAAzB;AAA6C,QAAA,EAAO,CAClD,GAA2B,CAA3B,GAAI+D,CAAA5D,WAAJ,CAA8B,CAG5B,IAAIiE,EAAgBxE,IAAAA,EACpB,IAAI,CACF,IAAMyE,EAAiBN,CAAAO,kBAAA,CAA0B,UAA1B,CACnBD,EAAJ,GAEED,CAFF,CAEmD,GAAjC,GAACC,CAAAE,OAAA,CAAsB,CAAtB,CAAyB,CAAzB,CAAD,CACd9B,QAAA+B,OADc,CACIH,CADJ,CACqBA,CAHvC,CAFE,CAOF,MAAOI,CAAP,CAAU,CACVrF,OAAAsF,MAAA,CAAcD,CAAAE,QAAd,CADU,CAIZ9D,CAAA,CAAS,CAAC+C,CAAAgB,EAAA,CAAQb,CAAR,CAAV,CADkBA,CAAAc,SAClB,EADsCd,CAAAe,aACtC,CAAsCV,CAAtC,CAf4B,CADoB,CAApD,CAmBAL,EAAAgB,KAAA,EACA,OAAOhB,EA1BqB,CATpB,CAsCVa,EAAKA,QAAQ,CAACb,CAAD,CAAU,CACrB,MAA0B,IAA1B,EAAQA,CAAAiB,OAAR,EAAkD,GAAlD,CAAiCjB,CAAAiB,OAAjC,EACsB,GADtB,GACGjB,CAAAiB,OADH,EAEsB,CAFtB,GAEGjB,CAAAiB,OAHkB,CAtCb,CA4DV,EAAA,UAAA,EAAA,CAAAC,QAAQ,CAACC,CAAD,CAAQ,CAEd,IAAAvK,EAAA,EAAiBuK,CAAA3I,OAEjB,KAJc,IAILD,EAAI,CAJC,CAIEc,EAAI8H,CAAA3I,OAJN,CAIoBI,CAAlC,CACGL,CADH,CACOc,CADP,GACcT,CADd,CACkBuI,CAAA,CAAM5I,CAAN,CADlB,EAC6BA,CAAA,EAD7B,CAEE,IAAA6I,EAAA,CAAaxI,CAAb,CAGF,KAAAyI,EAAA,EATc,CAYhB,EAAA,UAAA,EAAA,CAAAC,QAAO,CAACvK,CAAD,CAAO,CAEZ,IAAAH,EAAA,EAEA,KAAAwK,EAAA,CAAarK,CAAb,CAEA,KAAAsK,EAAA,EANY,CASd,EAAA,UAAA,EAAA,CAAAD,QAAO,CAACG,CAAD,CAAM,CACX,IAAM/B;AAAM+B,CAAA5H,IAAN6F,EAAiB+B,CAAAhG,KAElB,KAAAiG,EAAA,CAAYhC,CAAZ,CAAiB+B,CAAjB,CAAL,EAEE,IAAAE,EAAA,CAAWjC,CAAX,CAAgB+B,CAAhB,CALS,CASb,EAAA,UAAA,EAAA,CAAAC,QAAM,CAAChC,CAAD,CAAM+B,CAAN,CAAW,CACf,GAAI,IAAA1K,EAAA,CAAa2I,CAAb,CAAJ,CAIE,MAFA,KAAA3I,EAAA,CAAa2I,CAAb,CAAAhF,KAAA,CAAuB+G,CAAvB,CAEO,CAAA,CAAA,CAGT,IAAI,IAAA9K,EAAA,CAAW+I,CAAX,CAAJ,CAKE,MAJA,KAAA9I,EAAA,CAAY8I,CAAZ,CAAiB+B,CAAjB,CAAsB,IAAA9K,EAAA,CAAW+I,CAAX,CAAtB,CAIO,CAFP,IAAAkC,EAAA,EAEO,CAAA,CAAA,CAGT,KAAA7K,EAAA,CAAa2I,CAAb,CAAA,CAAoB,CAAC+B,CAAD,CAEpB,OAAO,CAAA,CAlBQ,CAqBjB,EAAA,UAAA,EAAA,CAAAE,QAAK,CAACjC,CAAD,CAAM+B,CAAN,CAAW,CAAA,IAAA,EAAA,IACdpG,EAAAC,IAAA,EAAaC,OAAAD,IAAA,CAAY,OAAZ,CAAqBoE,CAArB,CAA0B+B,CAA1B,CACb,IAAK/B,CAAL,CAEO,GAAIA,CAAAmC,MAAA,CAAU,QAAV,CAAJ,CAAyB,CAExBC,CAAAA,CAASpC,CAAAqC,MAAA,CAAU,GAAV,CAEf,KAAIC,EAAOF,CAAA,CAAO,CAAP,CAAX,CAEEE,EAD+B,EAAjC,CAFeF,CAAAG,CAAO,CAAPA,CAEX1F,QAAA,CAAe,SAAf,CAAJ,CACS2F,IAAA,CAAKF,CAAL,CADT,CAGSG,kBAAA,CAAmBH,CAAnB,CAET,KAAAI,EAAA,CAAa1C,CAAb,CAAuB,CAAA,CAAvB,CAA8BsC,CAA9B,CAV8B,CAAzB,IAYLjC,EAAAE,KAAA,CAASP,CAAT,CAAc,QAAA,CAACmB,CAAD,CAAQwB,CAAR,CAAkB9B,CAAlB,CACZ,CAAA,MAAA,EAAA6B,EAAA,CAAa1C,CAAb,CAAuBmB,CAAvB,CAA8BwB,CAA9B,CAAwC9B,CAAxC,CAAA,CADF,CAdF,KACE,KAAA6B,EAAA,CAAa1C,CAAb,CAAuB,CAAA,CAAvB,CAA6B,+BAA7B,CAHY,CA4BhB,EAAA,UAAA,EAAA;AAAA0C,QAAO,CAAC1C,CAAD,CAAW4C,CAAX,CAAgBD,CAAhB,CAA0B9B,CAA1B,CAAyC,CAC9C,IAAA5J,EAAA,CAAW+I,CAAX,CAAA,CAAkB2C,CAElB,KADA,IAAME,EAAK,IAAAxL,EAAA,CAAa2I,CAAb,CAAX,CACSjH,EAAI,CADb,CACgBc,EAAIgJ,CAAA7J,OADpB,CAC+B8J,CAA/B,CACG/J,CADH,CACOc,CADP,GACciJ,CADd,CACkBD,CAAA,CAAG9J,CAAH,CADlB,EAC0BA,CAAA,EAD1B,CAIE,IAAA7B,EAAA,CAAY8I,CAAZ,CAAiB8C,CAAjB,CAAoBH,CAApB,CAA8BC,CAA9B,CAAmC/B,CAAnC,CACA,CAAA,IAAAqB,EAAA,EAEF,KAAA7K,EAAA,CAAa2I,CAAb,CAAA,CAAoB,IAV0B,CAahD,EAAA,UAAA,EAAA,CAAAkC,QAAI,EAAG,CACL,EAAE,IAAA9K,EACF,KAAAyK,EAAA,EAFK,CAKP,EAAA,UAAA,EAAA,CAAAA,QAAS,EAAG,CACL,IAAAzK,EAAL,EACE,IAAAD,EAAA,EAFQ,CAmDZ,EAAA,UAAA,EAAA,CAAAV,QAAY,CAACP,CAAD,CAAM,CAGhB,IAAAE,EAAAsL,EAAA,CAFcxL,CAAA4C,iBAAA6I,CAzRM9J,kBAyRN8J,CAEd,CAHgB,CAMlB,EAAA,UAAA,EAAA,CAAArL,QAAS,CAAC0J,CAAD,CAAM+B,CAAN,CAAWY,CAAX,CAAqBC,CAArB,CAA0B/B,CAA1B,CAAyC,CAChDlF,CAAAC,IAAA,EAAaC,OAAAD,IAAA,CAAY,QAAZ,CAAsBoE,CAAtB,CAA2B+B,CAA3B,CACb,IAAIzK,CAAA,CAAayK,CAAb,CAAJ,GACM7L,CAEA,CAFM,IAAAC,EAAA,CAAe6J,CAAf,CAEN,CAAQ3D,IAAAA,EAAR,GAAAnG,CAHN,EAGyB,CAEf,GAAA0M,CAAA,CAAM,CAAA,CAAA,IAAN,KAAA,CAAa,CAAA,CAAA,CAAA,EAAA,CAwTnB3J,EAAAA,CAAUQ,QAAAQ,cAAA,CAAuB,gBAAvB,CAChBhB,EAAAmB,aAAA,CAAqB,aAArB,CAAoC4F,CAApC,CACA/G,EAAAqG,MAAAyD,QAAA;AAAwB,MACxB9J,EAAA+J,UAAA,CA3TyBL,CAoJnBnJ,EAAAA,CAyKMP,CAzKDH,iBAAA,CA9LXmK,yFA8LW,CACFlK,EAAAA,CAAI,CAAb,KAFiC,IAEjBc,EAAIL,CAAAR,OAFa,CAEFc,CAA/B,CAAkCf,CAAlC,CAAsCc,CAAtC,GAA4CC,CAA5C,CAAgDN,CAAA,CAAGT,CAAH,CAAhD,EAAwDA,CAAA,EAAxD,CACMe,CAAAI,YAQJ,GAPEJ,CAAAI,YAOF,CAPkBJ,CAAAI,YAOlB,EAPkC,kBAOlC,CA+JmB8F,CA/JnB,GALIlG,CAAAK,IAKJ,EAJEL,CAAAM,aAAA,CAAe,KAAf,CAAsB3B,CAAAE,EAAA,CAAoBmB,CAAAO,aAAA,CAAe,KAAf,CAApB,CAmKL2F,CAnKK,CAAtB,CAIF,CAAAlG,CAAAM,aAAA,CAAe,MAAf,CAbe8I,eAaf,CAnBI1J,EAAAA,CAqLKP,CArLAH,iBAAA,CAhMXsC,0DAgMW,CACFrC,EAAAA,CAAI,CAAb,KAAgBc,CAAhB,CAAoBL,CAAAR,OAApB,CAA+BD,CAA/B,CAAmCc,CAAnC,CAAsCd,CAAA,EAAtC,CACEwB,CAAA,CAAkBf,CAAA,CAAGT,CAAH,CAAlB,CA8JIS,EAAAA,CAuBQP,CAvBHH,iBAAA,CAAyB,YAAzB,CACX,KAASC,CAAT,CAAa,CAAb,CAAgBA,CAAhB;AAAoBS,CAAAR,OAApB,CAA+BD,CAAA,EAA/B,CACQe,CAEN,CAFUN,CAAA,CAAGT,CAAH,CAEV,CADMoK,CACN,CADkBrJ,CAAAO,aAAA,CAAe,WAAf,CAClB,EADiD,EACjD,CAAAP,CAAAM,aAAA,CAAe,WAAf,CAA4B3B,CAAAE,EAAA,CAAoBwK,CAApB,CAmBPnD,CAnBO,CAA5B,CArLI7G,EAAAA,CAyMEF,CAzMGH,iBAAA,CApKXmK,mKAoKW,CACX,KAASlK,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBI,CAAAH,OAApB,CAA+BD,CAAA,EAA/B,CACQK,CAON,CAPUD,CAAA,CAAGJ,CAAH,CAOV,CANIK,CAAA2C,KAMJ,GALE3C,CAAA2C,KAKF,CALW,IAAIoE,GAAJ,CAAQ/G,CAAAiB,aAAA,CAAe,MAAf,CAAR,CAqMI2F,CArMJ,CAKX,EAHI5G,CAAAe,IAGJ,GAFEf,CAAAe,IAEF,CAFU,IAAIgG,GAAJ,CAAQ/G,CAAAiB,aAAA,CAAe,KAAf,CAAR,CAkMK2F,CAlML,CAEV,EAAmB,OAAnB,EAAI5G,CAAAC,UAAJ,EACEZ,CAAAa,EAAA,CAAwBF,CAAxB,CA+La4G,CA/Lb,CAGJpH,EAAA,CA4LQK,CA5LR,CA4LiB+G,CA5LjB,CA6LA,EAAA,CAAO/G,CApUK,CACN,CADA/C,CACA,CADM,CACN,GAGE,IAAAO,EAAA,CAAkBP,CAAlB,CAGF,KAAAC,EAAA,CAAe6J,CAAf,CAAA,CAAsB9J,CATD,CALuB,CAmBlD,EAAA,UAAA,EAAA,CAAAM,QAAY,EAAG,CACb,IAAA4M,EAAA,CAAc3J,QAAd,CACAE;OAAAsB,IAAA,CAAY,CACV1B,CAAA,EADU,CAEVqB,CAAA,EAFU,CAAZ,CAAAb,KAAA,CAGQwB,CAHR,CAFa,CAQf,EAAA,UAAA,EAAA,CAAA6H,QAAQ,CAACrL,CAAD,CAAU,CACVoB,CAAAA,CAAKpB,CAAAe,iBAAA,CA1TSjB,kBA0TT,CACX,KAFgB,IAEPkB,EAAI,CAFG,CAEAc,EAAIV,CAAAH,OAFJ,CAEeI,CAA/B,CAAkCL,CAAlC,CAAsCc,CAAtC,GAA4CT,CAA5C,CAAgDD,CAAA,CAAGJ,CAAH,CAAhD,EAAwDA,CAAA,EAAxD,CACEK,CAAAsC,OACA,CADW,IAAAvF,EAAA,CAAeiD,CAAA2C,KAAf,CACX,CAAI3C,CAAAsC,OAAJ,EAAiB2H,CAAAjK,CAAAsC,OAAA2H,EAAjB,GACEjK,CAAAsC,OAAA2H,EAEA,CAFyBjK,CAEzB,CADA,IAAAgK,EAAA,CAAchK,CAAAsC,OAAd,CACA,CAAAtC,CAAAkC,YAAA,CAAclC,CAAAsC,OAAd,CAHF,CAJc,CA8BlB,EAAA,UAAA,EAAA,CAAA9E,QAAW,CAAC0M,CAAD,CAAY,CACrB,IADqB,IACZC,EAAI,CADQ,CACLzD,CAAhB,CAAmByD,CAAnB,CAAuBD,CAAAtK,OAAvB,GAA4C8G,CAA5C,CAAgDwD,CAAA,CAAUC,CAAV,CAAhD,EAA+DA,CAAA,EAA/D,CACE,GAAIzD,CAAA0D,WAAJ,CACE,IADgB,IACPzK,EAAI,CADG,CACAc,EAAIiG,CAAA0D,WAAAxK,OAApB,CAAyCD,CAAzC,CAA6Cc,CAA7C,CAAgDd,CAAA,EAAhD,CACM+G,CAAA0D,WAAA,CAAazK,CAAb,CAAJ,EAAuBzB,CAAA,CAAawI,CAAA0D,WAAA,CAAazK,CAAb,CAAb,CAAvB,EACE,IAAA3C,EAAA0L,EAAA,CAAqBhC,CAAA0D,WAAA,CAAazK,CAAb,CAArB,CALa,CAiBzB,KAAMpB,EAAU8L,OAAAzF,UAAA0F,QAAV/L,EACJ8L,OAAAzF,UAAA2F,gBADIhM;AAEJ8L,OAAAzF,UAAA4F,mBAFIjM,EAGJ8L,OAAAzF,UAAA6F,kBAHIlM,EAIJ8L,OAAAzF,UAAA8F,iBAJInM,EAKJ8L,OAAAzF,UAAA+F,sBALF,CAgBM9L,EAAQ,CAAC,QAAD,CAAW,KAAX,CAAkB,MAAlB,CAA0B,KAA1B,CAAiC,OAAjC,CAhBd,CAgRMiD,EAAO,SAAAkF,KAAA,CAAe4D,SAAAC,UAAf,CAhRb,CAiRM9I,EAAS,CAACD,CAAVC,EAAkB,YAAAiF,KAAA,CAAkB4D,SAAAC,UAAlB,CAjRxB,CAkRMvG,EAAqBxC,CAAA,CAAO,UAAP,CAAoB,aA0D/C,IAAIyB,CAAJ,CAgBEjG,CAAA,IAAIC,gBAAJ,CAZAuN,QAAwB,CAACZ,CAAD,CAAY,CAClC,IADkC,IACzBC,EAAI,CADqB,CAClBzD,CAAhB,CAAmByD,CAAnB,CAAuBD,CAAAtK,OAAvB,GAA4C8G,CAA5C,CAAgDwD,CAAA,CAAUC,CAAV,CAAhD,EAA+DA,CAAA,EAA/D,CACE,GAAIzD,CAAA0D,WAAJ,CACE,IADgB,IACPzK,EAAI,CADG,CACAc,EAAIiG,CAAA0D,WAAAxK,OAApB,CAAyCD,CAAzC,CAA6Cc,CAA7C,CAAgDd,CAAA,EAAhD,CACM+G,CAAA0D,WAAA,CAAazK,CAAb,CAAJ,EAAuBzB,CAAA,CAAawI,CAAA0D,WAAA,CAAazK,CAAb,CAAb,CAAvB,EACEwB,CAAA,CAA4CuF,CAAA0D,WAAA,CAAazK,CAAb,CAA5C,CAL0B,CAYpC,CAAArC,SAAA,CAA8C+C,QAAA5C,KAA9C;AAA6D,CAC3DC,UAAW,CAAA,CADgD,CAA7D,CAMA,CAAC,QAAQ,EAAG,CACV,GAA4B,SAA5B,GAAI2C,QAAAmD,WAAJ,CAEE,IADA,IAAMkB,EAAUrE,QAAAX,iBAAA,CA5sBEjB,kBA4sBF,CAAhB,CACSkB,EAAI,CADb,CACgBc,EAAIiE,CAAA9E,OAApB,CAAoCD,CAApC,CAAwCc,CAAxC,CAA2Cd,CAAA,EAA3C,CACEwB,CAAA,CAAkBuD,CAAA,CAAQ/E,CAAR,CAAlB,CAJM,CAAZ,EAtBF,KA+BO,CAELoL,IAASA,EAATA,QAAkB,EAAG,CACnB,IAAIlO,CAAJ,CAAawD,QAAb,CADmB,CAIO,WAA5B,GAAIA,QAAAmD,WAAJ,EAC2B,aAD3B,GACGnD,QAAAmD,WADH,EAC6CwH,CAAAnF,MAAAmF,YAD7C,CAEED,CAAA,EAFF,CAIE1K,QAAAgD,iBAAA,CAA0B,kBAA1B,CAA8C0H,CAA9C,CAVG,CAkBP9G,CAAA,CAAU,QAAQ,CAACjB,CAAD,CAAS,CACzB3C,QAAAuC,cAAA,CAAuB,IAAIC,WAAJ,CAAgB,mBAAhB,CAAqC,CAC1DE,WAAY,CAAA,CAD8C,CAE1DD,QAAS,CAAA,CAFiD,CAG1DE,OAAQA,CAHkD,CAArC,CAAvB,CADyB,CAA3B,CASArG,EAAA4G,UAAA,CAAkBA,CAClB5G,EAAAsH,UAAA,CAAkBA,CAlvBH,CAAhB,CAAD,CAovBG4B,MAAAoF,YApvBH,CAovByBpF,MAAAoF,YApvBzB;AAovB+C,EApvB/C","file":"html-imports.min.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n(function(scope) {\n\n  /********************* base setup *********************/\n  const IMPORT_SELECTOR = 'link[rel=import]';\n  const useNative = Boolean('import' in document.createElement('link'));\n  const flags = {\n    bust: false,\n    log: false\n  };\n\n  // Polyfill `currentScript` for browsers without it.\n  let currentScript = null;\n  if ('currentScript' in document === false) {\n    Object.defineProperty(document, 'currentScript', {\n      get: function() {\n        return currentScript ||\n          // NOTE: only works when called in synchronously executing code.\n          // readyState should check if `loading` but IE10 is\n          // interactive when scripts run so we cheat.\n          (document.readyState !== 'complete' ?\n            document.scripts[document.scripts.length - 1] : null);\n      },\n      configurable: true\n    });\n  }\n\n  // Polyfill document.baseURI for browsers without it.\n  if (!document.baseURI) {\n    Object.defineProperty(document, 'baseURI', {\n      get: function() {\n        const base = /** @type {HTMLBaseElement} */ (document.querySelector('base'));\n        return base ? base.href : window.location.href;\n      },\n      configurable: true\n    });\n  }\n\n  /********************* path fixup *********************/\n  const ABS_URL_TEST = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\n  const CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  const CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n\n  // path fixup: style elements in imports must be made relative to the main\n  // document. We fixup url's in url() and @import.\n  const Path = {\n    resolveUrlsInStyle: function(style, linkUrl) {\n      style.textContent = Path.resolveUrlsInCssText(style.textContent, linkUrl);\n    },\n\n    resolveUrlsInCssText: function(cssText, linkUrl) {\n      let r = Path.replaceUrls(cssText, linkUrl, CSS_URL_REGEXP);\n      r = Path.replaceUrls(r, linkUrl, CSS_IMPORT_REGEXP);\n      return r;\n    },\n\n    replaceUrls: function(text, linkUrl, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        let urlPath = url.replace(/[\"']/g, '');\n        if (linkUrl) {\n          urlPath = (new URL(urlPath, linkUrl)).href;\n        }\n        return pre + '\\'' + urlPath + '\\'' + post;\n      });\n    },\n\n    replaceAttrUrl: function(text, linkUrl) {\n      if (text && ABS_URL_TEST.test(text)) {\n        return text;\n      } else {\n        return new URL(text, linkUrl).href;\n      }\n    }\n  };\n\n  /********************* Xhr processor *********************/\n  const Xhr = {\n\n    async: true,\n\n    /**\n     * @param {!string} url\n     * @param {!function(boolean, ?, string=)} callback\n     * @return {XMLHttpRequest}\n     */\n    load: function(url, callback) {\n      const request = new XMLHttpRequest();\n      if (flags.bust) {\n        url += '?' + Math.random();\n      }\n      request.open('GET', url, Xhr.async);\n      request.addEventListener('readystatechange', (e) => {\n        if (request.readyState === 4) {\n          // Servers redirecting an import can add a Location header to help us\n          // polyfill correctly.\n          let redirectedUrl = undefined;\n          try {\n            const locationHeader = request.getResponseHeader('Location');\n            if (locationHeader) {\n              // Relative or full path.\n              redirectedUrl = (locationHeader.substr(0, 1) === '/') ?\n                location.origin + locationHeader : locationHeader;\n            }\n          } catch (e) {\n            console.error(e.message);\n          }\n          const resource = (request.response || request.responseText);\n          callback(!Xhr._ok(request), resource, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    },\n\n    _ok: function(request) {\n      return (request.status >= 200 && request.status < 300) ||\n        (request.status === 304) ||\n        (request.status === 0);\n    }\n  };\n\n  /********************* loader *********************/\n  // This loader supports a dynamic list of urls\n  // and an oncomplete callback that is called when the loader is done.\n  // NOTE: The polyfill currently does *not* need this dynamism or the\n  // onComplete concept. Because of this, the loader could be simplified\n  // quite a bit.\n  class Loader {\n    constructor(onLoad, onComplete) {\n      this.cache = {};\n      this.onload = onLoad;\n      this.oncomplete = onComplete;\n      this.inflight = 0;\n      this.pending = {};\n    }\n\n    addNodes(nodes) {\n      // number of transactions to complete\n      this.inflight += nodes.length;\n      // commence transactions\n      for (let i = 0, l = nodes.length, n;\n        (i < l) && (n = nodes[i]); i++) {\n        this.require(n);\n      }\n      // anything to do?\n      this.checkDone();\n    }\n\n    addNode(node) {\n      // number of transactions to complete\n      this.inflight++;\n      // commence transactions\n      this.require(node);\n      // anything to do?\n      this.checkDone();\n    }\n\n    require(elt) {\n      const url = elt.src || elt.href;\n      // deduplication\n      if (!this.dedupe(url, elt)) {\n        // fetch this resource\n        this.fetch(url, elt);\n      }\n    }\n\n    dedupe(url, elt) {\n      if (this.pending[url]) {\n        // add to list of nodes waiting for inUrl\n        this.pending[url].push(elt);\n        // don't need fetch\n        return true;\n      }\n      let resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        // finished this transaction\n        this.tail();\n        // don't need fetch\n        return true;\n      }\n      // first node waiting for inUrl\n      this.pending[url] = [elt];\n      // need fetch (not a dupe)\n      return false;\n    }\n\n    fetch(url, elt) {\n      flags.log && console.log('fetch', url, elt);\n      if (!url) {\n        this.receive(url, elt, true, 'error: href must be specified');\n      } else if (url.match(/^data:/)) {\n        // Handle Data URI Scheme\n        const pieces = url.split(',');\n        const header = pieces[0];\n        let body = pieces[1];\n        if (header.indexOf(';base64') > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        this.receive(url, elt, false, body);\n      } else {\n        Xhr.load(url, (error, resource, redirectedUrl) =>\n          this.receive(url, elt, error, resource, redirectedUrl));\n      }\n    }\n\n    /**\n     * @param {!string} url\n     * @param {!Element} elt\n     * @param {boolean} err\n     * @param {string=} resource\n     * @param {string=} redirectedUrl\n     */\n    receive(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      const $p = this.pending[url];\n      for (let i = 0, l = $p.length, p;\n        (i < l) && (p = $p[i]); i++) {\n        // If url was redirected, use the redirected location so paths are\n        // calculated relative to that.\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    }\n\n    tail() {\n      --this.inflight;\n      this.checkDone();\n    }\n\n    checkDone() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  }\n\n  /********************* importer *********************/\n\n  const stylesSelector = [\n    'style:not([type])',\n    'link[rel=stylesheet][href]:not([type])'\n  ].join(',');\n\n  const stylesInImportsSelector = [\n    `${IMPORT_SELECTOR} style:not([type])`,\n    `${IMPORT_SELECTOR} link[rel=stylesheet][href]:not([type])`\n  ].join(',');\n\n  const scriptsSelector = [\n    'script:not([type])',\n    'script[type=\"application/javascript\"]',\n    'script[type=\"text/javascript\"]'\n  ].join(',');\n\n  const importsSelectors = [\n    IMPORT_SELECTOR,\n    stylesSelector,\n    scriptsSelector\n  ].join(',');\n\n  // importer\n  // highlander object to manage loading of imports\n  // for any document, importer:\n  // - loads any linked import documents (with deduping)\n  // - whenever an import is loaded, prompts the parser to try to parse\n  // - observes imported documents for new elements (these are handled via the\n  // dynamic importer)\n  class Importer {\n    constructor(doc) {\n      this.documents = {};\n      this._loader = new Loader(\n        this._onLoaded.bind(this), this._onLoadedAll.bind(this)\n      );\n      this._loadSubtree(doc);\n      // Observe only document head\n      new MutationObserver(this._onMutation.bind(this)).observe(doc.head, {\n        childList: true\n      });\n    }\n\n    _loadSubtree(doc) {\n      const nodes = doc.querySelectorAll(IMPORT_SELECTOR);\n      // add these nodes to loader's queue\n      this._loader.addNodes(nodes);\n    }\n\n    _onLoaded(url, elt, resource, err, redirectedUrl) {\n      flags.log && console.log('loaded', url, elt);\n      if (isImportLink(elt)) {\n        let doc = this.documents[url];\n        // if we've never seen a document at this url\n        if (doc === undefined) {\n          // generate an HTMLDocument from data\n          doc = err ? null : makeDocument(resource, redirectedUrl || url);\n          if (doc) {\n            // note, we cannot use MO to detect parsed nodes because\n            // SD polyfill does not report these as mutations.\n            this._loadSubtree(doc);\n          }\n          // cache document\n          this.documents[url] = doc;\n        }\n      }\n    }\n\n    _onLoadedAll() {\n      this._flatten(document);\n      Promise.all([\n        runScripts(),\n        waitForStyles()\n      ]).then(fireEvents);\n    }\n\n    _flatten(element) {\n      const n$ = element.querySelectorAll(IMPORT_SELECTOR);\n      for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n        n.import = this.documents[n.href];\n        if (n.import && !n.import.__firstImport) {\n          n.import.__firstImport = n;\n          this._flatten(n.import);\n          n.appendChild(n.import);\n          if (document.contains(n.parentNode)) {\n            // TODO(sorvell): need to coordinate with observer in document.head.\n            //this.observe(n.import);\n          }\n        }\n      }\n    }\n\n    _observe(element) {\n      if (element.__importObserver) {\n        return;\n      }\n      element.__importObserver = new MutationObserver(this._onMutation.bind(this));\n      element.__importObserver.observe(element, {\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    _onMutation(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        if (m.addedNodes) {\n          for (let i = 0, l = m.addedNodes.length; i < l; i++) {\n            if (m.addedNodes[i] && isImportLink(m.addedNodes[i])) {\n              this._loader.addNode(m.addedNodes[i]);\n            }\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * @type {Function}\n   */\n  const MATCHES = Element.prototype.matches ||\n    Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   */\n  function isImportLink(node) {\n    return node.nodeType === Node.ELEMENT_NODE && MATCHES.call(node, IMPORT_SELECTOR);\n  }\n\n  /********************* vulcanize style inline processing  *********************/\n  const attrs = ['action', 'src', 'href', 'url', 'style'];\n\n  function fixUrlAttributes(element, base) {\n    attrs.forEach((a) => {\n      const at = element.attributes[a];\n      const v = at && at.value;\n      if (v && (v.search(/({{|\\[\\[)/) < 0)) {\n        at.value = (a === 'style') ?\n          Path.resolveUrlsInCssText(v, base) :\n          Path.replaceAttrUrl(v, base);\n      }\n    });\n  }\n\n  function fixUrlsInTemplate(template, base) {\n    const content = template.content;\n    if (!content) { // Template not supported.\n      return;\n    }\n    const n$ = content.querySelectorAll('style, form[action], [src], [href], [url], [style]');\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      } else {\n        fixUrlAttributes(n, base);\n      }\n    }\n    fixUrlsInTemplates(content, base);\n  }\n\n  function fixUrlsInTemplates(element, base) {\n    const t$ = element.querySelectorAll('template');\n    for (let i = 0; i < t$.length; i++) {\n      fixUrlsInTemplate(t$[i], base);\n    }\n  }\n\n  function fixUrls(element, base) {\n    const n$ = element.querySelectorAll(importsSelectors);\n    for (let i = 0; i < n$.length; i++) {\n      const n = n$[i];\n      if (n.href) {\n        n.href = new URL(n.getAttribute('href'), base);\n      }\n      if (n.src) {\n        n.src = new URL(n.getAttribute('src'), base);\n      }\n      if (n.localName == 'style') {\n        Path.resolveUrlsInStyle(n, base);\n      }\n    }\n    fixUrlsInTemplates(element, base);\n  }\n\n  function markStyles(element) {\n    const s$ = element.querySelectorAll(stylesSelector);\n    for (let i = 0, l = s$.length; i < l; i++) {\n      whenElementLoaded(s$[i]);\n    }\n  }\n\n  const scriptType = 'import-script';\n\n  function markScripts(element, url) {\n    const s$ = element.querySelectorAll(scriptsSelector);\n    for (let i = 0, l = s$.length, o; i < l && (o = s$[i]); i++) {\n      if (o.textContent) {\n        o.textContent = o.textContent + `\\n//# sourceURL=${url}`;\n      }\n      if (o.src) {\n        o.setAttribute('src', Path.replaceAttrUrl(o.getAttribute('src'), url));\n      }\n      // NOTE: we override the type here, might need to keep track of original\n      // type and apply it to clone when running the script.\n      o.setAttribute('type', scriptType);\n    }\n  }\n\n  /**\n   * Replaces all the imported scripts with a clone in order to execute them.\n   * Updates the `currentScript`.\n   */\n  function runScripts() {\n    const s$ = document.querySelectorAll(`script[type=${scriptType}]`);\n    let promise = Promise.resolve();\n    for (let i = 0, l = s$.length, o; i < l && (o = s$[i]); i++) {\n      promise = promise.then(() => {\n        const c = document.createElement('script');\n        c.textContent = o.textContent;\n        if (o.src) {\n          c.setAttribute('src', o.getAttribute('src'));\n        }\n        // Listen for load/error events before adding the clone to the document.\n        const whenLoadedPromise = whenElementLoaded(c);\n        // Update currentScript and replace original with clone script.\n        currentScript = c;\n        o.parentNode.replaceChild(c, o);\n        // After is loaded, reset currentScript.\n        return whenLoadedPromise.then((script) => {\n          if (script === currentScript) {\n            currentScript = null;\n          }\n          return script;\n        });;\n      });\n    }\n    return promise.then(() => {\n      return s$;\n    });\n  }\n\n  function waitForStyles() {\n    const pendingStyles = document.querySelectorAll(stylesInImportsSelector);\n    const promises = [];\n    for (let i = 0; i < pendingStyles.length; i++) {\n      promises.push(whenElementLoaded(pendingStyles[i]));\n    }\n    return Promise.all(promises).then(() => {\n      // IE and Edge require styles/links to be siblings in order to apply correctly.\n      if ((isIE || isEdge) && pendingStyles.length) {\n        const n$ = document.head.querySelectorAll(stylesSelector);\n        for (let i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {\n          n.parentNode.removeChild(n);\n          document.head.appendChild(n);\n        }\n      }\n      return pendingStyles;\n    });\n  }\n\n  function fireEvents() {\n    const n$ = /** @type {!NodeList<!HTMLLinkElement>} */\n      (document.querySelectorAll(IMPORT_SELECTOR));\n    // Inverse order to have events firing bottom-up.\n    for (let i = n$.length - 1, n; i >= 0 && (n = n$[i]); i--) {\n      // Don't fire twice same event.\n      if (!n.__loaded) {\n        const eventType = n.import ? 'load' : 'error';\n        flags.log && console.warn('fire', eventType, n.href);\n        // Listens for load/error event and sets __loaded.\n        whenElementLoaded(n);\n        n.dispatchEvent(new CustomEvent(eventType, {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        }));\n      }\n    }\n  }\n\n  /**\n   * Waits for an element to finish loading. If already done loading, it will\n   * mark the elemnt accordingly.\n   * @param {!Element} element\n   * @return {Promise}\n   */\n  function whenElementLoaded(element) {\n    if (!element.__loadPromise) {\n      if (isElementLoaded(element)) {\n        element.__loaded = true;\n        element.__errored = false;\n        element.__loadPromise = Promise.resolve(element);\n      } else {\n        element.__loadPromise = new Promise(resolve => {\n          element.addEventListener('load', () => {\n            element.__loaded = true;\n            element.__errored = false;\n            resolve(element);\n          });\n          element.addEventListener('error', () => {\n            element.__loaded = true;\n            element.__errored = true;\n            resolve(element);\n          });\n        });\n      }\n    }\n    return element.__loadPromise;\n  }\n\n  /**\n   * @param {!Element} element\n   * @return {boolean}\n   */\n  function isElementLoaded(element) {\n    let isLoaded = false;\n    if (useNative && isImportLink(element) && element.import &&\n      element.import.readyState !== 'loading') {\n      isLoaded = true;\n    } else if (isIE && element.localName === 'style') {\n      // NOTE: IE does not fire \"load\" event for styles that have already\n      // loaded. This is in violation of the spec, so we try our hardest to\n      // work around it.\n      // If there's not @import in the textContent, assume it has loaded\n      if (element.textContent.indexOf('@import') == -1) {\n        isLoaded = true;\n        // if we have a sheet, we have been parsed\n      } else if (element.sheet) {\n        isLoaded = true;\n        const csr = element.sheet.cssRules;\n        // search the rules for @import's\n        for (let i = 0, l = csr ? csr.length : 0; i < l && isLoaded; i++) {\n          if (csr[i].type === CSSRule.IMPORT_RULE) {\n            // if every @import has resolved, fake the load\n            isLoaded = Boolean(csr[i].styleSheet);\n          }\n        }\n      }\n    } else if (element.localName === 'script' && !element.src) {\n      isLoaded = true;\n    }\n    return isLoaded;\n  }\n\n  function fixDomModules(element, url) {\n    const s$ = element.querySelectorAll('dom-module');\n    for (let i = 0; i < s$.length; i++) {\n      const o = s$[i];\n      const assetpath = o.getAttribute('assetpath') || '';\n      o.setAttribute('assetpath', Path.replaceAttrUrl(assetpath, url));\n    }\n  }\n\n  function makeDocument(resource, url) {\n    // TODO(valdrin): better to use a disconnected document here so that\n    // elements don't upgrade until inserted into main document,\n    // however, this is blocked on https://bugs.webkit.org/show_bug.cgi?id=165617\n    // let doc = document.implementation.createHTMLDocument();\n    const content = document.createElement('import-content');\n    content.setAttribute('import-href', url);\n    content.style.display = 'none';\n    content.innerHTML = resource;\n\n    markScripts(content, url);\n    // Ensure we add load/error listeners before modifying urls or appending\n    // these to the main document.\n    markStyles(content);\n    // TODO(sorvell): this is specific to users (Polymer) of the dom-module element.\n    fixDomModules(content, url);\n    fixUrls(content, url);\n    return content;\n  }\n\n  /**\n    Add support for the `HTMLImportsLoaded` event and the `HTMLImports.whenReady`\n    method. This api is necessary because unlike the native implementation,\n    script elements do not force imports to resolve. Instead, users should wrap\n    code in either an `HTMLImportsLoaded` handler or after load time in an\n    `HTMLImports.whenReady(callback)` call.\n\n    NOTE: This module also supports these apis under the native implementation.\n    Therefore, if this file is loaded, the same code can be used under both\n    the polyfill and native implementation.\n   */\n\n  const isIE = /Trident/.test(navigator.userAgent);\n  const isEdge = !isIE && /Edge\\/\\d./i.test(navigator.userAgent);\n  const requiredReadyState = isIE ? 'complete' : 'interactive';\n  const READY_EVENT = 'readystatechange';\n\n  // call a callback when all HTMLImports in the document at call time\n  // (or at least document ready) have loaded.\n  // 1. ensure the document is in a ready state (has dom), then\n  // 2. watch for loading of imports and call callback when done\n  function whenReady(callback, doc) {\n    doc = doc || document;\n    // if document is loading, wait and try again\n    return whenDocumentReady(doc).then(watchImportsLoad).then((importInfo) => {\n      callback && callback(importInfo);\n      return importInfo;\n    });\n  }\n\n  function isDocumentReady(doc) {\n    return (doc.readyState === 'complete' ||\n      doc.readyState === requiredReadyState);\n  }\n\n  // call <callback> when we ensure the document is in a ready state\n  function whenDocumentReady(doc) {\n    if (isDocumentReady(doc)) {\n      return Promise.resolve(doc);\n    }\n    return new Promise((resolve) => {\n      doc.addEventListener(READY_EVENT, function checkReady() {\n        if (isDocumentReady(doc)) {\n          doc.removeEventListener(READY_EVENT, checkReady);\n          resolve(doc);\n        }\n      });\n    });\n  }\n\n  // call <callback> when we ensure all imports have loaded\n  function watchImportsLoad(doc) {\n    let imports = doc.querySelectorAll(IMPORT_SELECTOR);\n    // only non-nested imports\n    imports = Array.prototype.slice.call(imports).filter((imp) => {\n      return !MATCHES.call(imp, `${IMPORT_SELECTOR} ${IMPORT_SELECTOR}`);\n    });\n    return Promise.all(imports.map(whenElementLoaded)).then(() => {\n      const newImports = [];\n      const errorImports = [];\n      imports.forEach((imp) => {\n        (imp.__errored ? errorImports : newImports).push(imp);\n      });\n      return /** @type {!HTMLImportInfo} */ ({\n        allImports: imports,\n        loadedImports: newImports,\n        errorImports: errorImports\n      });\n    });\n  }\n\n  // make `whenReady` work with native HTMLImports\n  if (useNative) {\n    /**\n     * @param {Array<MutationRecord>} mutations\n     */\n    function handleMutations(mutations) {\n      for (let j = 0, m; j < mutations.length && (m = mutations[j]); j++) {\n        if (m.addedNodes) {\n          for (let i = 0, l = m.addedNodes.length; i < l; i++) {\n            if (m.addedNodes[i] && isImportLink(m.addedNodes[i])) {\n              whenElementLoaded( /** @type {!Element} */ (m.addedNodes[i]));\n            }\n          }\n        }\n      }\n    }\n\n    new MutationObserver(handleMutations).observe(document.head, {\n      childList: true\n    });\n\n    // make sure to catch any imports that are in the process of loading\n    // when this script is run.\n    (function() {\n      if (document.readyState === 'loading') {\n        const imports = document.querySelectorAll(IMPORT_SELECTOR);\n        for (let i = 0, l = imports.length; i < l; i++) {\n          whenElementLoaded(imports[i]);\n        }\n      }\n    })();\n\n  } else {\n\n    function bootstrap() {\n      new Importer(document);\n    }\n\n    if (document.readyState === 'complete' ||\n      (document.readyState === 'interactive' && !window.attachEvent)) {\n      bootstrap();\n    } else {\n      document.addEventListener('DOMContentLoaded', bootstrap);\n    }\n  }\n\n  // Fire the 'HTMLImportsLoaded' event when imports in document at load time\n  // have loaded. This event is required to simulate the script blocking\n  // behavior of native imports. A main document script that needs to be sure\n  // imports have loaded should wait for this event.\n  whenReady(function(detail) {\n    document.dispatchEvent(new CustomEvent('HTMLImportsLoaded', {\n      cancelable: true,\n      bubbles: true,\n      detail: detail\n    }));\n  });\n\n  // exports\n  scope.useNative = useNative;\n  scope.whenReady = whenReady;\n\n})(window.HTMLImports = (window.HTMLImports || {}));\n"]}